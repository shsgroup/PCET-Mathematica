(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    994518,      20339]
NotebookOptionsPosition[    983332,      20005]
NotebookOutlinePosition[    984163,      20033]
CellTagsIndexPosition[    984120,      20030]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Overlap Integrals for Non-adiabatic PCET rate \
expressions",
 FontSize->36]], "Title",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.41614715128258*^9, 3.416147157531111*^9}, {
  3.421069658438429*^9, 3.421069666073114*^9}, {3.421081269737365*^9, 
  3.421081289135696*^9}, {3.431378500831264*^9, 3.431378504588791*^9}, {
  3.4324048732019577`*^9, 3.4324049051202717`*^9}, {3.633483173821536*^9, 
  3.6334831960238447`*^9}, {3.651436489951137*^9, 3.651436498868829*^9}, {
  3.651701982933207*^9, 3.65170199290775*^9}, {3.670771599358822*^9, 
  3.670771603769185*^9}, {3.703620015203878*^9, 3.703620022862167*^9}, {
  3.706965416848572*^9, 3.70696543126746*^9}},
 FontSize->72,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input"],

Cell[BoxData["\<\"/Users/souda/Documents/Mathematica notebooks\"\>"], "Output",
 CellChangeTimes->{3.683393237333733*^9, 3.683568195906167*^9, 
  3.6840853957036467`*^9, 3.684091857173656*^9, 3.684093153798366*^9, 
  3.6841688457717333`*^9, 3.6841693799394903`*^9, 3.684254684270396*^9, 
  3.684287601700995*^9, 3.684858773938466*^9, 3.68522589846074*^9, 
  3.685313773501505*^9, 3.685398922409114*^9, 3.685462296846455*^9, 
  3.685656039859997*^9, 3.6870428254035892`*^9, 3.68710748914395*^9, 
  3.6877077159348717`*^9, 3.688258744309658*^9, 3.706965439101866*^9, 
  3.71017274844372*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Constants", "Section",
 CellChangeTimes->{{3.4324050030590363`*^9, 3.432405006689521*^9}}],

Cell[CellGroupData[{

Cell["Unit conversions", "Subsection",
 CellChangeTimes->{{3.432405022244547*^9, 3.432405029729628*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bohr2a", "=", "0.529177"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a2bohr", "=", 
   FractionBox["1", "bohr2a"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"au2kcal", "=", "627.5095"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kcal2au", "=", 
   FractionBox["1", "au2kcal"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ev2cm", "=", "8065.54477"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cm2ev", " ", "=", " ", 
   RowBox[{"1", "/", "ev2cm"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"au2ev", "=", "27.2113"}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ev2au", " ", "=", " ", 
   RowBox[{"1", "/", "au2ev"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cm2au", "=", 
    RowBox[{"cm2ev", "*", "ev2au"}]}], ";"}], 
  "     "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"au2cm", "=", 
   RowBox[{"1", "/", "cm2au"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"au2ps", "=", 
   RowBox[{"2.4189", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "5"}]]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.432404942582735*^9, 3.432404943043468*^9}, {
  3.583084684592235*^9, 3.5830846913593082`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Universal constants", "Subsection",
 CellChangeTimes->{{3.432405084570436*^9, 3.432405089090247*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[HBar]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hbarps", "=", 
   FractionBox["0.047685388", 
    RowBox[{"au2kcal", " ", "\[Pi]"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dalton", "=", "1822.8880"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]H", "=", "1836.1526675"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]D", "=", "3670.4829550"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kb", "=", 
   RowBox[{"3.16683", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.432405057253295*^9, {3.4324050930335627`*^9, 3.432405093512401*^9}, {
   3.583084715566807*^9, 3.5830847314391003`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Accuracy settings", "Subsection",
 CellChangeTimes->{{3.432405183131896*^9, 3.4324051867874203`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AccN", "=", "50"}], ";"}]], "Input",
 CellChangeTimes->{{3.4324051894737577`*^9, 3.432405193045574*^9}, {
  3.432456032976198*^9, 3.4324560358798733`*^9}, {3.43274819943859*^9, 
  3.432748199726054*^9}, {3.64293208741191*^9, 3.642932087713664*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Morse potentials for D-H (reactant) and A-H (product) bonds", "Section",
 CellChangeTimes->{{3.416139753242919*^9, 3.41613976415156*^9}, {
  3.432920308017187*^9, 3.432920337645526*^9}}],

Cell[CellGroupData[{

Cell["Proton transfer interface geometry", "Subsection",
 CellChangeTimes->{{3.432405118104979*^9, 3.432405130482913*^9}, 
   3.432405258324328*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RCH", "=", "0.98"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ROH", "=", "0.97"}], ";"}]}], "Input",
 CellChangeTimes->{{3.4311115784337673`*^9, 3.431111605556913*^9}, {
  3.431111672500906*^9, 3.431111672549241*^9}, {3.6429109934743977`*^9, 
  3.64291100221721*^9}, {3.670771689679001*^9, 3.670771694215871*^9}, {
  3.710172767658622*^9, 3.710172772234518*^9}, {3.7101849611668587`*^9, 
  3.710184985829973*^9}}],

Cell["\<\
Distance between minima of reactant and product potential energy curves (R0) \
in Bohrs.\
\>", "Text",
 CellChangeTimes->{{3.432405152589912*^9, 3.432405170947118*^9}, {
  3.71018301515618*^9, 3.710183029386857*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"R0", "[", "RDA_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"RDA", "-", "RCH", "-", "ROH"}], ")"}], "a2bohr"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RDA", "[", "R_", "]"}], ":=", 
   RowBox[{
    RowBox[{"R", " ", "bohr2a"}], "+", "RCH", "+", "ROH"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.431199748498394*^9, 3.431199776598961*^9}, {
  3.43247011502418*^9, 3.432470119678247*^9}, {3.671312822016446*^9, 
  3.671312901974229*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Morse parameters
(1 - reactant; 2 - product)\
\>", "Subsection",
 CellChangeTimes->{{3.4324052718946*^9, 3.432405278660528*^9}, {
  3.4324053426634893`*^9, 3.4324053534452868`*^9}}],

Cell[TextData[{
 "\[Beta] parameter ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["\[Angstrom]", 
     RowBox[{"-", "1"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") from frequency \[Omega] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["cm", 
     RowBox[{"-", "1"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "), mass \[Mu] (amu), and dissociation energy D (kcal/mol)."
}], "Text",
 CellChangeTimes->{{3.710183110805416*^9, 3.710183167878668*^9}, {
  3.710183263923561*^9, 3.7101832781819983`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]Morse", "[", 
    RowBox[{"\[Omega]_", ",", "D_", ",", "\[Mu]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Omega]", " ", "cm2au", 
      SqrtBox[
       FractionBox[
        RowBox[{"\[Mu]", " ", "Dalton"}], 
        RowBox[{"2", "D", " ", "kcal2au"}]]]}], ")"}], 
    FractionBox["1", "bohr2a"]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.642931683992181*^9, 3.6429316849683228`*^9}, {
  3.64293173182236*^9, 3.6429317358321877`*^9}, {3.642931767783293*^9, 
  3.642931773550914*^9}, {3.642931846940556*^9, 3.642931891129095*^9}, {
  3.7101830939059353`*^9, 3.71018309828902*^9}, {3.71018318359333*^9, 
  3.71018319023806*^9}, {3.7101832318687763`*^9, 3.710183257467939*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"D1", "=", 
   RowBox[{"49.7", " ", "kcal2au"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]1", "=", 
   FractionBox["3.32", "a2bohr"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Reactant proton vibrational frequency: \>\"", ",", 
    RowBox[{"Panel", "[", 
     RowBox[{"au2cm", " ", "\[Beta]1", 
      SqrtBox[
       FractionBox[
        RowBox[{"2", "D1"}], "\[Mu]H"]]}], "]"}], ",", 
    "\"\< \!\(\*SuperscriptBox[\(cm\), \(-1\)]\)\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Reactant deuteron vibrational frequency: \>\"", ",", 
    RowBox[{"Panel", "[", 
     RowBox[{"au2cm", " ", "\[Beta]1", 
      SqrtBox[
       FractionBox[
        RowBox[{"2", "D1"}], "\[Mu]D"]]}], "]"}], ",", 
    "\"\< \!\(\*SuperscriptBox[\(cm\), \(-1\)]\)\>\""}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.432405287646977*^9, {3.432405323848699*^9, 3.432405327127841*^9}, {
   3.432405788279807*^9, 3.43240587244914*^9}, {3.4324097731862307`*^9, 
   3.432409784991407*^9}, {3.432476549267537*^9, 3.432476560066359*^9}, {
   3.642911008985237*^9, 3.6429110097534027`*^9}, {3.642931909345701*^9, 
   3.642931925920121*^9}, {3.6707717066972227`*^9, 3.670771707167594*^9}, 
   3.6707718003048763`*^9, {3.685225917589484*^9, 3.685225930580868*^9}, {
   3.7101729236698713`*^9, 3.710173015675219*^9}, {3.710184992671281*^9, 
   3.710185003933563*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Reactant proton vibrational frequency: \"\>", 
   "\[InvisibleSpace]", 
   PanelBox["3581.382324433513`"], 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SuperscriptBox[\\(cm\\), \
\\(-1\\)]\\)\"\>"}],
  SequenceForm["Reactant proton vibrational frequency: ", 
   Panel[3581.382324433513], " \!\(\*SuperscriptBox[\(cm\), \(-1\)]\)"],
  Editable->False]], "Print",
 CellChangeTimes->{3.710173018597025*^9, 3.7101849688559237`*^9, 
  3.7101850080295143`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Reactant deuteron vibrational frequency: \"\>", 
   "\[InvisibleSpace]", 
   PanelBox["2533.0483177113924`"], 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SuperscriptBox[\\(cm\\), \
\\(-1\\)]\\)\"\>"}],
  SequenceForm["Reactant deuteron vibrational frequency: ", 
   Panel[2533.0483177113924`], " \!\(\*SuperscriptBox[\(cm\), \(-1\)]\)"],
  Editable->False]], "Print",
 CellChangeTimes->{3.710173018597025*^9, 3.7101849688559237`*^9, 
  3.71018500803855*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"D2", "=", 
   RowBox[{"68.96", " ", "kcal2au"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]2", "=", 
   FractionBox["2.828", "a2bohr"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Product proton vibrational frequency: \>\"", ",", 
    RowBox[{"Panel", "[", 
     RowBox[{"au2cm", " ", "\[Beta]2", 
      SqrtBox[
       FractionBox[
        RowBox[{"2", "D2"}], "\[Mu]H"]]}], "]"}], ",", 
    "\"\< \!\(\*SuperscriptBox[\(cm\), \(-1\)]\)\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Product deuteron vibrational frequency: \>\"", ",", 
    RowBox[{"Panel", "[", 
     RowBox[{"au2cm", " ", "\[Beta]2", 
      SqrtBox[
       FractionBox[
        RowBox[{"2", "D2"}], "\[Mu]D"]]}], "]"}], ",", 
    "\"\< \!\(\*SuperscriptBox[\(cm\), \(-1\)]\)\>\""}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.432405886536685*^9, {3.432409734730585*^9, 3.4324097380583363`*^9}, {
   3.432409804832345*^9, 3.4324098151029577`*^9}, {3.432456323534419*^9, 
   3.43245638314242*^9}, {3.432456577507534*^9, 3.432456583576692*^9}, {
   3.432476574947462*^9, 3.4324765900022697`*^9}, {3.642911020896974*^9, 
   3.642911020976748*^9}, {3.6429319557850246`*^9, 3.6429319634067097`*^9}, {
   3.6707717170407953`*^9, 3.6707717171116047`*^9}, 3.670771815368938*^9, {
   3.6852259422057877`*^9, 3.68522595350834*^9}, {3.71017305296176*^9, 
   3.710173096232615*^9}, {3.710184827787641*^9, 3.710184836722773*^9}, {
   3.710185015077722*^9, 3.710185027644758*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Product proton vibrational frequency: \"\>", 
   "\[InvisibleSpace]", 
   PanelBox["3593.45689204072`"], 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SuperscriptBox[\\(cm\\), \
\\(-1\\)]\\)\"\>"}],
  SequenceForm["Product proton vibrational frequency: ", 
   Panel[3593.45689204072], " \!\(\*SuperscriptBox[\(cm\), \(-1\)]\)"],
  Editable->False]], "Print",
 CellChangeTimes->{3.710173098316346*^9, 3.710184839256897*^9, 
  3.710184968910321*^9, 3.710185029148005*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Product deuteron vibrational frequency: \"\>", 
   "\[InvisibleSpace]", 
   PanelBox["2541.588445626768`"], 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SuperscriptBox[\\(cm\\), \
\\(-1\\)]\\)\"\>"}],
  SequenceForm["Product deuteron vibrational frequency: ", 
   Panel[2541.588445626768], " \!\(\*SuperscriptBox[\(cm\), \(-1\)]\)"],
  Editable->False]], "Print",
 CellChangeTimes->{3.710173098316346*^9, 3.710184839256897*^9, 
  3.710184968910321*^9, 3.710185029157207*^9}]
}, Open  ]]
}, Open  ]],

Cell["Morse potentials (equlibrium position at x=0):", "Text",
 CellChangeTimes->{{3.432409828829578*^9, 3.43240983496839*^9}, {
  3.432409985194516*^9, 3.43240999503438*^9}, {3.6334832391191*^9, 
  3.633483240054077*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"U1", "[", "x_", "]"}], ":=", 
   RowBox[{"D1", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[Beta]1"}], " ", "x"}], "]"}]}], ")"}], "2"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U2", "[", "x_", "]"}], ":=", 
   RowBox[{"D2", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[Beta]2"}], " ", "x"}], "]"}]}], ")"}], "2"]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.416070756365017*^9, {3.432409861437043*^9, 3.432409866172261*^9}, {
   3.432409973353746*^9, 3.432409974256838*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"au2cm", 
  SqrtBox[
   RowBox[{
    FractionBox["2.963", 
     SuperscriptBox["a2bohr", "2"]], 
    FractionBox["1", "\[Mu]H"]}]]}]], "Input",
 CellChangeTimes->{{3.7101816647662573`*^9, 3.710181734387219*^9}}],

Cell[BoxData["4665.469861154915`"], "Output",
 CellChangeTimes->{3.7101817374900208`*^9, 3.710184968987885*^9, 
  3.710185034908307*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Beta]Morse", "[", 
  RowBox[{"3586", ",", "49.7", ",", 
   FractionBox["\[Mu]H", "Dalton"]}], "]"}]], "Input",
 CellChangeTimes->{{3.710184623205573*^9, 3.7101846797437363`*^9}}],

Cell[BoxData["3.324280660787358`"], "Output",
 CellChangeTimes->{3.7101846819092913`*^9, 3.710184969022252*^9, 
  3.710185035588169*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Harmonic potentials for D-H (reactant) and A-H (product) bonds\
\>", "Section",
 CellChangeTimes->{{3.416139753242919*^9, 3.41613976415156*^9}, {
  3.432920308017187*^9, 3.432920337645526*^9}, {3.4329205757972603`*^9, 
  3.432920577840122*^9}}],

Cell["Frequencies:", "Text",
 CellChangeTimes->{{3.432920594487599*^9, 3.432920599264112*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Omega]1H", "=", 
   RowBox[{"\[Beta]1", 
    SqrtBox[
     FractionBox[
      RowBox[{"2", "D1"}], "\[Mu]H"]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]2H", "=", 
   RowBox[{"\[Beta]2", 
    SqrtBox[
     FractionBox[
      RowBox[{"2", "D2"}], "\[Mu]H"]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]1D", "=", 
   RowBox[{"\[Beta]1", 
    SqrtBox[
     FractionBox[
      RowBox[{"2", "D1"}], "\[Mu]D"]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]2D", "=", 
   RowBox[{"\[Beta]2", 
    SqrtBox[
     FractionBox[
      RowBox[{"2", "D2"}], "\[Mu]D"]]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4329206099605007`*^9, 3.432920724999818*^9}, {
  3.651702952393813*^9, 3.651702956890169*^9}}],

Cell["Harmonic potentials (equlibrium position at x=0):", "Text",
 CellChangeTimes->{{3.432409828829578*^9, 3.43240983496839*^9}, {
  3.432409985194516*^9, 3.43240999503438*^9}, {3.432920755522606*^9, 
  3.4329207575539427`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Uharm1", "[", "x_", "]"}], ":=", 
   RowBox[{
    SuperscriptBox["\[Beta]1", "2"], "D1", " ", 
    SuperscriptBox["x", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Uharm2", "[", "x_", "]"}], ":=", 
   RowBox[{
    SuperscriptBox["\[Beta]2", "2"], "D2", " ", 
    SuperscriptBox["x", "2"]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.416070756365017*^9, {3.432409861437043*^9, 3.432409866172261*^9}, {
   3.432409973353746*^9, 3.432409974256838*^9}, {3.432920762662531*^9, 
   3.432920775014678*^9}, {3.43292080785096*^9, 3.432920860681039*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Analytical expressions for harmonic oscillator energies and wavefunctions\
\>", "Section",
 CellChangeTimes->{{3.432404853603244*^9, 3.43240485410107*^9}, {
  3.432920958676449*^9, 3.432920960793891*^9}, {3.4329211711807127`*^9, 
  3.432921202838779*^9}}],

Cell["Energies:", "Text",
 CellChangeTimes->{{3.432921206843449*^9, 3.432921210150363*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Epsilon]harm", "[", 
    RowBox[{"n_", ",", "\[Omega]_"}], "]"}], ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     RowBox[{"\[HBar]", " ", "\[Omega]", " ", "cm2au", 
      RowBox[{"(", 
       RowBox[{"n", "+", 
        FractionBox["1", "2"]}], ")"}]}], ",", "AccN"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.432921216526738*^9, 3.432921344160823*^9}, {
  3.651702848429284*^9, 3.6517028522211637`*^9}, {3.6517029753529167`*^9, 
  3.651703016911368*^9}, {3.651703047710226*^9, 3.651703048374152*^9}, {
  3.651703231847686*^9, 3.651703242815291*^9}, {3.651783575989994*^9, 
  3.651783577285879*^9}}],

Cell["Wavefunctions:", "Text",
 CellChangeTimes->{{3.432921353079589*^9, 3.4329213561517363`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]harm", "[", 
    RowBox[{"x_", ",", "x0_", ",", "M_", ",", "\[Omega]_", ",", "n_"}], "]"}],
    ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"M", " ", "Dalton", " ", "\[Omega]", " ", "cm2au"}], 
         RowBox[{"\[Pi]", " ", "\[HBar]"}]], ")"}], 
       FractionBox["1", "4"]], 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["2", 
         FractionBox["n", "2"]], 
        SqrtBox[
         RowBox[{"n", "!"}]]}]], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"M", " ", "Dalton", " ", "\[Omega]", " ", "cm2au"}], 
          RowBox[{"2", "\[HBar]"}]]}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "x0"}], ")"}], "2"]}], "]"}], 
      RowBox[{"HermiteH", "[", 
       RowBox[{"n", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "-", "x0"}], ")"}], 
         SqrtBox[
          FractionBox[
           RowBox[{"M", " ", "Dalton", " ", "\[Omega]", " ", "cm2au"}], 
           "\[HBar]"]]}]}], "]"}]}], ",", "AccN"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4329213937798977`*^9, 3.432921545028718*^9}, {
  3.651703080965361*^9, 3.651703140979439*^9}, {3.6517032012089376`*^9, 
  3.65170322651197*^9}, {3.651703259590646*^9, 3.651703260590727*^9}, {
  3.651783498440881*^9, 3.6517835556147957`*^9}, {3.651792182708124*^9, 
  3.651792193795405*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Analytical expressions for the Morse wavefunctions\n",
 StyleBox["from [J. P. Dahl, M. Springborg, J. Chem. Phys. 88, 4535 (1987)] \n\
(typo in Eq.(38): factor ",
  FontSize->14],
 Cell[BoxData[
  FormBox[
   SqrtBox["\[Alpha]"], TraditionalForm]],
  FontSize->14],
 StyleBox[" is missing)",
  FontSize->14]
}], "Section",
 CellChangeTimes->{{3.432404853603244*^9, 3.43240485410107*^9}, {
  3.432920958676449*^9, 3.432920960793891*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Lambda]1", "=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     FractionBox[
      SqrtBox[
       RowBox[{"2", "\[Mu]H", " ", "D1"}]], 
      RowBox[{"\[Beta]1", " ", "\[HBar]"}]], ",", "AccN"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.416083984708211*^9, 3.416083989209534*^9}, {
  3.4321794729459753`*^9, 3.4321794808657312`*^9}, {3.432410766743845*^9, 
  3.432410772007023*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Lambda]1D", "=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     FractionBox[
      SqrtBox[
       RowBox[{"2", "\[Mu]D", " ", "D1"}]], 
      RowBox[{"\[Beta]1", " ", "\[HBar]"}]], ",", "AccN"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.432179495250827*^9, {3.432179526546179*^9, 3.43217952864224*^9}, {
   3.432410786888176*^9, 3.432410802087645*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Lambda]2", "=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     FractionBox[
      SqrtBox[
       RowBox[{"2", "\[Mu]H", " ", "D2"}]], 
      RowBox[{"\[Beta]2", " ", "\[HBar]"}]], ",", "AccN"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.4321794978348207`*^9, 3.4321795339868793`*^9, {3.432410806393012*^9, 
   3.4324108115276213`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Lambda]2D", "=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     FractionBox[
      SqrtBox[
       RowBox[{"2", "\[Mu]D", " ", "D2"}]], 
      RowBox[{"\[Beta]2", " ", "\[HBar]"}]], ",", "AccN"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.4321795006587477`*^9, 3.4321795361707973`*^9, {3.432410815656562*^9, 
   3.4324108200559072`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Xi]1", "[", "x_", "]"}], ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     RowBox[{"2", "\[Lambda]1", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[Beta]1"}], " ", "x"}], "]"}]}], ",", "AccN"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.41607077318651*^9, 3.416134513828436*^9, {3.418575204915041*^9, 
   3.418575221263609*^9}, {3.432179511211021*^9, 3.432179538026979*^9}, {
   3.432410826279326*^9, 3.4324108448400183`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Xi]1D", "[", "x_", "]"}], ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     RowBox[{"2", "\[Lambda]1D", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[Beta]1"}], " ", "x"}], "]"}]}], ",", "AccN"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.416070777608505*^9, 3.416134512990247*^9, 3.418575208171817*^9, {
   3.4321795144669867`*^9, 3.4321795402590446`*^9}, {3.432410848920208*^9, 
   3.432410852967864*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Xi]2", "[", "x_", "]"}], ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     RowBox[{"2", "\[Lambda]2", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[Beta]2"}], " ", "x"}], "]"}]}], ",", "AccN"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.416070781528219*^9, 3.416134511996739*^9, 3.418575211881479*^9, {
   3.432179517451003*^9, 3.432179541802939*^9}, {3.432410856391725*^9, 
   3.432410861335808*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Xi]2D", "[", "x_", "]"}], ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     RowBox[{"2", "\[Lambda]2D", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[Beta]2"}], " ", "x"}], "]"}]}], ",", "AccN"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.41607078533629*^9, 3.416134511250385*^9, 3.418575214784488*^9, {
   3.432179520035087*^9, 3.4321795431629677`*^9}, {3.432410865640901*^9, 
   3.432410869656035*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"E1", "[", "n_", "]"}], ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "+", 
          FractionBox["1", "2"]}], ")"}], "-", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"2", "\[Lambda]1"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"n", "+", 
            FractionBox["1", "2"]}], ")"}], "2"]}]}], ")"}], "\[HBar]", 
      SqrtBox[
       FractionBox[
        RowBox[{"2", "D1", " ", 
         SuperscriptBox["\[Beta]1", "2"]}], "\[Mu]H"]]}], ",", "AccN"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.416070793496786*^9, 3.41613450696768*^9, 3.418575228383461*^9, {
   3.432179606885489*^9, 3.432179611340455*^9}, {3.432410878555017*^9, 
   3.432410890523045*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"E1D", "[", "n_", "]"}], ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "+", 
          FractionBox["1", "2"]}], ")"}], "-", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"2", "\[Lambda]1D"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"n", "+", 
            FractionBox["1", "2"]}], ")"}], "2"]}]}], ")"}], "\[HBar]", 
      SqrtBox[
       FractionBox[
        RowBox[{"2", "D1", " ", 
         SuperscriptBox["\[Beta]1", "2"]}], "\[Mu]D"]]}], ",", "AccN"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.41607079803169*^9, 3.416134508179589*^9, {3.418575233093163*^9, 
   3.41857524631623*^9}, 3.432179618989633*^9, 3.4321796778911247`*^9, {
   3.432410895371542*^9, 3.432410901386866*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"E2", "[", "n_", "]"}], ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "+", 
          FractionBox["1", "2"]}], ")"}], "-", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"2", "\[Lambda]2"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"n", "+", 
            FractionBox["1", "2"]}], ")"}], "2"]}]}], ")"}], "\[HBar]", 
      SqrtBox[
       FractionBox[
        RowBox[{"2", "D2", " ", 
         SuperscriptBox["\[Beta]2", "2"]}], "\[Mu]H"]]}], ",", "AccN"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.416070803026447*^9, 3.416134460319499*^9, 3.418575237816151*^9, 
   3.432179621677545*^9, 3.432179676659095*^9, {3.432410906137351*^9, 
   3.432410913339138*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"E2D", "[", "n_", "]"}], ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "+", 
          FractionBox["1", "2"]}], ")"}], "-", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"2", "\[Lambda]2D"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"n", "+", 
            FractionBox["1", "2"]}], ")"}], "2"]}]}], ")"}], "\[HBar]", 
      SqrtBox[
       FractionBox[
        RowBox[{"2", "D2", " ", 
         SuperscriptBox["\[Beta]2", "2"]}], "\[Mu]D"]]}], ",", "AccN"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.418575255753388*^9, 3.4321796242936697`*^9, 3.432179675291017*^9, {
   3.432410917243246*^9, 3.4324109243471527`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"N1D", "[", "n_", "]"}], ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{"\[Beta]1", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "\[Lambda]1D"}], "-", 
          RowBox[{"2", "n"}], "-", "1"}], ")"}], 
        RowBox[{"Gamma", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"2", "\[Lambda]1D"}], "-", "n"}], "]"}]]], ",", "AccN"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.418575261105874*^9, 3.432179626997121*^9, 3.4321796741813927`*^9, {
   3.4324109408428993`*^9, 3.432410948267419*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"N2D", "[", "n_", "]"}], ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{"\[Beta]2", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "\[Lambda]2D"}], "-", 
          RowBox[{"2", "n"}], "-", "1"}], ")"}], 
        RowBox[{"Gamma", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"2", "\[Lambda]2D"}], "-", "n"}], "]"}]]], ",", "AccN"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.418575265632591*^9, 3.432179629764958*^9, 3.432179673005192*^9, {
   3.432410951436161*^9, 3.432410958123125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"N1", "[", "n_", "]"}], ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{"\[Beta]1", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "\[Lambda]1"}], "-", 
          RowBox[{"2", "n"}], "-", "1"}], ")"}], 
        RowBox[{"Gamma", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"2", "\[Lambda]1"}], "-", "n"}], "]"}]]], ",", "AccN"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.418575268935944*^9, 3.4321796323572903`*^9, 3.4321796718131847`*^9, {
   3.4324109645397243`*^9, 3.432410971803516*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"N2", "[", "n_", "]"}], ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{"\[Beta]2", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "\[Lambda]2"}], "-", 
          RowBox[{"2", "n"}], "-", "1"}], ")"}], 
        RowBox[{"Gamma", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"2", "\[Lambda]2"}], "-", "n"}], "]"}]]], ",", "AccN"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.418575272415488*^9, 3.432179635005062*^9, 3.432179670397142*^9, {
   3.432410977594702*^9, 3.4324109854990883`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]1", "[", 
    RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"N1", "[", "n", "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[Xi]1", "[", "x", "]"}], "2"]}], "]"}], 
      SuperscriptBox[
       RowBox[{"\[Xi]1", "[", "x", "]"}], 
       RowBox[{"\[Lambda]1", "-", "n", "-", 
        FractionBox["1", "2"]}]], 
      RowBox[{"LaguerreL", "[", 
       RowBox[{"n", ",", 
        RowBox[{
         RowBox[{"2", "\[Lambda]1"}], "-", 
         RowBox[{"2", "n"}], "-", "1"}], ",", 
        RowBox[{"\[Xi]1", "[", "x", "]"}]}], "]"}]}], ",", "AccN"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.418575276680148*^9, {3.431376165595025*^9, 3.4313762537858047`*^9}, {
   3.4313764612134323`*^9, 3.431376471121182*^9}, {3.431376728635336*^9, 
   3.431376746689208*^9}, 3.43217963825369*^9, 3.432179668302784*^9, {
   3.43241099180412*^9, 3.432411008587776*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]1D", "[", 
    RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"N1D", "[", "n", "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[Xi]1D", "[", "x", "]"}], "2"]}], "]"}], 
      SuperscriptBox[
       RowBox[{"\[Xi]1D", "[", "x", "]"}], 
       RowBox[{"\[Lambda]1D", "-", "n", "-", 
        FractionBox["1", "2"]}]], 
      RowBox[{"LaguerreL", "[", 
       RowBox[{"n", ",", 
        RowBox[{
         RowBox[{"2", "\[Lambda]1D"}], "-", 
         RowBox[{"2", "n"}], "-", "1"}], ",", 
        RowBox[{"\[Xi]1D", "[", "x", "]"}]}], "]"}]}], ",", "AccN"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{
  3.418575280479354*^9, {3.432179642701852*^9, 3.432179665400473*^9}, {
   3.432411013164308*^9, 3.432411026268001*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]2", "[", 
    RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"N2", "[", "n", "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[Xi]2", "[", "x", "]"}], "2"]}], "]"}], 
      SuperscriptBox[
       RowBox[{"\[Xi]2", "[", "x", "]"}], 
       RowBox[{"\[Lambda]2", "-", "n", "-", 
        FractionBox["1", "2"]}]], 
      RowBox[{"LaguerreL", "[", 
       RowBox[{"n", ",", 
        RowBox[{
         RowBox[{"2", "\[Lambda]2"}], "-", 
         RowBox[{"2", "n"}], "-", "1"}], ",", 
        RowBox[{"\[Xi]2", "[", "x", "]"}]}], "]"}]}], ",", "AccN"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.418575283601589*^9, {3.432179645373748*^9, 3.432179661025922*^9}, {
   3.432411029164095*^9, 3.43241104250847*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]2D", "[", 
    RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"N2D", "[", "n", "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[Xi]2D", "[", "x", "]"}], "2"]}], "]"}], 
      SuperscriptBox[
       RowBox[{"\[Xi]2D", "[", "x", "]"}], 
       RowBox[{"\[Lambda]2D", "-", "n", "-", 
        FractionBox["1", "2"]}]], 
      RowBox[{"LaguerreL", "[", 
       RowBox[{"n", ",", 
        RowBox[{
         RowBox[{"2", "\[Lambda]2D"}], "-", 
         RowBox[{"2", "n"}], "-", "1"}], ",", 
        RowBox[{"\[Xi]2D", "[", "x", "]"}]}], "]"}]}], ",", "AccN"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{
  3.418575286997742*^9, {3.432179648157763*^9, 3.432179653940474*^9}, {
   3.432411045933313*^9, 3.4324110588286123`*^9}}],

Cell["Number of bound states:", "Text",
 CellChangeTimes->{{3.4324122389976273`*^9, 3.432412244563801*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nbound1", "=", 
   RowBox[{"IntegerPart", "[", 
    RowBox[{"\[Lambda]1", "-", 
     FractionBox["1", "2"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nbound2", "=", 
   RowBox[{"IntegerPart", "[", 
    RowBox[{"\[Lambda]2", "-", 
     FractionBox["1", "2"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nbound1D", "=", 
   RowBox[{"IntegerPart", "[", 
    RowBox[{"\[Lambda]1D", "-", 
     FractionBox["1", "2"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nbound2D", "=", 
   RowBox[{"IntegerPart", "[", 
    RowBox[{"\[Lambda]2D", "-", 
     FractionBox["1", "2"]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.432059188936873*^9, 3.432059250041594*^9}, {
  3.432412212745875*^9, 3.432412214409626*^9}, {3.432412249161483*^9, 
  3.4324122659940853`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NboundMin", "=", 
  RowBox[{"Min", "[", 
   RowBox[{"Nbound1", ",", "Nbound2", ",", "Nbound1D", ",", "Nbound2D"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.431798612479788*^9, 3.431798656322218*^9}, {
  3.4320592714841957`*^9, 3.43205929079113*^9}, {3.4324122941522207`*^9, 
  3.432412300616374*^9}, {3.671151565109208*^9, 3.6711515657079363`*^9}}],

Cell[BoxData["9"], "Output",
 CellChangeTimes->CompressedData["
1:eJwVzn8s1HEcx3Hn1xWZYm3G0Uh+xawhzI+8/aw7P4azm0tGmI02nZ+dX2tp
JtT5ueF0nESrphFNrs4hugolP+5uExmL+37yx/mxaone98drjz9e/zxtr+fE
ZdB0dHRScU71xpquejVY+eqEaFBB+JUt2wY1uBYIPezQraShZhbqL7OiXUO/
wUGY1hlmcrLWHa7esghN0Q0dEqPSyIX6WTQ6ayR2EdVw1IsraKXYzXMDLSvq
UVCoX7nAQIMG1u37WjSqQday/cwZ3ZVXdVxCdSMYk2y00zt+7AkqlkwNy9EU
xRv3CwMU7KyyvcuHKGBEspY1rylwWacSqmQUOJUWNTehQoVd4xBaeMTfMZ2g
QPR3Lq1rigJzYaeJiYoC7ofAEpYZgRXlzHgsOvc2a6AEdXVK1+1FRaG8Mj0L
AtOnazkv0IDz+/e7GQQSkyzbs84SaE1wOGlpTyDYKDcoClW99MvkoC4Cr67j
jgTUD2qeJ6HVFfTeVbSnZ3rL35mAbQOjmo26O9D06jwJMGkray2otVxyRoLu
TRoebaCy7KQgMy8CgZ3MCHPUjuKleqNLcrZpMJrdbnAnHe2Pjipe98F/+A91
gCrfbSou+hKQ2odL41ALg3hrXiKBnzGbGiV6aDng6Mwl0HVunu+Ctt0N29A6
W2mbFoz2McYreOhT7wZBG/rl0V7NYzSqcdRgDK1cE9IOUH2pZ95gDoHMYbHE
6yYB4wP6Zy46f7XvewWPQEiEa7QKVTJf9StzCcjnPf5pDc0KFanQMjqr6RBt
rl1Z0lo1cuq2Ux4BS029wAddOqIXxuSjRqIp3QLscrfpcEP1T1h5cFDP3TT7
QrTthmJ0AS2dsFnn3yJwLGC7oBX9cXnsnpRP4Hclt+VTMYGmfPF7vojAkSGo
hN0EGL/GBh+iGV9LPmr9D5OvjnU=
  "]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Harmonic overlap integrals\n",
 StyleBox["[J.-L. Chang, J. Mol. Spectrosc. 232 (2005) 102-104]",
  FontSize->18,
  FontWeight->"Plain"]
}], "Section",
 CellChangeTimes->{{3.432163835513934*^9, 3.43216393693677*^9}, {
  3.4323150518965797`*^9, 3.432315053959694*^9}, {3.432464881667048*^9, 
  3.432464927381366*^9}, {3.432921028085093*^9, 3.432921071301525*^9}, {
  3.4329218152127438`*^9, 3.432921857596898*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]H", "[", 
    RowBox[{"R_", ",", "n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "K", ",", "\[Alpha]1", ",", "\[Alpha]2", ",", "s", ",", "A", ",", 
       "Prefactor", ",", "b1", ",", "b2", ",", "i", ",", "j"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Alpha]1", "=", 
       FractionBox[
        RowBox[{"\[Mu]H", " ", "\[Omega]1H"}], "\[HBar]"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]2", "=", 
       FractionBox[
        RowBox[{"\[Mu]H", " ", "\[Omega]2H"}], "\[HBar]"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       FractionBox[
        RowBox[{"\[Alpha]1", " ", "\[Alpha]2", " ", 
         SuperscriptBox["R", "2"]}], 
        RowBox[{"\[Alpha]1", "+", "\[Alpha]2"}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"A", "=", 
       FractionBox[
        RowBox[{"2", 
         SqrtBox[
          RowBox[{"\[Alpha]1", " ", "\[Alpha]2"}]]}], 
        RowBox[{"\[Alpha]1", "+", "\[Alpha]2"}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", 
        RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OddQ", "[", 
          RowBox[{"i", "+", "j"}], "]"}], ",", "0", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "+", "j", "-", "1"}], ")"}], "!!"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Alpha]1", "+", "\[Alpha]2"}], ")"}], 
           FractionBox[
            RowBox[{"i", "+", "j"}], "2"]]]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Prefactor", "=", 
       SqrtBox[
        FractionBox[
         RowBox[{"A", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", "s"}], "]"}]}], 
         RowBox[{
          SuperscriptBox["2", 
           RowBox[{"n", "+", "m"}]], 
          RowBox[{"n", "!"}], 
          RowBox[{"m", "!"}]}]]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"b1", "=", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"R", " ", "\[Alpha]2", 
          SqrtBox["\[Alpha]1"]}], 
         RowBox[{"\[Alpha]1", "+", "\[Alpha]2"}]]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"b2", "=", 
       FractionBox[
        RowBox[{"R", " ", "\[Alpha]1", 
         SqrtBox["\[Alpha]2"]}], 
        RowBox[{"\[Alpha]1", "+", "\[Alpha]2"}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Prefactor", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"i", "=", "0"}], "n"], 
        RowBox[{"(", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"j", "=", "0"}], "m"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Binomial", "[", 
             RowBox[{"n", ",", "i"}], "]"}], 
            RowBox[{"Binomial", "[", 
             RowBox[{"m", ",", "j"}], "]"}], 
            RowBox[{"HermiteH", "[", 
             RowBox[{
              RowBox[{"n", "-", "i"}], ",", "b1"}], "]"}], 
            RowBox[{"HermiteH", "[", 
             RowBox[{
              RowBox[{"m", "-", "j"}], ",", "b2"}], "]"}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"2", 
               SqrtBox["\[Alpha]1"]}], ")"}], "i"], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"2", 
               SqrtBox["\[Alpha]2"]}], ")"}], "j"], 
            RowBox[{"K", "[", 
             RowBox[{"i", ",", "j"}], "]"}]}], ")"}]}], ")"}]}]}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4329219949013863`*^9, 3.432922016196011*^9}, {
  3.432922048096962*^9, 3.432922113570904*^9}, {3.432922184739587*^9, 
  3.4329222062627087`*^9}, {3.432922240499786*^9, 3.4329222669521627`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]D", "[", 
    RowBox[{"R_", ",", "n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "K", ",", "\[Alpha]1", ",", "\[Alpha]2", ",", "s", ",", "A", ",", 
       "Prefactor", ",", "b1", ",", "b2", ",", "i", ",", "j"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Alpha]1", "=", 
       FractionBox[
        RowBox[{"\[Mu]D", " ", "\[Omega]1D"}], "\[HBar]"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]2", "=", 
       FractionBox[
        RowBox[{"\[Mu]D", " ", "\[Omega]2D"}], "\[HBar]"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       FractionBox[
        RowBox[{"\[Alpha]1", " ", "\[Alpha]2", " ", 
         SuperscriptBox["R", "2"]}], 
        RowBox[{"\[Alpha]1", "+", "\[Alpha]2"}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"A", "=", 
       FractionBox[
        RowBox[{"2", 
         SqrtBox[
          RowBox[{"\[Alpha]1", " ", "\[Alpha]2"}]]}], 
        RowBox[{"\[Alpha]1", "+", "\[Alpha]2"}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"K", "[", 
        RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OddQ", "[", 
          RowBox[{"i", "+", "j"}], "]"}], ",", "0", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "+", "j", "-", "1"}], ")"}], "!!"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Alpha]1", "+", "\[Alpha]2"}], ")"}], 
           FractionBox[
            RowBox[{"i", "+", "j"}], "2"]]]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Prefactor", "=", 
       SqrtBox[
        FractionBox[
         RowBox[{"A", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", "s"}], "]"}]}], 
         RowBox[{
          SuperscriptBox["2", 
           RowBox[{"n", "+", "m"}]], 
          RowBox[{"n", "!"}], 
          RowBox[{"m", "!"}]}]]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"b1", "=", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"R", " ", "\[Alpha]2", 
          SqrtBox["\[Alpha]1"]}], 
         RowBox[{"\[Alpha]1", "+", "\[Alpha]2"}]]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"b2", "=", 
       FractionBox[
        RowBox[{"R", " ", "\[Alpha]1", 
         SqrtBox["\[Alpha]2"]}], 
        RowBox[{"\[Alpha]1", "+", "\[Alpha]2"}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Prefactor", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"i", "=", "0"}], "n"], 
        RowBox[{"(", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"j", "=", "0"}], "m"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Binomial", "[", 
             RowBox[{"n", ",", "i"}], "]"}], 
            RowBox[{"Binomial", "[", 
             RowBox[{"m", ",", "j"}], "]"}], 
            RowBox[{"HermiteH", "[", 
             RowBox[{
              RowBox[{"n", "-", "i"}], ",", "b1"}], "]"}], 
            RowBox[{"HermiteH", "[", 
             RowBox[{
              RowBox[{"m", "-", "j"}], ",", "b2"}], "]"}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"2", 
               SqrtBox["\[Alpha]1"]}], ")"}], "i"], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"2", 
               SqrtBox["\[Alpha]2"]}], ")"}], "j"], 
            RowBox[{"K", "[", 
             RowBox[{"i", ",", "j"}], "]"}]}], ")"}]}], ")"}]}]}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.432922290809414*^9, 3.432922304801462*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]harmH", "[", 
    RowBox[{"R_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", 
         RowBox[{"\[Sigma]H", "[", 
          RowBox[{"R", ",", "i", ",", "j"}], "]"}]]}], "*", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Sigma]H", "[", 
          RowBox[{"x", ",", "i", ",", "j"}], "]"}], ",", "x"}], "]"}]}], "/.", 
      RowBox[{"x", "\[Rule]", "R"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]harmD", "[", 
    RowBox[{"R_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", 
         RowBox[{"\[Sigma]D", "[", 
          RowBox[{"R", ",", "i", ",", "j"}], "]"}]]}], "*", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Sigma]D", "[", 
          RowBox[{"x", ",", "i", ",", "j"}], "]"}], ",", "x"}], "]"}]}], "/.", 
      RowBox[{"x", "\[Rule]", "R"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4329242772105007`*^9, 3.432924293482189*^9}, {
  3.432924352543929*^9, 3.4329243648614273`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]harmH", "[", 
    RowBox[{"R_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "D1", ",", "D2"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"D1", "=", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Sigma]H", "[", 
           RowBox[{"x", ",", "i", ",", "j"}], "]"}], ",", "x"}], "]"}], "/.", 
        
        RowBox[{"x", "\[Rule]", "R"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"D2", "=", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Sigma]H", "[", 
           RowBox[{"x", ",", "i", ",", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "/.", 
        RowBox[{"x", "\[Rule]", "R"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"\[Sigma]H", "[", 
           RowBox[{"R", ",", "i", ",", "j"}], "]"}]]}], "*", "D2"}], "+", 
       RowBox[{
        FractionBox["1", 
         SuperscriptBox[
          RowBox[{"\[Sigma]H", "[", 
           RowBox[{"R", ",", "i", ",", "j"}], "]"}], "2"]], 
        SuperscriptBox["D1", "2"]}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]harmD", "[", 
    RowBox[{"R_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "D1", ",", "D2"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"D1", "=", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Sigma]D", "[", 
           RowBox[{"x", ",", "i", ",", "j"}], "]"}], ",", "x"}], "]"}], "/.", 
        
        RowBox[{"x", "\[Rule]", "R"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"D2", "=", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Sigma]D", "[", 
           RowBox[{"x", ",", "i", ",", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "/.", 
        RowBox[{"x", "\[Rule]", "R"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"\[Sigma]D", "[", 
           RowBox[{"R", ",", "i", ",", "j"}], "]"}]]}], "*", "D2"}], "+", 
       RowBox[{
        FractionBox["1", 
         SuperscriptBox[
          RowBox[{"\[Sigma]D", "[", 
           RowBox[{"R", ",", "i", ",", "j"}], "]"}], "2"]], 
        SuperscriptBox["D1", "2"]}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6334704704109917`*^9, 3.633470471585969*^9}, {
  3.633470576064457*^9, 3.633470638394368*^9}, {3.6334706756267157`*^9, 
  3.633470779989626*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Alpha]harmH", "[", 
  RowBox[{
   RowBox[{"R0", "[", "2.7", "]"}], ",", "0", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.63347133442277*^9, 3.633471343436534*^9}}],

Cell[BoxData["21.268509070520196`"], "Output",
 CellChangeTimes->CompressedData["
1:eJwV0F1IkwEYBeBPJXBhlHUTMnS2xaY0YeTqU0J9R6jUTBnG5oxJmsVU0DWV
Zj+MjaIVYtDItcxk+BMVhGFdONB+MMhBeSFLG+HQhcMXylEUyYzOLg7P5Tmc
/OZOQ2uaIAhlSFHsxPeTe5m6Ih0vLsMn/vPpE7BDonFm7Gca8deZnsOK9d/9
o1Km1WnpUJucKSus3JOjYCoc7K6ogQZl+IIRWgvEgETJJLzqf3YGPtXsnFiB
3qmF+LECpmSr/FY9dI6HMu4UM8mi6lUfjB7KlgXhr9Ne4RucLdFX7dMyOeL2
s0ehz2rcrYNXrklc56DF9LhvTWSqa2rhJGz/ufH5SAnTzZB+xgCPy+/m2hqY
VMJGYgla5qtihWamcfXBFh0szZ1z2+DQtnfAD7eK/9weg9V/3+54A1XqkbQk
1GhF+1Qn04JhLKjtgs27PplhZGUy6rYx6ds1p5ahwhWcXLrIVCkVt1Ne91QP
L8PNHw3ef7B+OhFOac7Jc6rs6Gm6NyDC1+6s3tpupneVgffpPfj144FHari4
nnfYCNtkVkUvDNyIzC5CnUm+5rjEFHMleu5D6dc5z4wDu7YsvlAfU21Z4INj
mEnUZX55MMrUKCl/+RDGPVfnU/4HkwP3dw==
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Gamma]harmH", "[", 
  RowBox[{
   RowBox[{"R0", "[", "2.7", "]"}], ",", "0", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.6334713547508383`*^9, 3.6334713565267153`*^9}}],

Cell[BoxData["15.006407765880908`"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGCwA2GFPe+9hV47vvDJ3VQNpP8kpzMtB9JR+4wamCWA4mqB
EeuBdNeO771LZF47yp2RnZOl/NrxgquGgJTKa0cd4VIHXyC9Rfh6ejiQfhxs
uYhT/bWjlmLfmhggHbSda/l9IH3C4uILG02guh/KXSFA2uXrGeYJJkB1yXqP
ZgDpWxcFFXYD6VX/pjA8BdIcHr7uwqavHS0TSxLNgfSiKRH8TkD6UDtXUwqQ
jilYWfXY4rWjHWfK6z9A+lfj6+tmlq8d72j67QsC0mpWU+QKI1871kx/9fEG
kK6M9niiFfXa0atcLdkJSEddOdpcCKRdrkztnwWkJ2r+6F4KpPddPMx6EEgv
i1/I+AdIP/OxLN6S/9rxstKy3aYFrx0PS/OdjwLSFqs3PWguBLpb3tTvJpAW
mbR3442i147rGK3+guimj57zbgLpttPxU/4B6Q9Xvl8D0dWsKg0axUD1ETP6
LYB00yPeMv8SIJ9tyTGm0teO7rtU5usCaaszisbhQLpyUrZKGZBe9/fO/itA
+nmw6uPKiteOPeWfS2cC6f+3jnfuqwSGz7KEGaergP5auPhk5bzXjjMWcd6a
veS143x5h61zgXRVbt0pEA0Ae4v6BQ==
  "]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]aharmH", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"R", ",", "\[Mu]", ",", "i", ",", "j"}], "}"}], ",", 
     RowBox[{"SetAccuracy", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["\[HBar]", "2"], 
         SuperscriptBox[
          RowBox[{"\[Alpha]harmH", "[", 
           RowBox[{"R", ",", "i", ",", "j"}], "]"}], "2"]}], 
        RowBox[{"2", "\[Mu]", " ", "Dalton"}]], ",", "AccN"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]aharmD", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"R", ",", "\[Mu]", ",", "i", ",", "j"}], "}"}], ",", 
     RowBox[{"SetAccuracy", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["\[HBar]", "2"], 
         SuperscriptBox[
          RowBox[{"\[Alpha]harmD", "[", 
           RowBox[{"R", ",", "i", ",", "j"}], "]"}], "2"]}], 
        RowBox[{"2", "\[Mu]", " ", "Dalton"}]], ",", "AccN"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]gharmH", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"R", ",", "\[Mu]", ",", "i", ",", "j"}], "}"}], ",", 
     RowBox[{"SetAccuracy", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["\[HBar]", "2"], 
         RowBox[{"\[Gamma]harmH", "[", 
          RowBox[{"R", ",", "i", ",", "j"}], "]"}]}], 
        RowBox[{"2", "\[Mu]", " ", "Dalton"}]], ",", "AccN"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]gharmD", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"R", ",", "\[Mu]", ",", "i", ",", "j"}], "}"}], ",", 
     RowBox[{"SetAccuracy", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["\[HBar]", "2"], 
         RowBox[{"\[Gamma]harmD", "[", 
          RowBox[{"R", ",", "i", ",", "j"}], "]"}]}], 
        RowBox[{"2", "\[Mu]", " ", "Dalton"}]], ",", "AccN"}], "]"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.419341343028589*^9, 3.419341349312006*^9}, {
   3.419342677228158*^9, 3.419342691718988*^9}, {3.425137539183956*^9, 
   3.425137553994266*^9}, {3.425310659276587*^9, 3.425310660291768*^9}, 
   3.425311275287008*^9, {3.4312782246205463`*^9, 3.431278224639872*^9}, {
   3.431280088416935*^9, 3.431280088861274*^9}, 3.4319739938590117`*^9, 
   3.432182119895317*^9, 3.432221735841118*^9, 3.432322310361508*^9, {
   3.432323012048017*^9, 3.432323020863723*^9}, {3.432427997339422*^9, 
   3.432428003555194*^9}, {3.4324312675814857`*^9, 3.4324312711166983`*^9}, {
   3.642915445982462*^9, 3.6429154711501617`*^9}, {3.642915536994431*^9, 
   3.642915552627479*^9}}],

Cell["\<\

Quality of expansions for harmonic overlaps:\
\>", "Text",
 CellChangeTimes->{{3.636468787141094*^9, 3.63646880137293*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]Hexp1", "[", 
    RowBox[{"R_", ",", "Req_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"\[Sigma]H", "[", 
     RowBox[{
      RowBox[{"R0", "[", "Req", "]"}], ",", "i", ",", "j"}], "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"\[Alpha]harmH", "[", 
        RowBox[{
         RowBox[{"R0", "[", "Req", "]"}], ",", "i", ",", "j"}], "]"}]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"R0", "[", "R", "]"}], "-", 
        RowBox[{"R0", "[", "Req", "]"}]}], ")"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]Hexp2", "[", 
    RowBox[{"R_", ",", "Req_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"\[Sigma]H", "[", 
     RowBox[{
      RowBox[{"R0", "[", "Req", "]"}], ",", "i", ",", "j"}], "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\[Alpha]harmH", "[", 
         RowBox[{
          RowBox[{"R0", "[", "Req", "]"}], ",", "i", ",", "j"}], "]"}]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"R0", "[", "R", "]"}], "-", 
         RowBox[{"R0", "[", "Req", "]"}]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"\[Gamma]harmH", "[", 
        RowBox[{
         RowBox[{"R0", "[", "Req", "]"}], ",", "i", ",", "j"}], "]"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R0", "[", "R", "]"}], "-", 
          RowBox[{"R0", "[", "Req", "]"}]}], ")"}], "2"]}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.636468904575644*^9, 3.636469105889884*^9}, {
  3.636469140105936*^9, 3.636469208151793*^9}, {3.636469705362031*^9, 
  3.636469724759645*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]Dexp1", "[", 
    RowBox[{"R_", ",", "Req_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"\[Sigma]D", "[", 
     RowBox[{
      RowBox[{"R0", "[", "Req", "]"}], ",", "i", ",", "j"}], "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"\[Alpha]harmD", "[", 
        RowBox[{
         RowBox[{"R0", "[", "Req", "]"}], ",", "i", ",", "j"}], "]"}]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"R0", "[", "R", "]"}], "-", 
        RowBox[{"R0", "[", "Req", "]"}]}], ")"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]Dexp2", "[", 
    RowBox[{"R_", ",", "Req_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"\[Sigma]D", "[", 
     RowBox[{
      RowBox[{"R0", "[", "Req", "]"}], ",", "i", ",", "j"}], "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\[Alpha]harmD", "[", 
         RowBox[{
          RowBox[{"R0", "[", "Req", "]"}], ",", "i", ",", "j"}], "]"}]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"R0", "[", "R", "]"}], "-", 
         RowBox[{"R0", "[", "Req", "]"}]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"\[Gamma]harmD", "[", 
        RowBox[{
         RowBox[{"R0", "[", "Req", "]"}], ",", "i", ",", "j"}], "]"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R0", "[", "R", "]"}], "-", 
          RowBox[{"R0", "[", "Req", "]"}]}], ")"}], "2"]}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.636469790295001*^9, 3.636469819030362*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RR", "=", "2.7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Sigma]H", "[", 
          RowBox[{
           RowBox[{"R0", "[", "R", "]"}], ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"\[Sigma]Hexp1", "[", 
          RowBox[{"R", ",", "RR", ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"\[Sigma]Hexp2", "[", 
          RowBox[{"R", ",", "RR", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "2.4", ",", "2.8"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Red", ",", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Dashed"}], "}"}]}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Sigma]D", "[", 
          RowBox[{
           RowBox[{"R0", "[", "R", "]"}], ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"\[Sigma]Dexp1", "[", 
          RowBox[{"R", ",", "RR", ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"\[Sigma]Dexp2", "[", 
          RowBox[{"R", ",", "RR", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "2.4", ",", "2.8"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Red", ",", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Dashed"}], "}"}]}], "}"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6364688093783503`*^9, 3.6364688915804234`*^9}, {
  3.636469279254157*^9, 3.6364693616072598`*^9}, {3.636469392184462*^9, 
  3.636469440795722*^9}, {3.636469474211975*^9, 3.636469474283354*^9}, {
  3.636469511203309*^9, 3.636469543251528*^9}, {3.6364696712543507`*^9, 
  3.636469674924823*^9}, {3.636469749912928*^9, 3.636469767078908*^9}, {
  3.636469856150156*^9, 3.636469932749346*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{}, {}, 
        {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1:eJwV1nc8Vt8fAHB57n1IC0UyItFAsld87jEqlJItZfuiJNlEERkNJbJVRpQR
SSkhM1lZkYxklFFkE9Lv/P56Xu/Xvc8993zWPbusL+rZMTIwMCytY2D4/6/i
+qbO25Y09Lt7U89/g7ZUvOMy/LWloaoM2XsjZTaUp3D9VhU7GvK8rpyvmWdD
GQzEj/phPw6WF3r50IZiNVW8t4p9vidjKi/AhgrR9P6+8h8NOejGnRBTt6Hc
9y7cXHagocJ2+xrFemvq5PfprkUnGuqQW//Y45sVRVqNuc644/UjnA9OilpS
tleK8+U9aOhyu+ibdj5Lqjrx5qQftlnvu6jqLZZUcOeBc0yeNPQlL1v27ogF
RRx3teL1wuvxXeDJ9ragaPIrJ4/40BDqOfSXfGhOrdu06UCCPw0t7HPIGFg5
Q/19LTGiGkJDf7gPpffOmFIf1NlDrmEvbteqMe8zpaI/zgpVYVOV7PrTtaaU
yPAra41QGhrojAo9mmxKmWxR+XokjIYqBAe5ijRNqUI7rY5jN2joxn6L7fGp
JpQTu3WVYQQN1XOVvuSxNqZ6z0c9dIyhoYLLeTr1mwwpERPPzDzsvtjfgbHL
BpS3hmnePHYdT8io+4gBtZWP/11gLA0936rEY1lhQGl/zPoaH0dDTTeFyxY8
DKgiiUq++gQamg/bp8s9qE/dm59KFHlIQ24d4ms/avSoo1dPxP3MxPHOEhLc
+kaXYu5QNpV4QkPxg1daup7qUh9ERLk9sBX6Rs2yE3Qp7U6mpDVscR77QU8/
XerEgYqHbFn4ukN/QgbSpQx6pDPlc3B8PYWcymNOUlbyO14F5dPQm+lbD2ba
dajLv4faed7g9RhaPIKitKknBYPzZthT0iXud/20qU8eA9uTsJ0Sygfy7LQp
sdWvZrzFNOS+k7lFWEGb+srcPcT7lobWV8hf/9WnRakJtszyldJQQMyX7C9i
WhSzYclWgQoaOsqje/nz56NUTHG0vlAdDbFZOgimWBymNPqjvzpij3UL5+oe
O0zN0u475mE7+dDl2eUPU7o6968q1dPQJq66TQ2bD1Mbvt3P1m2gIauj9RLs
7zSoADKW5t9EQ7u464rHBDWoc7rxLzpaaSjDJM7JbFGNUvmRvDW0m4Z4C0vv
GLUgysT72b9abL++w9sOVCDKleXdT+YeGjKy/GjOWoCoDPFvVTewtXRO7fwb
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
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1:eJwV1nc4l98bB3DjeT5E30pRMgpRGclecZ/TIA0jIyJ7hpAVWkSRpGRXVJJN
iiiEREVUkpGRWSQkKyF+5/fX53pd1+d6nnPu5z7v+wjbehg4sDAxMf1gZmL6
/6+g/JvQoTpW/Kvjv07HfnukrxN3Qa2eFXPuYAk8WWWPOHvjcvTfsWL/xbNX
TfTtURCdwHqukRX/+V0ipHzaDrnoJxW2NLHilaqOL9702CBe3yTg/8SKE5ss
/b3f2KA3SUl11sSNBb36+JENEh1I6vlJXKR6Kl39gg3q8b3FyfKZFYvnP6XK
hGyQ0e3bdtKtrPhkkJRZ5glrpPE9eV1YBytWYPnlhEQtkal//vIb4lM/e7Mm
/lkgL47Kn+ydrLg1yPX2pzYLlC7d+yqCOMGQN35bpAVadVrEJ6qLFW8SilJZ
/ec46mXL+Bz3lRXr/45Mu9dijkLFC+LS+lnxATPpZaWiYyilrCr4G7EnO70m
MuYYeqbTdHLrACvmXT77kMP7GBo7NamZSZylFnI1RO4YOlqqMJszyIqNl/uj
LAtN0fZDz48WfmfFDQu7UyPLTdA7t+oN1SOsuI+F5bLHT2Nk6vy1nPknKxZ2
3F+3+aMx+m43b7Ob+PkNQe7JImPEZC6XW0V802DDhsXzxkjpQCquHGXFp6WX
dt3nNkb3xC6eKB8n9Wi1+MupZYT8vu4uK55kxc2ZZ3R0qgwQ1WFhPUvs8qlB
ZSLTAEW3BNBKU+T71LjhgmgDlNvwWO8pcWdAwbowOwPUVyo8WDjNipMFq7uv
shugwwnM/z2eJd93aueOZpMjSET/pWXOPCtWZXBMunDoI7m8r24TxM7zk4cC
fuih3RyLgYoLrLjr9jU9kwo9ZF2jlFBJ3DIWMvbSWQ+lqOR+aF5kxZuHU6e1
q3QRv3ACXlxixRcMn7N3Bugg7kk3ER1WCmslanRw8BxConoRMjeJXS+3cHpO
HETyuRnQRnxGaFsJo+EgMnDsN7OhKHxn7rPHm5CD6EaHSYwvTWG/KJ6d12cO
oJWv9lApbBSuKVmtuNynjehY3u/jnBS+lW3gktelhYIstYx3rqQwk1JPb2ul
Flrc7lPjQXxzprhE9IEWmnzxIXWC2I5j7r2Uixb6OnTZavI/CnNFiOf9+KuJ
nu2aaZ9ZTeGnVxJ3/NqsiVwGmt4trqPwiZ59BYuhe9G3vGU1DW4KL0JriIXb
XmTtvyP7HHHInKxjt+FedPS/K+FLxLGRtaWqW/aivcpYk2k9hft8IhytX+1B
AlfzK1h5KZy7vi5o34o96IPc1cccAhS237hui1M2Rg2WpVf0ic0PrOpOicGo
PuKHTTzxukuDZTNnMarp379WRJDCx5jWAJM+RqU3KW/VTRTumOP3ZfuFUNrk
OQVnIQpLO/ow7U4EFPjEs6RWlML9h2KalXnUkf/Xu9c5xSgcL9O11Dy+C/ly
fHA6Qrw7iX6Y9nYX8rTdwdtN3PTFfm//2V3IYe2I//RWCjuLJ7K9GVJD+l52
alvEKcwdEdv/97UqEpM7+iJoB4V7muGGbJYyin9zQ7eWeHAxBXteUUYMi3c9
K6RJvTP3X/9yQhl9D8MsMcQKPdMikpLKKLNbYv/DnRT2imGdefVICUldWf5Y
J0vhvIfna25XKSKF3szBtUoUtjVYt+S+LI/SfAd8TYhjk3s0EgflEQ/nJrY7
xO4DXy5+q5NHs4ox4mLK5Pk31cx/xsqjZ1fPuSurUJgSnue8KyWP1JUN5szV
KDzwZbPnOVs5tC9qgfMhUFiX+chkx3cZJBSttTRIvHuv5aEnTTJoMSZ6QhRR
eEuGmXBauQwqStrWkka8kimjsvWmDBJ7aJiShinM571npw+WQYzyHJm0PRTe
rC5nPoR3ojc/zI0faFHYdPpLnsk3KZQ2mr5/gHhzyg1pyZdSKOjXb9Ut+ym8
VkB+TjJZCqnMhG16QFymWxlSZCyFMpmKhlK1SX2TmM0630qi8A0rA1MPUvhf
6rM2vRIJdFCzPOW+LoW/STZEWxduR5lZ7PPfiS0cjWLbo7cjxipjYyk9Cp+u
T+U/77kdvWod4ywh/nm07KW+9Hak7rw5oEGfwjasGhX/5W5D0lcvGv4xoHCc
fDnvk0db0bombXYdEwpnfghN5moVRV6KcXY3iS9Hlt15+1wUfUzqq2gjjjuU
zJyeLIoibQN9bU3J+jzEpZodRBFjOqf/9DHyPlVk+/vPFjS3fvWLVHMKi8Vq
i3Jt2YK6jrecmrOisPcp6lBEjDDJdzlpVWsK1zq/49t3Thh5Ml0fCSCu/tYh
yuckjKg0bbsFYtf3P0z5dgkjyZ9lRks2FFbl2mPrNCiEAgNSlSl7Ct9fY5fA
oy6ENsZ7/FvtTM6/+o/Egn+CqN+p4bk+cQ3v43f5bYIoV1XcL5q4Qahve/dj
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
7jy2otwugr/Gr9VslTTWUOdzemJ0EZzHle3Did+cjOl13HoRtPXrVl6tovGj
YDX3He+CgZ171OJGNem39Y3/cfEFQ/htWabbr0m+5Rl88U+8AEzTxtmdxBon
DxcHeF4A/8OBRgJvyLwc+qmQp30BnP9VZyYTT82s3JDz9zxoWxkdufeW5Kf4
hqAFi/PAvuV06sN6GrPTnD7Pdp6D8OzyfQXvadx/bGHb8kwgXLTvN5klDsto
HqeaAuHsJnZX9Q/kfIq8ddPIDYRTNw2j3xJ3Zkr4a9oFglngSHfvRxr/WXdb
O7s5ACQP8p7maqYx3xnb3qsv/OH9D+8srzZSL/Xp8R+FfvD2QVL5s7b/53XJ
m9exflBtUflhiVi1hsv4va8flDRxzEa009hUIu7BcRU/uPf8/p4HX2isbnSx
zKPSF05d+dDZ3Enj2Qh+JWjxAW5xyVWKvTR+bdUyuCToDcGHj3cEECNuzSeY
8oZxj2vpFcQJe/+JPxzxgrriX6DdR+bjcKNFS4kXnN9X5GHeT+4XZTrvGg29
4IeVRlPwIHl/spfEn+hTUBGvF/t+mMbzLp4xC2KeIFkaZL3uB43NeG82qq/x
hMTux1KmxFGCT+8qzXiAtyh3bR/xA7Znm6zuesD2J+0z0yOkX9W2u9vMukNM
o40J/xiNzw488xvOPwnOlA+f828aH9JrH/u33xV2xz3dn0k8FxsZWCLmCnxb
//gME4fWSW24w+oKDfsDPzhP0pjn4crMb5UuIHM1KPTEFFmP/wZdHzUX+MN1
bdxlhsaKHajoiPIJuLw5vfrkXxrbaFh7ZOs6gVXB0K88YgaHwyZbWSdQ2S0u
OE7cMRCWANxOMGKbe9p9nsZpThd2OnQ4gm76EymPBRr/MkKzds6OwLOjMt7z
H421j80lMV11gDS1dhdvZgaWs9W1C/thB8tS/MzPiSOdiqKd39uB2WbLhCVi
hWD5AvdCO1hDDb66wsLA316GTg+fs4Nzjb8E7rEy8JrlmxI3uO3gqDXbhwaa
gX++Vsk6r20L7JeV5LdyMPDgzrQtsXXWYOcfUOdKfLLz4ZfiJ9ZQ4VJu9Zj4
8tTHwrnb1uCjtydSnZN4QkHyi7s19PHqfjNYSZ6fVXWDfb01lOY4JFxYxcB/
bY5cmW+2BLem2IX2tQys4+c9ZKh7HORlhyc3rmPg3StFJI0kjsP8jV0jZsQ7
DRSULzKOQ5h+f3sXscnk90rHSnNI/bCzuJebge/0m+w/JG8O7Y31nsPrGTgi
+W+p/hYz2FfP9P0PHwNLhK5mfBQxBU4Jo24Vfgbu3Fg1LkiZwqcrGZ8DiEe1
FPpufjMBqwO6rxaIebhWC/7ONIHAt7fvLQsw8FXb/ugAWRMoeK1kzraZgasq
wjRvHDgK/K/cPq7fwsDny+wbr8cagVHku6CjxLGOH6u+BxpBlLGEbDzx48Nv
n1jYGAHL8FA0jygDtxz7N5ktbQQjK+0MucUYWGZnUUxFvSE8P3qslWsbA9cq
/PXIZDcEkxHNrpWSDPxpd/y64FtH4EZhWuRh4pseb2SiQo9A/VlWjUhi7sCm
nGL3IwCrXyZzSjGw2YpN8sf2HoGtCupWHDsYeFwyuaV3TB9mzsn1s+0k+9vG
59q9Xx9iuDYPs8gz8DnOYGNTQV3QV7/ArE1cKbD9YfK0Dqx06uG7RsxzM5WD
r0EHQsvv6mxQYGBeZt+x4jM64OMkVCipyMB62gp0QPdhMHohfN5ImYG9niYb
92QfAp4Totzpuxh47PJ4o67rAfgUE7rjJ/Hm2enWMe0DEFUxqCWjzsBB/aus
yrYeAAb3w4BS4vnW/b97+7VhtkKs570GA8d7dhzRs9CGVu5t2X8QqV94W1GI
2X5IqBLHB/aRfnZoXv3YRxMqTG+VXiEW6V45ePuYJnyf4FCsJ16NngxlgiYo
CY+KH9JkYFmp7o/bV2jC5+D8dTpaDGyY0XKh7O4+WLtXfkhfm4GZ4zwy2Zr3
QmStepTpYQZeWM93UejIHiiyyGNPIo46+PYBs9oe6JoRDPlCfKAyZnpZZA9I
bl0+baZDvsc2kxuGM7uh/vJLm+O6DPxHJKjI4PZuYNPWUrTWZ+Bnrbr20aMY
LtbrdTkZMXCAWIMsaCFYqvZufUS8jsVKQYYPQWBZwsc/xHcm8jStxwG8c3tq
wowZWL1eTzkgAcA+yiMv4ygDD4zwfwsd1QBNg+vnh0xJfYVOnnh+Xx3YO94L
OVkw8NmpDwOWSmoQ+mmS7xFxnpKrkReXGjC9W8/zh3hriOXb56Oq8LfMckWY
JQNrNd2PG3igCiPJ47/TrRjY9rRV5y1uVWiwWfXquw0DG4nWrDRbVgZtM7kX
0rYM3FQTqBLZrQw1BkdL/Ign85xYxsuU4cXelByGHQMLfZuyRwHKkC8mHbvV
noGPMZrE1s4qgcQmgyh34o2uicylLUqQvt4vvJg4aUbm5PWnSpDCVnFWy4GB
j//1m3rpqwR8TP1+UcR/ilujNh1Vgvg5+lQrsbCYa1mGkhKs/S3uusmRga88
dlOz2KAE13/oODgSm6m4NcKcIvwPHkJicg==
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         Dashing[{Small, Small}], LineBox[CompressedData["
1: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
          "]]}}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{2.4, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{2.4, 2.8}, {0., 0.002549363031387634}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
     GraphicsBox[{{{}, {}, 
        {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1: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
bS5jf40WbFXrugH+B5X53tc=
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1: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
5Asejp+xv4D9zfXap6/ZvuB/A98gGQ==
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwV13k4lU8bB3A6z3OIUrYSQraikn3LzBlEUkkSQnZZEkJI/CKKhJSdkDV7
tuxbSFlCqCQ7lYQskVJ65/2H63Md5nqeme99z332Wbno2W6ho6PTwD/+/zvY
gFfs3zUK4vg7rfRVW4gW9O6wI4MnBaVQWZ1YtIRoxCk3S14vCtpNN3z0wVdB
GkVh44zmdQpSeLXu+1RKkEa/ffvhRD8KkjlBKw58K0CzEB91HMPu66CXi2sS
oDUdf5oj/B8F/ZhePtGSL0Dzv3VW+Cl2gGd1lc0tARrdegxP600KCks/0tAu
KUD7N8nHtBBAQZN0sW1Mwvy0v1WSX1TvUJC2196HAp28tFfqbHduYdP3eT5x
zuWlRXevCLdgn9ghTkwG89LEpyusjgVTUJ7K5V8KGrw0ox1gVDOEgpTH1jMe
PeehldueeHsylIJ4iFOr+59z05zYrFrOR1AQ7YxzqcYQF00xWd0qFttsRiPn
Rx0XjXJAhP499uXwPMPWVC5aIpiBRvcp6NRnE+MXtly0V/bONcaR+HmgkZL2
ym6acKNPiflDvN78OS41jt204ctRqQ6xFOSfm1FFvcJJEzfyfPIUO8UsUcfp
LCfN+9iFp6vYUpMgakWOk8a+l78xII6Cxu0CIi7946Bpd+eNJsRTUMl4PP9Q
FAetUrJ5b0ciBdkeb25918xOe7i6mCSeis/vStOcqCIbbXyiP8MVu56bN9dH
gI12uLsivwK7/XhFxDdGNtqrbN9atccUZO0+qCM8xEr7Z8j40TiNgqhXOTfm
/VhpTjX83PcyKCj6Ak35RcdO2vGbOvHfnlDQ9vI2fa0lFhrjW5ULkjkUlP2P
KeJ6OwvtlfhB7mvYvw4dtviYxkLTfsfwaBN7kVtg8cg5FprO4eeprHkUdKRO
s2xX1Xaa/keZJwoFFESG1ovnh26jWSrsqQgsxu931b7yv7NMNMFwBq9X2JHS
5w1MjjDRJidXFbaXUFCVaj/FajsTzSairzoWW/V+wsu59q00+0/36nNLKeiv
kGXu8rGtNOeozdaecgriBWqKsWqMtBvfp/p5qinopdbzlV/GVFpO6eSqCXZ0
sWBKGY1KG7g2sfsRdmC++GyYMJV26M+oCW8NBU3coYwkL5C0UcahKd5aCrKf
MHKWCyJpaoK9K3vrKegt95lne58RNMbzdewCzykowTjw2vwhCk2Wq1bOAnsl
Tvq7MSeFZvmx2vAx9u67I7+m/m6h1VhWJgk0U9An7iQtrZ4tNCfnUqF9LThf
tpU3Ddy30HqCc2QEX1CQz1LOBZcmelpsTfQ54XYKcnSMZm+/Qkc7NhY96oCt
xK9aVW1IR1uhxDg8xZ6csoxsU6Wj6Z6OuancQUEvlJb0ZHfR0ZjHY/J1Oymo
5T//ySr/f9CfjKP4vcb10BzHGySzCR11E8revqEgon67A9G0AbmuJUCePlzP
D1JVPRI34MuEhHYL7LVjjWEc1zag8FTC2Dfs4ZTYiE/iG3DsWiLzlgEKMnIc
HGqO/w31k5KsJd5R0EedLKTo9wuCz8nswUMU5LKbZTDE7ic08i769xI7KfKm
Y+WJn9CNqfEb40e8/4dD5ZkO/YTZEuMtodgb4r8GeJbWIIuXoEfEMM5v9dcn
s75rcJzhyUDMKAXN2pzkZU9ahUFixTGZkxTEJaX68sbiCkypbQr4hD26cFVk
+t0KrDr95oroFAVNO85/vFy/AuevLmvkYN90c2kaDF2BBjWya/nTFKS3+M1T
eP8KPHCy2qDsMwXlsnyPsrFdhp1OzbubZyno/PEY8bifi9DIfrSO/hsFnTH5
cZRzchF+tv5tqYrN1758vrBrEdKZSBc0YZ9YsT10MH0Ryp9IR41zFFRupC9q
rLMIH4vccqhboKD/OMJT3xt8h56jqrUVy/h5LWOrJb/PQWLoosUadtQnsEbr
mIMP3l4n5VcoKLi4Tt03aw4WdJWceYYtK9SIbpjOwYmafdNlP3C/4SrlCe/6
Bk/F0W8vWaOgpdeB/f3ls1BQ97lZ/m+8Xq375ejMGShdOOq0iN3Fu8Ejd2sG
qjL98ZHboKB/vXaZFIsZaNEqH9eIbbE2ri/GOwNTFAt6+v9QkAHT+mxk7BfI
sy8O/dmkIErsAf/UqM+QY9lJ8DSFQMKGbsEqhdNQ+Eyo5ENsGUv3pkOR01Cm
4Al8j/2dU3PHMfdpqHdp0tiSINDLkqeiX5SmYeSQYdQ1kkB2/iP9v15NwW0t
akQKA4G2CDFlii5MQjKa6/MCM4Ec3Lhenz83Af3NNM8f2UYghj3VyS4qE/DP
AY9WF2zb7UccskUm4HJ9T/oidsd7UVvH9XE4+uWO+fJ2Ar0VaRDTSh2HVUdX
B1d3EKje3FPPZ3oMOk696fzDTiCB/O7+00Yj8FPhP2XAQaDU8zmNUGoEWngf
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
tkicQLvaG0/wPxNI13U=
          "]]}}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{2.4, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{2.4, 2.8}, {0., 0.00014719101904778957`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {576., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.636469444915537*^9, 3.636469476829398*^9, 3.6364695458557043`*^9, 
   3.636469677346189*^9, {3.6364697286212473`*^9, 3.636469768435409*^9}, {
   3.63646991301884*^9, 3.636469935618868*^9}, 3.6368206762829113`*^9, 
   3.638895729580991*^9, 3.6424470747645807`*^9, 3.6428064026122017`*^9, 
   3.642911236939055*^9, 3.642932031914638*^9, 3.6443456195916767`*^9, 
   3.6445156856078568`*^9, 3.644783930111422*^9, 3.645499208809099*^9, 
   3.645547603954204*^9, 3.651436576198213*^9, 3.6514547386497307`*^9, 
   3.651524866740212*^9, 3.6516106305339622`*^9, 3.6517054036300507`*^9, 
   3.651779340755768*^9, 3.651801212104436*^9, 3.651871762104014*^9, 
   3.653704662564621*^9, 3.653756765338265*^9, 3.653875392652684*^9, 
   3.6539325335182323`*^9, 3.670771958275857*^9, 3.6709845928568172`*^9, 
   3.671152419481902*^9, 3.671200538759802*^9, 3.6712970557510433`*^9, 
   3.6713811189088373`*^9, 3.671403617051503*^9, 3.67145988839107*^9, 
   3.6715806863816023`*^9, 3.682444187320866*^9, 3.6827089587688303`*^9, 
   3.682784892516367*^9, 3.683393287168352*^9, 3.683568243679347*^9, 
   3.6840912804210176`*^9, 3.684091883306795*^9, 3.684093171887464*^9, 
   3.684168869688171*^9, 3.684169403431855*^9, 3.6842547233987007`*^9, 
   3.68428761397572*^9, 3.684858802107895*^9, 3.68522603835421*^9, 
   3.685313786407427*^9, 3.685398938389032*^9, 3.685462309131378*^9, 
   3.685656064469408*^9, 3.6870428425916758`*^9, 3.6871075048838043`*^9, 
   3.687707727493783*^9, 3.688258756648527*^9, 3.70696558240371*^9, 
   3.710181074024498*^9, 3.7101848754179497`*^9, 3.710185045320774*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Morse overlap integrals in terms of the Wigner function\n",
 StyleBox["based on [J. C. Lopez, A. L. Rivera, Yu. F. Smirnov, A. Frank, \
arXiv:physics/0109017v]",
  FontSize->16,
  FontWeight->"Plain"]
}], "Section",
 CellChangeTimes->{{3.432163835513934*^9, 3.43216393693677*^9}, {
  3.4323150518965797`*^9, 3.432315053959694*^9}, {3.432464881667048*^9, 
  3.432464927381366*^9}, {3.432921028085093*^9, 3.432921071301525*^9}}],

Cell["General case:", "Text",
 CellChangeTimes->{{3.432464995851272*^9, 3.432464999776326*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FCH", "[", 
    RowBox[{"R_", ",", "nu1_", ",", "nu2_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "AccN", ",", "Acc", ",", "l1", ",", "l2", ",", "j1", ",", " ", "beta1", 
       ",", " ", "j2", ",", " ", "beta2", ",", "y1", ",", "y2", ",", "a", ",",
        "Fcsum", ",", "fac0a", ",", "fac0b", ",", "fac0", ",", "fac1a", ",", 
       "fac1b", ",", "fac1", ",", "fac2", ",", "fac3", ",", "Fcaux", ",", 
       "Lambda", ",", "aux", ",", "peak", ",", "xatmax", ",", "fatmax", ",", 
       "integr", ",", "res", ",", "finteg2", ",", "smallestx", ",", "x", ",", 
       "X"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], "*)"}], 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "This", " ", "program", " ", "computes", " ", "the", " ", "Franck"}], 
       "-", 
       RowBox[{
       "Condon", " ", "factor", " ", "of", " ", "two", " ", "Morse", " ", 
        "functions"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"for", " ", "the", " ", "mirrored", " ", "potentials"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Modified", " ", "version", " ", "of", " ", "Lopez"}], "-", 
       "Rivera", "-", "Smirnov", "-", "Frank"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Usage", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"FCH", "[", 
       RowBox[{"R", ",", "nu1", ",", "nu2"}], "]"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}], "*)"}], 
     RowBox[{"(*", " ", 
      RowBox[{"Accuracies", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Acc", "=", "15"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AccN", "=", "60"}], ";", "\[IndentingNewLine]", 
      RowBox[{"j1", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{"\[Lambda]1", "-", 
          FractionBox["1", "2"]}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"j2", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{"\[Lambda]2", "-", 
          FractionBox["1", "2"]}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"beta1", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{"\[Beta]1", ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"beta2", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{"\[Beta]2", ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"a", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{"beta2", "/", "beta1"}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y1", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "*", "j1"}], "+", "1"}], ")"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "beta1"}], "*", 
            RowBox[{"R", "/", "2"}]}], "]"}]}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y2", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "*", "j2"}], "+", "1"}], ")"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "beta2"}], "*", 
            RowBox[{"R", "/", "2"}]}], "]"}]}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Fcsum", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"fac0a", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{"2", "*", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"a", "*", 
            RowBox[{"FullSimplify", "[", 
             RowBox[{
              RowBox[{"nu1", "!"}], "*", 
              RowBox[{"(", 
               RowBox[{"j1", "-", "nu1"}], ")"}], "*", 
              RowBox[{"nu2", "!"}], "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"j2", "-", "nu2"}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Gamma", "[", 
                  RowBox[{
                   RowBox[{"2", "*", "j1"}], "-", "nu1", "+", "1"}], "]"}], 
                 "*", 
                 RowBox[{"Gamma", "[", 
                  RowBox[{
                   RowBox[{"2", "*", "j2"}], "-", "nu2", "+", "1"}], "]"}]}], 
                ")"}]}]}], "]"}]}], "]"}]}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fac0b", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"y1", "^", 
           RowBox[{"(", 
            RowBox[{"j1", "-", "nu1"}], ")"}]}], "*", 
          RowBox[{"y2", "^", 
           RowBox[{"(", 
            RowBox[{"j2", "-", "nu2"}], ")"}]}]}], ",", "AccN"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"fac0", "=", 
       RowBox[{"fac0a", "*", "fac0b"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{"(*", 
        RowBox[{"Do", " ", "loops", " ", "for", " ", "summations"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"fac1a", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", "*", "j1"}], "+", "1"}], ")"}], "^", 
              RowBox[{"(", "l1", ")"}]}], "*", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", "*", "j2"}], "+", "1"}], ")"}], "^", 
              RowBox[{"(", "l2", ")"}]}]}], ",", "AccN"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fac1b", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "beta1"}], "*", "R", "*", 
               RowBox[{
                RowBox[{"(", "l1", ")"}], "/", "2"}]}], "]"}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "beta2"}], "*", "R", "*", 
               RowBox[{
                RowBox[{"(", "l2", ")"}], "/", "2"}]}], "]"}]}], ",", 
            "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fac1", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"fac1a", "*", "fac1b"}], ",", "AccN"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fac2", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"l1", "+", "l2"}], ")"}]}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"l1", "!"}], "*", 
               RowBox[{"l2", "!"}]}], ")"}]}], ",", "AccN"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fac3", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"FullSimplify", "[", 
             RowBox[{
              RowBox[{"Binomial", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", "*", "j1"}], "-", "nu1"}], ",", 
                RowBox[{"nu1", "-", "l1"}]}], "]"}], "*", 
              RowBox[{"Binomial", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", "*", "j2"}], "-", "nu2"}], ",", 
                RowBox[{"nu2", "-", "l2"}]}], "]"}]}], "]"}], ",", "AccN"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Fcaux", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"fac0", "*", "fac1", "*", "fac2", "*", "fac3"}], ",", 
            "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
            "===", "===", "===", "===", "===", "===", "===", "===", "===", 
           "\[Equal]"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Integration", " ", "Section"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Integral", " ", 
           RowBox[{"Ia", ".", "Calculation"}], " ", "with", " ", "scaling"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
            "===", "===", "===", "===", "===", "===", "===", "===", "===", 
           "\[Equal]"}], "*)"}], 
         RowBox[{"Lambda", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"j1", "-", "nu1", "+", "l1", "-", 
             RowBox[{"a", "*", 
              RowBox[{"(", 
               RowBox[{"j2", "-", "nu2", "+", "l2"}], ")"}]}]}], ",", 
            "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "Integrand", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"integr", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "^", 
              RowBox[{"(", 
               RowBox[{"Lambda", "-", "1"}], ")"}]}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"y1", "*", "x"}], "+", 
                  RowBox[{"y2", "*", 
                   RowBox[{"x", "^", 
                    RowBox[{"(", 
                    RowBox[{"-", "a"}], ")"}]}]}]}], ")"}]}], "/", "2"}], 
              "]"}]}], ",", "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"finteg", "[", "xx_", "]"}], ":=", 
          RowBox[{
           RowBox[{"xx", "^", 
            RowBox[{"(", 
             RowBox[{"Lambda", "-", "1"}], ")"}]}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"y1", "*", "xx"}], "+", 
                RowBox[{"y2", "*", 
                 RowBox[{"xx", "^", 
                  RowBox[{"(", 
                   RowBox[{"-", "a"}], ")"}]}]}]}], ")"}]}], "/", "2"}], 
            "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Find", " ", "smallest", " ", "x", " ", "before", " ", "underflow", 
           " ", "occurs"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Off", "[", 
          RowBox[{"General", "::", "\"\<unfl\>\""}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"smallestx", "=", "0.1`100"}], ";", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"finteg", "[", "smallestx", "]"}], ">", "$MinNumber"}], 
           ",", 
           RowBox[{"smallestx", "=", 
            RowBox[{"smallestx", "/", "2"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"smallestx", "=", 
          RowBox[{"smallestx", "*", "2"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"On", "[", 
          RowBox[{"General", "::", "unfl"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Looking", " ", "for", " ", "position", " ", "of", " ", "maximum"}],
           "*)"}], "\[IndentingNewLine]", 
         RowBox[{"aux", "=", 
          RowBox[{"FindMaximum", "[", 
           RowBox[{"integr", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"smallestx", "+", "1"}], ",", "smallestx", ",", 
              "\[Infinity]"}], "}"}], ",", 
            RowBox[{"WorkingPrecision", "\[Rule]", "AccN"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"peak", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"aux", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"xatmax", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{"peak", ",", "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"Integrand", " ", "value", " ", "at", " ", "maximum"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"fatmax", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"finteg", "[", "peak", "]"}], ",", "AccN"}], "]"}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"finteg2", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "/", "fatmax"}], ")"}], "*", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"X", "*", "xatmax"}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"Lambda", "-", "1"}], ")"}]}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"y1", "*", 
                   RowBox[{"(", 
                    RowBox[{"X", "*", "xatmax"}], ")"}]}], "+", 
                  RowBox[{"y2", "*", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"X", "*", "xatmax"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"-", "a"}], ")"}]}]}]}], ")"}]}], "/", "2"}], 
              "]"}]}], ",", "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"res", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"fatmax", "*", "xatmax", "*", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{"finteg2", ",", 
               RowBox[{"{", 
                RowBox[{"X", ",", "0", ",", "Infinity"}], "}"}], ",", 
               RowBox[{"PrecisionGoal", "\[Rule]", "Acc"}], ",", 
               RowBox[{"AccuracyGoal", "\[Rule]", "Acc"}], ",", 
               RowBox[{"Method", "\[Rule]", "\"\<DoubleExponential\>\""}]}], 
              "]"}]}], ",", "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"Adding", " ", "terms"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Fcsum", "=", 
          RowBox[{"Fcsum", "+", 
           RowBox[{"SetAccuracy", "[", 
            RowBox[{
             RowBox[{"Fcaux", "*", "res"}], ",", "AccN"}], "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"l1", ",", "0", ",", "nu1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"l2", ",", "0", ",", "nu2"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "Output", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Re", "@", "Fcsum"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.432164475028841*^9, 3.4321645007308826`*^9}, {
   3.432164559587888*^9, 3.4321645609987307`*^9}, {3.432165034110524*^9, 
   3.4321650572198277`*^9}, {3.432165158558938*^9, 3.432165171589191*^9}, {
   3.432165394825656*^9, 3.432165397257402*^9}, {3.432165465827176*^9, 
   3.43216547740092*^9}, {3.4321655102572613`*^9, 3.432165513840794*^9}, {
   3.4321657303568087`*^9, 3.4321657320604887`*^9}, {3.432165767820364*^9, 
   3.432165806076914*^9}, {3.4321658419174013`*^9, 3.432165880086025*^9}, 
   3.432166094728863*^9, {3.432166125909054*^9, 3.4321661672996807`*^9}, {
   3.4321663942436333`*^9, 3.4321663956329527`*^9}, {3.432166501693158*^9, 
   3.4321665030643*^9}, {3.43216673849061*^9, 3.432166740183734*^9}, 
   3.4321667972509403`*^9, {3.432168000163744*^9, 3.432168101723241*^9}, {
   3.432168225870502*^9, 3.4321682296781483`*^9}, {3.432168523280892*^9, 
   3.4321685556726294`*^9}, {3.4321686261403303`*^9, 3.432168640284136*^9}, {
   3.432168675812392*^9, 3.432168683348143*^9}, {3.432168720156942*^9, 
   3.432168763689488*^9}, {3.432172024144751*^9, 3.432172050120957*^9}, {
   3.432172257290839*^9, 3.4321722611468887`*^9}, {3.432173586889474*^9, 
   3.432173592697238*^9}, {3.432173724698579*^9, 3.432173737644731*^9}, {
   3.432173790242343*^9, 3.4321738418967247`*^9}, {3.432173917721683*^9, 
   3.432173945972389*^9}, {3.4321753959219017`*^9, 3.432175411521921*^9}, {
   3.432175583382167*^9, 3.432175583458143*^9}, {3.432176008951717*^9, 
   3.432176024939391*^9}, {3.432176078683957*^9, 3.4321760843541317`*^9}, {
   3.432176130625135*^9, 3.432176139706799*^9}, {3.4321762504858017`*^9, 
   3.432176256778852*^9}, {3.4321763255409527`*^9, 3.4321763263402147`*^9}, {
   3.432176393278545*^9, 3.43217640514075*^9}, {3.432176543247615*^9, 
   3.432176595681182*^9}, {3.432176654836076*^9, 3.432176657536827*^9}, {
   3.432177349722715*^9, 3.4321774110023003`*^9}, {3.432177459396303*^9, 
   3.432177460916058*^9}, {3.432177523478413*^9, 3.432177536078494*^9}, {
   3.43217757860168*^9, 3.432177588667672*^9}, {3.432177635009089*^9, 
   3.432177787708178*^9}, {3.432177844945259*^9, 3.432177892303248*^9}, {
   3.432177936249876*^9, 3.432178000263792*^9}, {3.432178096010285*^9, 
   3.432178136334681*^9}, {3.432178177352942*^9, 3.432178177455213*^9}, {
   3.432179262959766*^9, 3.432179263950502*^9}, {3.4321793025667973`*^9, 
   3.432179347921713*^9}, {3.432180077511037*^9, 3.432180112535122*^9}, {
   3.432180562850444*^9, 3.4321805651660547`*^9}, {3.43218091490996*^9, 
   3.432180928671938*^9}, {3.432181110450214*^9, 3.432181127978244*^9}, {
   3.432181206660988*^9, 3.432181368863246*^9}, {3.432182736125505*^9, 
   3.432182786241544*^9}, {3.432182848202199*^9, 3.432182874900391*^9}, 
   3.43218423565589*^9, {3.432184292565318*^9, 3.432184294227523*^9}, {
   3.432184351012343*^9, 3.432184357163969*^9}, {3.432221241623657*^9, 
   3.4322212462572937`*^9}, 3.432221334973777*^9, {3.432221370411953*^9, 
   3.432221373671047*^9}, {3.4322214339578333`*^9, 3.43222143600524*^9}, {
   3.432221480189521*^9, 3.432221482539319*^9}, {3.432221655771194*^9, 
   3.432221661194496*^9}, {3.4323147240750713`*^9, 3.432314860224366*^9}, {
   3.4323148917792273`*^9, 3.432315071624955*^9}, {3.4323151305311003`*^9, 
   3.432315149505109*^9}, {3.432315186215022*^9, 3.432315190918494*^9}, {
   3.432317264248022*^9, 3.4323173008757153`*^9}, {3.432317339509029*^9, 
   3.432317461350669*^9}, {3.432317499891686*^9, 3.432317503546336*^9}, {
   3.4323183444001017`*^9, 3.432318524932889*^9}, {3.43231862949852*^9, 
   3.432318671171035*^9}, {3.432318736820797*^9, 3.4323187577190447`*^9}, {
   3.432318955222197*^9, 3.4323189638776817`*^9}, {3.432319015011437*^9, 
   3.432319018447064*^9}, 3.432319060370976*^9, {3.432319108420027*^9, 
   3.4323191113513927`*^9}, {3.4323195059711103`*^9, 3.432319515271881*^9}, {
   3.43231974278036*^9, 3.432319758475225*^9}, {3.432320194379529*^9, 
   3.4323201945420856`*^9}, {3.4323204575014753`*^9, 3.432320459853039*^9}, {
   3.4323220766172733`*^9, 3.432322078027905*^9}, {3.432426261383238*^9, 
   3.4324262685025797`*^9}, {3.432465087513102*^9, 3.432465087758628*^9}, {
   3.432748218280889*^9, 3.432748218734696*^9}, {3.67114551316238*^9, 
   3.671145513192856*^9}, {3.6711464956471767`*^9, 3.671146495694044*^9}, {
   3.671151704819096*^9, 3.671151708632616*^9}, {3.671155784467964*^9, 
   3.671155784501495*^9}, 3.671156942971081*^9, {3.671157332078042*^9, 
   3.671157332356913*^9}, {3.671157368148093*^9, 3.67115738280363*^9}, {
   3.671157462425624*^9, 3.671157465896399*^9}, {3.67115756949298*^9, 
   3.671157634827065*^9}, {3.67115766840942*^9, 3.6711576694017897`*^9}, {
   3.671157806405157*^9, 3.6711578135081787`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FCD", "[", 
    RowBox[{"R_", ",", "nu1_", ",", "nu2_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "AccN", ",", "Acc", ",", "l1", ",", "l2", ",", "j1", ",", " ", "beta1", 
       ",", " ", "j2", ",", " ", "beta2", ",", "y1", ",", "y2", ",", "a", ",",
        "Fcsum", ",", "fac0a", ",", "fac0b", ",", "fac0", ",", "fac1a", ",", 
       "fac1b", ",", "fac1", ",", "fac2", ",", "fac3", ",", "Fcaux", ",", 
       "Lambda", ",", "aux", ",", "peak", ",", "xatmax", ",", "fatmax", ",", 
       "integr", ",", "res", ",", "finteg2", ",", "smallestx", ",", "x", ",", 
       "X"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], "*)"}], 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "This", " ", "program", " ", "computes", " ", "the", " ", "Franck"}], 
       "-", 
       RowBox[{
       "Condon", " ", "factor", " ", "of", " ", "two", " ", "Morse", " ", 
        "functions"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"for", " ", "the", " ", "mirrored", " ", "potentials"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Modified", " ", "version", " ", "of", " ", "Lopez"}], "-", 
       "Rivera", "-", "Smirnov", "-", "Frank"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Usage", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"FCH", "[", 
       RowBox[{"R", ",", "nu1", ",", "nu2"}], "]"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}], "*)"}], 
     RowBox[{"(*", " ", 
      RowBox[{"Accuracies", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Acc", "=", "15"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AccN", "=", "60"}], ";", "\[IndentingNewLine]", 
      RowBox[{"j1", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{"\[Lambda]1D", "-", 
          FractionBox["1", "2"]}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"j2", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{"\[Lambda]2D", "-", 
          FractionBox["1", "2"]}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"beta1", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{"\[Beta]1", ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"beta2", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{"\[Beta]2", ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"a", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{"beta2", "/", "beta1"}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y1", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "*", "j1"}], "+", "1"}], ")"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "beta1"}], "*", 
            RowBox[{"R", "/", "2"}]}], "]"}]}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y2", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "*", "j2"}], "+", "1"}], ")"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "beta2"}], "*", 
            RowBox[{"R", "/", "2"}]}], "]"}]}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Fcsum", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"fac0a", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{"2", "*", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"a", "*", 
            RowBox[{"FullSimplify", "[", 
             RowBox[{
              RowBox[{"nu1", "!"}], "*", 
              RowBox[{"(", 
               RowBox[{"j1", "-", "nu1"}], ")"}], "*", 
              RowBox[{"nu2", "!"}], "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"j2", "-", "nu2"}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Gamma", "[", 
                  RowBox[{
                   RowBox[{"2", "*", "j1"}], "-", "nu1", "+", "1"}], "]"}], 
                 "*", 
                 RowBox[{"Gamma", "[", 
                  RowBox[{
                   RowBox[{"2", "*", "j2"}], "-", "nu2", "+", "1"}], "]"}]}], 
                ")"}]}]}], "]"}]}], "]"}]}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fac0b", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"y1", "^", 
           RowBox[{"(", 
            RowBox[{"j1", "-", "nu1"}], ")"}]}], "*", 
          RowBox[{"y2", "^", 
           RowBox[{"(", 
            RowBox[{"j2", "-", "nu2"}], ")"}]}]}], ",", "AccN"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"fac0", "=", 
       RowBox[{"fac0a", "*", "fac0b"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{"(*", 
        RowBox[{"Do", " ", "loops", " ", "for", " ", "summations"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"fac1a", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", "*", "j1"}], "+", "1"}], ")"}], "^", 
              RowBox[{"(", "l1", ")"}]}], "*", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", "*", "j2"}], "+", "1"}], ")"}], "^", 
              RowBox[{"(", "l2", ")"}]}]}], ",", "AccN"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fac1b", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "beta1"}], "*", "R", "*", 
               RowBox[{
                RowBox[{"(", "l1", ")"}], "/", "2"}]}], "]"}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "beta2"}], "*", "R", "*", 
               RowBox[{
                RowBox[{"(", "l2", ")"}], "/", "2"}]}], "]"}]}], ",", 
            "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fac1", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"fac1a", "*", "fac1b"}], ",", "AccN"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fac2", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"l1", "+", "l2"}], ")"}]}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"l1", "!"}], "*", 
               RowBox[{"l2", "!"}]}], ")"}]}], ",", "AccN"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fac3", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"FullSimplify", "[", 
             RowBox[{
              RowBox[{"Binomial", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", "*", "j1"}], "-", "nu1"}], ",", 
                RowBox[{"nu1", "-", "l1"}]}], "]"}], "*", 
              RowBox[{"Binomial", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", "*", "j2"}], "-", "nu2"}], ",", 
                RowBox[{"nu2", "-", "l2"}]}], "]"}]}], "]"}], ",", "AccN"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Fcaux", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"fac0", "*", "fac1", "*", "fac2", "*", "fac3"}], ",", 
            "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
            "===", "===", "===", "===", "===", "===", "===", "===", "===", 
           "\[Equal]"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Integration", " ", "Section"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Integral", " ", 
           RowBox[{"Ia", ".", "Calculation"}], " ", "with", " ", "scaling"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
            "===", "===", "===", "===", "===", "===", "===", "===", "===", 
           "\[Equal]"}], "*)"}], 
         RowBox[{"Lambda", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"j1", "-", "nu1", "+", "l1", "-", 
             RowBox[{"a", "*", 
              RowBox[{"(", 
               RowBox[{"j2", "-", "nu2", "+", "l2"}], ")"}]}]}], ",", 
            "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "Integrand", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"integr", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "^", 
              RowBox[{"(", 
               RowBox[{"Lambda", "-", "1"}], ")"}]}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"y1", "*", "x"}], "+", 
                  RowBox[{"y2", "*", 
                   RowBox[{"x", "^", 
                    RowBox[{"(", 
                    RowBox[{"-", "a"}], ")"}]}]}]}], ")"}]}], "/", "2"}], 
              "]"}]}], ",", "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"finteg", "[", "xx_", "]"}], ":=", 
          RowBox[{
           RowBox[{"xx", "^", 
            RowBox[{"(", 
             RowBox[{"Lambda", "-", "1"}], ")"}]}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"y1", "*", "xx"}], "+", 
                RowBox[{"y2", "*", 
                 RowBox[{"xx", "^", 
                  RowBox[{"(", 
                   RowBox[{"-", "a"}], ")"}]}]}]}], ")"}]}], "/", "2"}], 
            "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Find", " ", "smallest", " ", "x", " ", "before", " ", "underflow", 
           " ", "occurs"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Off", "[", 
          RowBox[{"General", "::", "\"\<unfl\>\""}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"smallestx", "=", "0.1`50"}], ";", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"finteg", "[", "smallestx", "]"}], ">", "$MinNumber"}], 
           ",", 
           RowBox[{"smallestx", "=", 
            RowBox[{"smallestx", "/", "2"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"smallestx", "=", 
          RowBox[{"smallestx", "*", "2"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"On", "[", 
          RowBox[{"General", "::", "unfl"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Looking", " ", "for", " ", "position", " ", "of", " ", "maximum"}],
           "*)"}], "\[IndentingNewLine]", 
         RowBox[{"aux", "=", 
          RowBox[{"FindMaximum", "[", 
           RowBox[{"integr", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"smallestx", "+", "1"}], ",", "smallestx", ",", 
              "\[Infinity]"}], "}"}], ",", 
            RowBox[{"WorkingPrecision", "\[Rule]", "AccN"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"peak", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"aux", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"xatmax", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{"peak", ",", "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"Integrand", " ", "value", " ", "at", " ", "maximum"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"fatmax", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"finteg", "[", "peak", "]"}], ",", "AccN"}], "]"}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"finteg2", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "/", "fatmax"}], ")"}], "*", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"X", "*", "xatmax"}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"Lambda", "-", "1"}], ")"}]}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"y1", "*", 
                   RowBox[{"(", 
                    RowBox[{"X", "*", "xatmax"}], ")"}]}], "+", 
                  RowBox[{"y2", "*", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"X", "*", "xatmax"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"-", "a"}], ")"}]}]}]}], ")"}]}], "/", "2"}], 
              "]"}]}], ",", "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"res", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"fatmax", "*", "xatmax", "*", 
             RowBox[{"NIntegrate", "[", 
              RowBox[{"finteg2", ",", 
               RowBox[{"{", 
                RowBox[{"X", ",", "0", ",", "Infinity"}], "}"}], ",", 
               RowBox[{"PrecisionGoal", "\[Rule]", "Acc"}], ",", 
               RowBox[{"AccuracyGoal", "\[Rule]", "Acc"}], ",", 
               RowBox[{"Method", "\[Rule]", "\"\<DoubleExponential\>\""}]}], 
              "]"}]}], ",", "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"Adding", " ", "terms"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Fcsum", "=", 
          RowBox[{"Fcsum", "+", 
           RowBox[{"SetAccuracy", "[", 
            RowBox[{
             RowBox[{"Fcaux", "*", "res"}], ",", "AccN"}], "]"}]}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"l1", ",", "0", ",", "nu1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"l2", ",", "0", ",", "nu2"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "Output", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Re", "@", "Fcsum"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.67114552355259*^9, 3.67114552360821*^9}, {
  3.6711465042798967`*^9, 3.6711465049257298`*^9}, {3.671151889148663*^9, 
  3.671151936552697*^9}, {3.671155794963821*^9, 3.67115579504313*^9}, {
  3.67115604482537*^9, 3.671156077888556*^9}, {3.671156216204915*^9, 
  3.671156216259719*^9}, {3.671157338477894*^9, 3.671157338764813*^9}, {
  3.671157397764464*^9, 3.671157399043141*^9}, {3.671157488759747*^9, 
  3.671157491647344*^9}, {3.6711576814975853`*^9, 3.671157686433188*^9}, {
  3.671157764574518*^9, 3.6711577980604343`*^9}}],

Cell[TextData[{
 "Case ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Beta]", "1"], "=", 
    SubscriptBox["\[Beta]", "2"]}], TraditionalForm]]],
 ":"
}], "Text",
 CellChangeTimes->{{3.4324650081110764`*^9, 3.432465021202697*^9}, {
  3.4329245546498613`*^9, 3.432924555401692*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FC0H", "[", 
    RowBox[{"R_", ",", "nu1_", ",", "nu2_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "l1", ",", "l2", ",", "j1", ",", " ", "beta", ",", " ", "j2", ",", " ", 
       "y1", ",", "y2", ",", "Fcsum", ",", "fac0a", ",", "fac0b", ",", "fac0",
        ",", "fac1a", ",", "fac1b", ",", "fac1", ",", "fac2", ",", "fac3", 
       ",", "Fcaux", ",", "Lambda", ",", "aux", ",", "res"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], "*)"}], 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "This", " ", "program", " ", "computes", " ", "the", " ", "Franck"}], 
       "-", 
       RowBox[{
       "Condon", " ", "factor", " ", "of", " ", "two", " ", "Morse", " ", 
        "functions"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "for", " ", "the", " ", "mirrored", " ", "potentials", " ", "for", " ",
         "the", " ", "case", " ", "when", " ", 
        SubscriptBox["\[Beta]", "1"]}], "=", 
       RowBox[{
        SubscriptBox["\[Beta]", "2"], "=", "\[Beta]"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Modified", " ", "version", " ", "of", " ", "Lopez"}], "-", 
       "Rivera", "-", "Smirnov", "-", "Frank"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Usage", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"FC0H", "[", 
       RowBox[{"R", ",", "nu1", ",", "nu2"}], "]"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Abort", " ", "if", " ", 
        SubscriptBox["\[Beta]", "1"]}], "\[NotEqual]", 
       SubscriptBox["\[Beta]", "2"]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"\[Beta]1", "\[NotEqual]", "\[Beta]2"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<\[Beta]1\[NotEqual]\[Beta]2: Use FCH instead...\>\"", "]"}], 
          ";", 
          RowBox[{"Abort", "[", "]"}]}], ")"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Accuracies", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"j1", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{"\[Lambda]1", "-", 
          FractionBox["1", "2"]}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"j2", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{"\[Lambda]2", "-", 
          FractionBox["1", "2"]}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"beta", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{"\[Beta]1", ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y1", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "*", "j1"}], "+", "1"}], ")"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "beta"}], "*", 
            RowBox[{"R", "/", "2"}]}], "]"}]}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y2", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "*", "j2"}], "+", "1"}], ")"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "beta"}], "*", 
            RowBox[{"R", "/", "2"}]}], "]"}]}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Fcsum", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"fac0a", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{"2", "*", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"FullSimplify", "[", 
            RowBox[{
             RowBox[{"nu1", "!"}], "*", 
             RowBox[{"(", 
              RowBox[{"j1", "-", "nu1"}], ")"}], "*", 
             RowBox[{"nu2", "!"}], "*", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"j2", "-", "nu2"}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Gamma", "[", 
                 RowBox[{
                  RowBox[{"2", "*", "j1"}], "-", "nu1", "+", "1"}], "]"}], 
                "*", 
                RowBox[{"Gamma", "[", 
                 RowBox[{
                  RowBox[{"2", "*", "j2"}], "-", "nu2", "+", "1"}], "]"}]}], 
               ")"}]}]}], "]"}], "]"}]}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fac0b", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"y1", "^", 
           RowBox[{"(", 
            RowBox[{"j1", "-", "nu1"}], ")"}]}], "*", 
          RowBox[{"y2", "^", 
           RowBox[{"(", 
            RowBox[{"j2", "-", "nu2"}], ")"}]}]}], ",", "AccN"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"fac0", "=", 
       RowBox[{"fac0a", "*", "fac0b"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{"(*", 
        RowBox[{"Do", " ", "loops", " ", "for", " ", "summations"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"fac1a", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", "*", "j1"}], "+", "1"}], ")"}], "^", 
              RowBox[{"(", "l1", ")"}]}], "*", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", "*", "j2"}], "+", "1"}], ")"}], "^", 
              RowBox[{"(", "l2", ")"}]}]}], ",", "AccN"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fac1b", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "beta"}], "*", "R", "*", 
               RowBox[{
                RowBox[{"(", "l1", ")"}], "/", "2"}]}], "]"}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "beta"}], "*", "R", "*", 
               RowBox[{
                RowBox[{"(", "l2", ")"}], "/", "2"}]}], "]"}]}], ",", 
            "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fac1", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"fac1a", "*", "fac1b"}], ",", "AccN"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fac2", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"l1", "+", "l2"}], ")"}]}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"l1", "!"}], "*", 
               RowBox[{"l2", "!"}]}], ")"}]}], ",", "AccN"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fac3", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"FullSimplify", "[", 
             RowBox[{
              RowBox[{"Binomial", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", "*", "j1"}], "-", "nu1"}], ",", 
                RowBox[{"nu1", "-", "l1"}]}], "]"}], "*", 
              RowBox[{"Binomial", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", "*", "j2"}], "-", "nu2"}], ",", 
                RowBox[{"nu2", "-", "l2"}]}], "]"}]}], "]"}], ",", "AccN"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Fcaux", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"fac0", "*", "fac1", "*", "fac2", "*", "fac3"}], ",", 
            "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Lambda", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"j1", "-", "nu1", "+", "l1", "-", 
             RowBox[{"(", 
              RowBox[{"j2", "-", "nu2", "+", "l2"}], ")"}]}], ",", "AccN"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"res", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"2", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["y2", "y1"], ")"}], 
              FractionBox["Lambda", "2"]], 
             RowBox[{"BesselK", "[", 
              RowBox[{
               RowBox[{"-", "Lambda"}], ",", 
               SqrtBox[
                RowBox[{"y1", "*", "y2"}]]}], "]"}]}], ",", "AccN"}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"Fcsum", "=", 
          RowBox[{"Fcsum", "+", 
           RowBox[{"SetAccuracy", "[", 
            RowBox[{
             RowBox[{"Fcaux", "*", "res"}], ",", "AccN"}], "]"}]}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"l1", ",", "0", ",", "nu1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"l2", ",", "0", ",", "nu2"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "Fcsum"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.432465024115439*^9, 3.43246521979702*^9}, {
   3.432465274266035*^9, 3.432465388551671*^9}, {3.432465420105487*^9, 
   3.432465429377413*^9}, {3.4325731945411053`*^9, 3.4325732657956533`*^9}, {
   3.432573309669347*^9, 3.432573313252521*^9}, {3.4325733799363813`*^9, 
   3.432573468732521*^9}, {3.43259900915317*^9, 3.4325990097675*^9}, {
   3.432748230597961*^9, 3.4327482408266993`*^9}, {3.432748289008816*^9, 
   3.432748297209874*^9}, 3.432859166842492*^9, {3.6711455305281897`*^9, 
   3.671145530607052*^9}, {3.671146523941427*^9, 3.671146524276252*^9}, {
   3.6711558109463167`*^9, 3.67115581102516*^9}, {3.671157347884555*^9, 
   3.671157348187255*^9}, {3.671157702983583*^9, 3.671157707615006*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FC0D", "[", 
    RowBox[{"R_", ",", "nu1_", ",", "nu2_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "l1", ",", "l2", ",", "j1", ",", " ", "beta", ",", " ", "j2", ",", " ", 
       "y1", ",", "y2", ",", "Fcsum", ",", "fac0a", ",", "fac0b", ",", "fac0",
        ",", "fac1a", ",", "fac1b", ",", "fac1", ",", "fac2", ",", "fac3", 
       ",", "Fcaux", ",", "Lambda", ",", "aux", ",", "res"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}], "*)"}], 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "This", " ", "program", " ", "computes", " ", "the", " ", "Franck"}], 
       "-", 
       RowBox[{
       "Condon", " ", "factor", " ", "of", " ", "two", " ", "Morse", " ", 
        "functions"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "for", " ", "the", " ", "mirrored", " ", "potentials", " ", "for", " ",
         "the", " ", "case", " ", "when", " ", 
        SubscriptBox["\[Beta]", "1"]}], "=", 
       RowBox[{
        SubscriptBox["\[Beta]", "2"], "=", "\[Beta]"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Modified", " ", "version", " ", "of", " ", "Lopez"}], "-", 
       "Rivera", "-", "Smirnov", "-", "Frank"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Usage", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"FC0H", "[", 
       RowBox[{"R", ",", "nu1", ",", "nu2"}], "]"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}], "*)"}], 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Abort", " ", "if", " ", 
        SubscriptBox["\[Beta]", "1"]}], "\[NotEqual]", 
       SubscriptBox["\[Beta]", "2"]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"\[Beta]1", "\[NotEqual]", "\[Beta]2"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<\[Beta]1\[NotEqual]\[Beta]2: Use FCD instead...\>\"", "]"}], 
          ";", 
          RowBox[{"Abort", "[", "]"}]}], ")"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Accuracies", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"j1", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{"\[Lambda]1D", "-", 
          FractionBox["1", "2"]}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"j2", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{"\[Lambda]2D", "-", 
          FractionBox["1", "2"]}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"beta", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{"\[Beta]1", ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y1", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "*", "j1"}], "+", "1"}], ")"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "beta"}], "*", 
            RowBox[{"R", "/", "2"}]}], "]"}]}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y2", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "*", "j2"}], "+", "1"}], ")"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "beta"}], "*", 
            RowBox[{"R", "/", "2"}]}], "]"}]}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Fcsum", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"fac0a", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{"2", "*", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"FullSimplify", "[", 
            RowBox[{
             RowBox[{"nu1", "!"}], "*", 
             RowBox[{"(", 
              RowBox[{"j1", "-", "nu1"}], ")"}], "*", 
             RowBox[{"nu2", "!"}], "*", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"j2", "-", "nu2"}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Gamma", "[", 
                 RowBox[{
                  RowBox[{"2", "*", "j1"}], "-", "nu1", "+", "1"}], "]"}], 
                "*", 
                RowBox[{"Gamma", "[", 
                 RowBox[{
                  RowBox[{"2", "*", "j2"}], "-", "nu2", "+", "1"}], "]"}]}], 
               ")"}]}]}], "]"}], "]"}]}], ",", "AccN"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fac0b", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"y1", "^", 
           RowBox[{"(", 
            RowBox[{"j1", "-", "nu1"}], ")"}]}], "*", 
          RowBox[{"y2", "^", 
           RowBox[{"(", 
            RowBox[{"j2", "-", "nu2"}], ")"}]}]}], ",", "AccN"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"fac0", "=", 
       RowBox[{"fac0a", "*", "fac0b"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{"(*", 
        RowBox[{"Do", " ", "loops", " ", "for", " ", "summations"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"fac1a", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", "*", "j1"}], "+", "1"}], ")"}], "^", 
              RowBox[{"(", "l1", ")"}]}], "*", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", "*", "j2"}], "+", "1"}], ")"}], "^", 
              RowBox[{"(", "l2", ")"}]}]}], ",", "AccN"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fac1b", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "beta"}], "*", "R", "*", 
               RowBox[{
                RowBox[{"(", "l1", ")"}], "/", "2"}]}], "]"}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "beta"}], "*", "R", "*", 
               RowBox[{
                RowBox[{"(", "l2", ")"}], "/", "2"}]}], "]"}]}], ",", 
            "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fac1", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"fac1a", "*", "fac1b"}], ",", "AccN"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fac2", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"l1", "+", "l2"}], ")"}]}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"l1", "!"}], "*", 
               RowBox[{"l2", "!"}]}], ")"}]}], ",", "AccN"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fac3", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"FullSimplify", "[", 
             RowBox[{
              RowBox[{"Binomial", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", "*", "j1"}], "-", "nu1"}], ",", 
                RowBox[{"nu1", "-", "l1"}]}], "]"}], "*", 
              RowBox[{"Binomial", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", "*", "j2"}], "-", "nu2"}], ",", 
                RowBox[{"nu2", "-", "l2"}]}], "]"}]}], "]"}], ",", "AccN"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Fcaux", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"fac0", "*", "fac1", "*", "fac2", "*", "fac3"}], ",", 
            "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Lambda", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"j1", "-", "nu1", "+", "l1", "-", 
             RowBox[{"(", 
              RowBox[{"j2", "-", "nu2", "+", "l2"}], ")"}]}], ",", "AccN"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"res", "=", 
          RowBox[{"SetAccuracy", "[", 
           RowBox[{
            RowBox[{"2", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["y2", "y1"], ")"}], 
              FractionBox["Lambda", "2"]], 
             RowBox[{"BesselK", "[", 
              RowBox[{
               RowBox[{"-", "Lambda"}], ",", 
               SqrtBox[
                RowBox[{"y1", "*", "y2"}]]}], "]"}]}], ",", "AccN"}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"Fcsum", "=", 
          RowBox[{"Fcsum", "+", 
           RowBox[{"SetAccuracy", "[", 
            RowBox[{
             RowBox[{"Fcaux", "*", "res"}], ",", "AccN"}], "]"}]}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"l1", ",", "0", ",", "nu1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"l2", ",", "0", ",", "nu2"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "Fcsum"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.432465472032096*^9, 3.4324654827958927`*^9}, {
   3.4325734929811573`*^9, 3.432573502411028*^9}, 3.432748311561417*^9, {
   3.432859173094811*^9, 3.432859173422331*^9}, {3.6711455424317923`*^9, 
   3.6711455425023937`*^9}, {3.67114653031777*^9, 3.671146530620308*^9}, {
   3.671155825217639*^9, 3.671155825288436*^9}, {3.671157353411622*^9, 
   3.671157353739168*^9}, {3.6711577165831833`*^9, 3.671157721334721*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical overlap integrals and attenuation parameters", "Section",
 CellChangeTimes->{{3.671152075162122*^9, 3.6711520969450073`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SH", "[", 
    RowBox[{"R_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "integrand"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"integrand", "=", 
       RowBox[{
        RowBox[{"\[Phi]1", "[", 
         RowBox[{"x", ",", "i"}], "]"}], 
        RowBox[{"\[Phi]2", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "x"}], "+", "R"}], ",", "j"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{"integrand", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
        RowBox[{"Method", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<DoubleExponential\>\"", ",", 
           RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}], 
        ",", 
        RowBox[{"Compiled", "\[Rule]", "False"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dSH", "[", 
    RowBox[{"R_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", ",", "S2M", ",", "SM", ",", "SP", ",", "S2P"}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"h", "=", "0.0001"}], ";", "\[IndentingNewLine]", 
      RowBox[{"SP", "=", 
       RowBox[{"SH", "[", 
        RowBox[{
         RowBox[{"R", "+", "h"}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"S2P", "=", 
       RowBox[{"SH", "[", 
        RowBox[{
         RowBox[{"R", "+", 
          RowBox[{"2", "h"}]}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SM", "=", 
       RowBox[{"SH", "[", 
        RowBox[{
         RowBox[{"R", "-", "h"}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"S2M", "=", 
       RowBox[{"SH", "[", 
        RowBox[{
         RowBox[{"R", "-", 
          RowBox[{"2", "h"}]}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      FractionBox[
       RowBox[{"S2M", "-", 
        RowBox[{"8", "SM"}], "+", 
        RowBox[{"8", "SP"}], "-", "S2P"}], 
       RowBox[{"12", "h"}]]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.416070847452447*^9, 3.41607085120603*^9}, {
   3.424042292549123*^9, 3.424042345454895*^9}, {3.424042770103671*^9, 
   3.424042770754111*^9}, {3.424042866127433*^9, 3.424042866981007*^9}, {
   3.424043033593186*^9, 3.424043034231492*^9}, {3.431050366720607*^9, 
   3.43105038176322*^9}, 3.43105089388979*^9, {3.431198771211475*^9, 
   3.4311988778248453`*^9}, {3.4311991567707653`*^9, 3.431199172850916*^9}, {
   3.431199297766836*^9, 3.431199323204568*^9}, {3.4311995185732822`*^9, 
   3.431199594343917*^9}, {3.431199635679042*^9, 3.4311996535882072`*^9}, {
   3.431200478466655*^9, 3.431200496956134*^9}, {3.431277689982992*^9, 
   3.431277696797483*^9}, {3.43127774864536*^9, 3.4312778976845427`*^9}, {
   3.431278055965583*^9, 3.431278098316188*^9}, {3.431278349440296*^9, 
   3.431278355946475*^9}, {3.431278419022594*^9, 3.4312784912200117`*^9}, {
   3.4312800371554527`*^9, 3.4312800422136583`*^9}, {3.43137341938475*^9, 
   3.431373421951668*^9}, {3.43137350684781*^9, 3.431373512946267*^9}, {
   3.431373553591516*^9, 3.431373560506727*^9}, {3.4313736157317247`*^9, 
   3.431373621849461*^9}, {3.431373807252892*^9, 3.431373844570634*^9}, {
   3.431374199001402*^9, 3.431374233266643*^9}, {3.431374320393556*^9, 
   3.431374325221993*^9}, {3.431374377777339*^9, 3.431374380123169*^9}, {
   3.431374458625641*^9, 3.4313744765037394`*^9}, {3.431374597983591*^9, 
   3.431374607964776*^9}, {3.431374976768428*^9, 3.431374985185214*^9}, {
   3.431375222366076*^9, 3.431375227601581*^9}, {3.431375324930655*^9, 
   3.431375340035357*^9}, {3.431376802307796*^9, 3.431376954116638*^9}, {
   3.431803499857193*^9, 3.431803511133821*^9}, {3.432058711445058*^9, 
   3.432058715271645*^9}, {3.432144086735786*^9, 3.432144105887094*^9}, {
   3.4321816660833197`*^9, 3.432181720865934*^9}, {3.432319961112679*^9, 
   3.432320010073963*^9}, {3.432320232478327*^9, 3.432320278108247*^9}, {
   3.432320501021311*^9, 3.432320501100957*^9}, {3.4324264257969217`*^9, 
   3.4324264288362417`*^9}, {3.432426756136004*^9, 3.432426816528674*^9}, 
   3.432426917561811*^9, {3.4324558803623123`*^9, 3.4324558955288687`*^9}, {
   3.4324703891560507`*^9, 3.4324703892348757`*^9}, {3.432573547950882*^9, 
   3.432573559470093*^9}, {3.432573620848981*^9, 3.432573632703874*^9}, {
   3.671149227119069*^9, 3.671149227157415*^9}, {3.671200811873529*^9, 
   3.6712008119201813`*^9}, {3.671207725896428*^9, 3.671207725950989*^9}, {
   3.671207910869216*^9, 3.6712079122441874`*^9}, {3.6712396362897253`*^9, 
   3.671239714167026*^9}, {3.671239747414331*^9, 3.671239779292383*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SD", "[", 
    RowBox[{"R_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "integrand"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"integrand", "=", 
       RowBox[{
        RowBox[{"\[Phi]1D", "[", 
         RowBox[{"x", ",", "i"}], "]"}], 
        RowBox[{"\[Phi]2D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "x"}], "+", "R"}], ",", "j"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{"integrand", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
        RowBox[{"Method", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<DoubleExponential\>\"", ",", 
           RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}], 
        ",", 
        RowBox[{"Compiled", "\[Rule]", "False"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dSD", "[", 
    RowBox[{"R_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", ",", "S2M", ",", "SM", ",", "SP", ",", "S2P"}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"h", "=", "0.0001"}], ";", "\[IndentingNewLine]", 
      RowBox[{"SP", "=", 
       RowBox[{"SD", "[", 
        RowBox[{
         RowBox[{"R", "+", "h"}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"S2P", "=", 
       RowBox[{"SD", "[", 
        RowBox[{
         RowBox[{"R", "+", 
          RowBox[{"2", "h"}]}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SM", "=", 
       RowBox[{"SD", "[", 
        RowBox[{
         RowBox[{"R", "-", "h"}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"S2M", "=", 
       RowBox[{"SD", "[", 
        RowBox[{
         RowBox[{"R", "-", 
          RowBox[{"2", "h"}]}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      FractionBox[
       RowBox[{"S2M", "-", 
        RowBox[{"8", "SM"}], "+", 
        RowBox[{"8", "SP"}], "-", "S2P"}], 
       RowBox[{"12", "h"}]]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.431198904924646*^9, 3.431198914479003*^9}, {
   3.431199179987146*^9, 3.431199191810912*^9}, {3.431199332532895*^9, 
   3.4311993493160877`*^9}, {3.431199670488027*^9, 3.431199675626553*^9}, {
   3.431200534322818*^9, 3.431200551810594*^9}, 3.431277964635569*^9, {
   3.431280049714322*^9, 3.43128005400393*^9}, {3.431373438863168*^9, 
   3.43137344112153*^9}, {3.4313735204589148`*^9, 3.431373521470995*^9}, 
   3.431373576275256*^9, {3.431373628132947*^9, 3.431373633139762*^9}, 
   3.431373835282555*^9, 3.431374246833405*^9, {3.431374332294198*^9, 
   3.4313743391864643`*^9}, {3.431374385206799*^9, 3.431374387223502*^9}, {
   3.4313744929243*^9, 3.431374500150144*^9}, {3.4313746154719677`*^9, 
   3.43137463002551*^9}, {3.431375002020191*^9, 3.431375009932975*^9}, {
   3.431375235375882*^9, 3.4313752395885344`*^9}, {3.431375350498514*^9, 
   3.431375350571699*^9}, {3.4313769034790993`*^9, 3.431376909568803*^9}, 
   3.431803523184228*^9, 3.432058784643962*^9, 3.432144130271201*^9, {
   3.432181807540429*^9, 3.432181822298934*^9}, {3.432320556765707*^9, 
   3.432320567549375*^9}, {3.43242645628474*^9, 3.432426458116591*^9}, {
   3.432426882513681*^9, 3.432426933545775*^9}, {3.43245590409807*^9, 
   3.4324559144809313`*^9}, {3.43247039222751*^9, 3.432470392339802*^9}, 
   3.432573646609886*^9, {3.671149230118353*^9, 3.6711492301572742`*^9}, {
   3.671200814801581*^9, 3.6712008148481293`*^9}, {3.671207730311191*^9, 
   3.6712077303427896`*^9}, {3.671207917028119*^9, 3.671207917804051*^9}, {
   3.671381147050016*^9, 3.6713811473379297`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]H", "::", "noexpansion"}], "=", 
   "\"\<No logarithmic expansion is possible at the point where S(`1`,`2`) = \
`3`\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]H4", "::", "noexpansion"}], "=", 
   "\"\<No logarithmic expansion is possible at the point where S(`1`,`2`) = \
`3`\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]H", "::", "noexpansion"}], "=", 
   "\"\<No logarithmic expansion is possible at the point where S(`1`,`2`) = \
`3`\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]H4", "::", "noexpansion"}], "=", 
   "\"\<No logarithmic expansion is possible at the point where S(`1`,`2`) = \
`3`\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.671305795827223*^9, 3.671305799756933*^9}, {
  3.6713058430924873`*^9, 3.6713058824437447`*^9}, {3.671305957371694*^9, 
  3.671305998914106*^9}, {3.671306043737506*^9, 3.671306087298071*^9}, {
  3.6713070745626507`*^9, 3.6713070919621677`*^9}, {3.671307183826518*^9, 
  3.671307190034253*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]D", "::", "noexpansion"}], "=", 
   "\"\<No logarithmic expansion is possible at the point where S(`1`,`2`) = \
`3`\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]D4", "::", "noexpansion"}], "=", 
   "\"\<No logarithmic expansion is possible at the point where S(`1`,`2`) = \
`3`\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]D", "::", "noexpansion"}], "=", 
   "\"\<No logarithmic expansion is possible at the point where S(`1`,`2`) = \
`3`\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]D4", "::", "noexpansion"}], "=", 
   "\"\<No logarithmic expansion is possible at the point where S(`1`,`2`) = \
`3`\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.6713064674994307`*^9, 3.671306471323371*^9}, {
  3.6713071939142838`*^9, 3.671307201809812*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]H", "[", 
    RowBox[{"R_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", ",", "S0", ",", "SP", ",", "SM"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"h", "=", "0.0001"}], ";", "\[IndentingNewLine]", 
      RowBox[{"S0", "=", 
       RowBox[{"SH", "[", 
        RowBox[{"R", ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SP", "=", 
       RowBox[{"SH", "[", 
        RowBox[{
         RowBox[{"R", "+", "h"}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SM", "=", 
       RowBox[{"SH", "[", 
        RowBox[{
         RowBox[{"R", "-", "h"}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"S0", "\[LessEqual]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"\[Alpha]H", "::", "noexpansion"}], ",", "i", ",", "j", 
            ",", "S0"}], "]"}], ";", "Infinity"}], ")"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"SetAccuracy", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", 
             RowBox[{"2", "h", " ", "S0"}]]}], 
           RowBox[{"(", 
            RowBox[{"SP", "-", "SM"}], ")"}]}], ",", "AccN"}], "]"}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.416070989945079*^9, 3.416071046356164*^9}, {
   3.416071078433794*^9, 3.416071094476715*^9}, {3.41608425922476*^9, 
   3.416084261850023*^9}, {3.416134903369272*^9, 3.416134913200144*^9}, {
   3.416138010259569*^9, 3.416138012087594*^9}, {3.416147318000396*^9, 
   3.416147323691469*^9}, {3.416148541461827*^9, 3.416148548456257*^9}, {
   3.419340904597356*^9, 3.419340929130462*^9}, {3.419341049319989*^9, 
   3.419341090981407*^9}, 3.419341156262819*^9, {3.419343197857734*^9, 
   3.419343198324229*^9}, {3.432181954637829*^9, 3.432181966008287*^9}, {
   3.4324270992431107`*^9, 3.432427187372096*^9}, {3.432455934681303*^9, 
   3.4324559533132133`*^9}, {3.671036611373919*^9, 3.671036615461492*^9}, {
   3.6711465459479*^9, 3.67114654985812*^9}, {3.671146860168922*^9, 
   3.6711469087093143`*^9}, {3.6711492665893908`*^9, 3.671149277115559*^9}, {
   3.6711493339863977`*^9, 3.671149377359704*^9}, {3.6711558449270353`*^9, 
   3.671155844974522*^9}, {3.671155878893673*^9, 3.671155887077244*^9}, {
   3.6711579745646276`*^9, 3.6711579820281363`*^9}, {3.671206292749028*^9, 
   3.671206347284134*^9}, {3.671306101233116*^9, 3.67130610987297*^9}, {
   3.67130614791221*^9, 3.6713062262711353`*^9}, 3.671306445899926*^9, {
   3.67130661791468*^9, 3.67130661908959*^9}, {3.671307214121895*^9, 
   3.671307215280574*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]H4", "[", 
    RowBox[{"R_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", ",", "S0", ",", "SP", ",", "S2P", ",", "SM", ",", "S2M"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"h", "=", "0.0001"}], ";", "\[IndentingNewLine]", 
      RowBox[{"S0", "=", 
       RowBox[{"SH", "[", 
        RowBox[{"R", ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SP", "=", 
       RowBox[{"SH", "[", 
        RowBox[{
         RowBox[{"R", "+", "h"}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"S2P", "=", 
       RowBox[{"SH", "[", 
        RowBox[{
         RowBox[{"R", "+", 
          RowBox[{"2", "h"}]}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SM", "=", 
       RowBox[{"SH", "[", 
        RowBox[{
         RowBox[{"R", "-", "h"}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"S2M", "=", 
       RowBox[{"SH", "[", 
        RowBox[{
         RowBox[{"R", "-", 
          RowBox[{"2", "h"}]}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"S0", "\[LessEqual]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"\[Alpha]H4", "::", "noexpansion"}], ",", "i", ",", "j", 
            ",", "S0"}], "]"}], ";", "Infinity"}], ")"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"SetAccuracy", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", 
             RowBox[{"12", "h", " ", "S0"}]]}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "S2P"}], "+", 
             RowBox[{"8", "SP"}], "-", 
             RowBox[{"8", "SM"}], "+", "S2M"}], ")"}]}], ",", "AccN"}], 
         "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.416070989945079*^9, 3.416071046356164*^9}, {
   3.416071078433794*^9, 3.416071094476715*^9}, {3.41608425922476*^9, 
   3.416084261850023*^9}, {3.416134903369272*^9, 3.416134913200144*^9}, {
   3.416138010259569*^9, 3.416138012087594*^9}, {3.416147318000396*^9, 
   3.416147323691469*^9}, {3.416148541461827*^9, 3.416148548456257*^9}, {
   3.419340904597356*^9, 3.419340929130462*^9}, {3.419341049319989*^9, 
   3.419341090981407*^9}, 3.419341156262819*^9, {3.419343197857734*^9, 
   3.419343198324229*^9}, {3.432181954637829*^9, 3.432181966008287*^9}, {
   3.4324270992431107`*^9, 3.432427187372096*^9}, {3.432455934681303*^9, 
   3.4324559533132133`*^9}, {3.671036611373919*^9, 3.671036615461492*^9}, {
   3.6711465459479*^9, 3.67114654985812*^9}, {3.671146860168922*^9, 
   3.6711469087093143`*^9}, {3.6711492665893908`*^9, 3.671149277115559*^9}, {
   3.6711493339863977`*^9, 3.671149377359704*^9}, {3.6711558449270353`*^9, 
   3.671155844974522*^9}, {3.671155878893673*^9, 3.671155887077244*^9}, {
   3.6711579745646276`*^9, 3.6711579820281363`*^9}, {3.6712001899869833`*^9, 
   3.67120019829777*^9}, {3.671200229113296*^9, 3.6712003407434483`*^9}, 
   3.671200380367762*^9, {3.671200598355747*^9, 3.671200598419466*^9}, {
   3.671200639971923*^9, 3.671200713433638*^9}, {3.6712039221315536`*^9, 
   3.671203929865032*^9}, {3.671203966080531*^9, 3.671203991448173*^9}, {
   3.671204137774811*^9, 3.6712041582853947`*^9}, {3.671204189293222*^9, 
   3.671204227932222*^9}, {3.67120453449662*^9, 3.67120457259098*^9}, {
   3.671204610166671*^9, 3.6712046145343857`*^9}, {3.6712046638309717`*^9, 
   3.671204699565178*^9}, {3.671204736116531*^9, 3.671204756476387*^9}, {
   3.6712049214417887`*^9, 3.671204953425091*^9}, {3.671206269574342*^9, 
   3.671206269619334*^9}, {3.671206367988851*^9, 3.671206473569983*^9}, {
   3.671306288790369*^9, 3.6713063132058897`*^9}, 3.67130643818027*^9, {
   3.6713070506295567`*^9, 3.671307053067116*^9}, {3.6713071027143717`*^9, 
   3.671307106378436*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]D", "[", 
    RowBox[{"R_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", ",", "S0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"h", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{"0.0001", ",", "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"S0", "=", 
       RowBox[{"SD", "[", 
        RowBox[{"R", ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"S0", "\[LessEqual]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"\[Alpha]D", "::", "noexpansion"}], ",", "i", ",", "j", 
            ",", "S0"}], "]"}], ";", "Infinity"}], ")"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"SetAccuracy", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", 
             RowBox[{"2", "h", " ", "S0"}]]}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"SD", "[", 
              RowBox[{
               RowBox[{"R", "+", "h"}], ",", "i", ",", "j"}], "]"}], "-", 
             RowBox[{"SD", "[", 
              RowBox[{
               RowBox[{"R", "-", "h"}], ",", "i", ",", "j"}], "]"}]}], 
            ")"}]}], ",", "AccN"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.416132639602346*^9, {3.416132707244152*^9, 3.416132733881474*^9}, {
   3.416138318196391*^9, 3.416138324959047*^9}, {3.416147328745019*^9, 
   3.416147346702469*^9}, {3.419341125360486*^9, 3.419341142288204*^9}, {
   3.419343199788991*^9, 3.419343200162569*^9}, {3.432181977118065*^9, 
   3.432181986001822*^9}, {3.4324271705078077`*^9, 3.432427229364544*^9}, {
   3.4324559604178877`*^9, 3.4324559751374683`*^9}, {3.671036623021502*^9, 
   3.67103662586108*^9}, {3.671146942085224*^9, 3.671146958195613*^9}, 
   3.671149286974093*^9, {3.671149359465423*^9, 3.671149381895458*^9}, {
   3.671155895125112*^9, 3.6711559046050177`*^9}, {3.671157908880106*^9, 
   3.6711579538129787`*^9}, {3.6711579876121693`*^9, 
   3.6711579953956623`*^9}, {3.6713063484054003`*^9, 3.671306391812707*^9}, 
   3.671306429828163*^9, {3.671307253967948*^9, 3.671307254816009*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]D4", "[", 
    RowBox[{"R_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", ",", "S0", ",", "SP", ",", "S2P", ",", "SM", ",", "S2M"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"h", "=", "0.0001"}], ";", "\[IndentingNewLine]", 
      RowBox[{"S0", "=", 
       RowBox[{"SD", "[", 
        RowBox[{"R", ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SP", "=", 
       RowBox[{"SD", "[", 
        RowBox[{
         RowBox[{"R", "+", "h"}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"S2P", "=", 
       RowBox[{"SD", "[", 
        RowBox[{
         RowBox[{"R", "+", 
          RowBox[{"2", "h"}]}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SM", "=", 
       RowBox[{"SD", "[", 
        RowBox[{
         RowBox[{"R", "-", "h"}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"S2M", "=", 
       RowBox[{"SD", "[", 
        RowBox[{
         RowBox[{"R", "-", 
          RowBox[{"2", "h"}]}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"S0", "\[LessEqual]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"\[Alpha]D4", "::", "noexpansion"}], ",", "i", ",", "j", 
            ",", "S0"}], "]"}], ";", "Infinity"}], ")"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"SetAccuracy", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", 
             RowBox[{"12", "h", " ", "S0"}]]}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "S2P"}], "+", 
             RowBox[{"8", "SP"}], "-", 
             RowBox[{"8", "SM"}], "+", "S2M"}], ")"}]}], ",", "AccN"}], 
         "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6712003863427277`*^9, 3.671200390526639*^9}, {
  3.67120471646089*^9, 3.671204728724863*^9}, {3.671206580595511*^9, 
  3.671206595888054*^9}, {3.671307273215805*^9, 3.6713072854556847`*^9}}],

Cell["\<\

Coupling lengths for 0-0 overlap at equilibrium distance:\
\>", "Text",
 CellChangeTimes->{{3.4324704529489527`*^9, 3.432470502527019*^9}, {
  3.706965853055951*^9, 3.706965855190346*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]0H", "[", "R_", "]"}], ":=", 
   RowBox[{"\[Alpha]H4", "[", 
    RowBox[{"R", ",", "0", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]0D", "[", "R_", "]"}], ":=", 
   RowBox[{"\[Alpha]D4", "[", 
    RowBox[{"R", ",", "0", ",", "0"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.432470505701777*^9, 3.432470558266953*^9}, {
  3.671207497906185*^9, 3.671207499066113*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]H", "[", 
    RowBox[{"R_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", ",", "S0", ",", "dS", ",", "d2S"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"h", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{"0.0001", ",", "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"S0", "=", 
       RowBox[{"SH", "[", 
        RowBox[{"R", ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dS", "=", 
       FractionBox[
        RowBox[{
         RowBox[{"SH", "[", 
          RowBox[{
           RowBox[{"R", "+", "h"}], ",", "i", ",", "j"}], "]"}], "-", 
         RowBox[{"SH", "[", 
          RowBox[{
           RowBox[{"R", "-", "h"}], ",", "i", ",", "j"}], "]"}]}], 
        RowBox[{"2", "h"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"d2S", "=", 
       FractionBox[
        RowBox[{
         RowBox[{"SH", "[", 
          RowBox[{
           RowBox[{"R", "+", "h"}], ",", "i", ",", "j"}], "]"}], "-", 
         RowBox[{"2", "S0"}], "+", 
         RowBox[{"SH", "[", 
          RowBox[{
           RowBox[{"R", "-", "h"}], ",", "i", ",", "j"}], "]"}]}], 
        SuperscriptBox["h", "2"]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"S0", "\[LessEqual]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"\[Gamma]H", "::", "noexpansion"}], ",", "i", ",", "j", 
            ",", "S0"}], "]"}], ";", "Infinity"}], ")"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"SetAccuracy", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "S0"]}], "d2S"}], "+", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["S0", "2"]], 
            SuperscriptBox["dS", "2"]}]}], ",", "AccN"}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6334709526039743`*^9, 3.633470953490859*^9}, {
   3.633470987314208*^9, 3.6334710005939617`*^9}, {3.6334711107387867`*^9, 
   3.6334711501921253`*^9}, 3.633471281049719*^9, {3.671036638636891*^9, 
   3.671036644780518*^9}, {3.671147180173774*^9, 3.6711473900445766`*^9}, {
   3.6711474544030933`*^9, 3.671147513144812*^9}, {3.67114782712015*^9, 
   3.6711478504771233`*^9}, {3.6711479683052692`*^9, 3.671147968616761*^9}, {
   3.671148140539956*^9, 3.6711481636259527`*^9}, 3.6711492923583097`*^9, {
   3.6713078861838408`*^9, 3.671307902014451*^9}, 3.671307933974256*^9, {
   3.671382244896439*^9, 3.671382259480308*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]H4", "[", 
    RowBox[{"R_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "h", ",", "S0", ",", "SP", ",", "S2P", ",", "SM", ",", "S2M", ",", "dS",
        ",", "d2S"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"h", "=", "0.0001"}], ";", "\[IndentingNewLine]", 
      RowBox[{"S0", "=", 
       RowBox[{"SH", "[", 
        RowBox[{"R", ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SP", "=", 
       RowBox[{"SH", "[", 
        RowBox[{
         RowBox[{"R", "+", "h"}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"S2P", "=", 
       RowBox[{"SH", "[", 
        RowBox[{
         RowBox[{"R", "+", 
          RowBox[{"2", "h"}]}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SM", "=", 
       RowBox[{"SH", "[", 
        RowBox[{
         RowBox[{"R", "-", "h"}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"S2M", "=", 
       RowBox[{"SH", "[", 
        RowBox[{
         RowBox[{"R", "-", 
          RowBox[{"2", "h"}]}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dS", "=", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"12", "h"}]], 
        RowBox[{"(", 
         RowBox[{"S2M", "-", 
          RowBox[{"8", "SM"}], "+", 
          RowBox[{"8", "SP"}], "-", "S2P"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"d2S", "=", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "S2M"}], "+", 
         RowBox[{"16", "SM"}], "-", 
         RowBox[{"30", "S0"}], "+", 
         RowBox[{"16", "SP"}], "-", "S2P"}], 
        RowBox[{"12", 
         SuperscriptBox["h", "2"]}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"S0", "\[LessEqual]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"\[Gamma]H4", "::", "noexpansion"}], ",", "i", ",", "j", 
            ",", "S0"}], "]"}], ";", "Infinity"}], ")"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"SetAccuracy", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "S0"]}], "d2S"}], "+", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["S0", "2"]], 
            SuperscriptBox["dS", "2"]}]}], ",", "AccN"}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.67120715145584*^9, 3.671207231630663*^9}, {
  3.671207287032803*^9, 3.671207444419574*^9}, {3.671307945529109*^9, 
  3.6713079501900673`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]D", "[", 
    RowBox[{"R_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", ",", "S0", ",", "dS", ",", "d2S"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"h", "=", 
       RowBox[{"SetAccuracy", "[", 
        RowBox[{"0.0001", ",", "AccN"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"S0", "=", 
       RowBox[{"SD", "[", 
        RowBox[{"R", ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dS", "=", 
       FractionBox[
        RowBox[{
         RowBox[{"SD", "[", 
          RowBox[{
           RowBox[{"R", "+", "h"}], ",", "i", ",", "j"}], "]"}], "-", 
         RowBox[{"SD", "[", 
          RowBox[{
           RowBox[{"R", "-", "h"}], ",", "i", ",", "j"}], "]"}]}], 
        RowBox[{"2", "h"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"d2S", "=", 
       FractionBox[
        RowBox[{
         RowBox[{"SD", "[", 
          RowBox[{
           RowBox[{"R", "+", "h"}], ",", "i", ",", "j"}], "]"}], "-", 
         RowBox[{"2", "S0"}], "+", 
         RowBox[{"SD", "[", 
          RowBox[{
           RowBox[{"R", "-", "h"}], ",", "i", ",", "j"}], "]"}]}], 
        SuperscriptBox["h", "2"]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"S0", "\[LessEqual]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"\[Gamma]D", "::", "noexpansion"}], ",", "i", ",", "j", 
            ",", "S0"}], "]"}], ";", "Infinity"}], ")"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"SetAccuracy", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "S0"]}], "d2S"}], "+", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["S0", "2"]], 
            SuperscriptBox["dS", "2"]}]}], ",", "AccN"}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6334711592720118`*^9, 3.633471173223753*^9}, 
   3.633471283833529*^9, {3.671036652444377*^9, 3.671036659259818*^9}, {
   3.6711482009484797`*^9, 3.6711482378793583`*^9}, 3.671149299173764*^9, {
   3.671307956056919*^9, 3.671307959078084*^9}, {3.671382269831996*^9, 
   3.67138228862381*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]D4", "[", 
    RowBox[{"R_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "h", ",", "S0", ",", "SP", ",", "S2P", ",", "SM", ",", "S2M", ",", "dS",
        ",", "d2S"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"h", "=", "0.0001"}], ";", "\[IndentingNewLine]", 
      RowBox[{"S0", "=", 
       RowBox[{"SD", "[", 
        RowBox[{"R", ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SP", "=", 
       RowBox[{"SD", "[", 
        RowBox[{
         RowBox[{"R", "+", "h"}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"S2P", "=", 
       RowBox[{"SD", "[", 
        RowBox[{
         RowBox[{"R", "+", 
          RowBox[{"2", "h"}]}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SM", "=", 
       RowBox[{"SD", "[", 
        RowBox[{
         RowBox[{"R", "-", "h"}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"S2M", "=", 
       RowBox[{"SD", "[", 
        RowBox[{
         RowBox[{"R", "-", 
          RowBox[{"2", "h"}]}], ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dS", "=", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"12", "h"}]], 
        RowBox[{"(", 
         RowBox[{"S2M", "-", 
          RowBox[{"8", "SM"}], "+", 
          RowBox[{"8", "SP"}], "-", "S2P"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"d2S", "=", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "S2M"}], "+", 
         RowBox[{"16", "SM"}], "-", 
         RowBox[{"30", "S0"}], "+", 
         RowBox[{"16", "SP"}], "-", "S2P"}], 
        RowBox[{"12", 
         SuperscriptBox["h", "2"]}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"S0", "\[LessEqual]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"\[Gamma]D4", "::", "noexpansion"}], ",", "i", ",", "j", 
            ",", "S0"}], "]"}], ";", "Infinity"}], ")"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"SetAccuracy", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "S0"]}], "d2S"}], "+", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["S0", "2"]], 
            SuperscriptBox["dS", "2"]}]}], ",", "AccN"}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.671207475490868*^9, 3.671207487090557*^9}, {
  3.67130798453515*^9, 3.671307987685615*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Morse overlap integrals and their distance dependence", "Section",
 CellChangeTimes->{{3.421069888721227*^9, 3.421069903861094*^9}, {
  3.43292109142971*^9, 3.432921094117646*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"R0", "[", "2.3", "]"}], "bohr2a"}]], "Input",
 CellChangeTimes->{{3.710181097971113*^9, 3.710181101743165*^9}, {
  3.7101811442069817`*^9, 3.7101811457017384`*^9}}],

Cell[BoxData["0.34999999999999987`"], "Output",
 CellChangeTimes->{3.710181102253269*^9, 3.710181146512993*^9, 
  3.71018489739042*^9, 3.710185046588847*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"SH", "[", 
   RowBox[{
    RowBox[{"R0", "[", "2.3", "]"}], ",", "0", ",", "0"}], "]"}], 
  "2"]], "Input",
 CellChangeTimes->{{3.710181178921476*^9, 3.710181197676202*^9}, {
  3.710181281041842*^9, 3.710181294865106*^9}, {3.7101849295358677`*^9, 
  3.710184929623836*^9}}],

Cell[BoxData["0.017808212712686056`"], "Output",
 CellChangeTimes->{{3.710181193784301*^9, 3.710181198716565*^9}, {
   3.710181282037157*^9, 3.710181295979989*^9}, 3.710184899096519*^9, 
   3.7101849301719217`*^9, 3.710185047916381*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RDA", "[", "x", "]"}], ",", 
        SuperscriptBox[
         RowBox[{"SH", "[", 
          RowBox[{"x", ",", "0", ",", "0"}], "]"}], "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1.3", ",", "0.01"}], "}"}]}], "]"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "Red"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(R\), \(DA\)]\), \[Angstrom]\>\"", ",", 
      "\"\<|\!\(\*SubscriptBox[\(S\), \(00\)]\)\!\(\*SuperscriptBox[\(|\), \
\(2\)]\)\>\""}], "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.710185118890131*^9, 3.710185219478924*^9}, {
  3.71018525239049*^9, 3.710185256045829*^9}, {3.710185458337138*^9, 
  3.710185504918166*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJwdT3k0lYse/SYqUidyC6k8Ges6qVchfb+fKJmjJCWVuhLJmNlNFCkVIqJk
aPCQCGkyZUyXHDImCVE4Tl6SbnSu9/Zae+1/9tqDgoOb1R8UQRBhs/yfrv8/
hJAVcylX/dEo+CQPiPTuEIK9WtB020E+PKavdUTZC2Emt7j+yiQf/nYxzNb2
FkK95BNbXf8x0H0zFTwYKQTRmm+lY4NjcFo3a+fVW0Iwsv6SOcgKoOL2fkUs
EsLmHaTf1RABMBISk6P1Qmhxdr4dny2A7adK6673CiEDvruWlQng/Du35O2T
QjC9s6J1cYkABtM5xT9ECJwfuOVDfYYARG2Or2ziENgT8EZnu7cAVMVfRN6V
IzCkf8kqGa4AjMpkvwYpE6hVkt9NtI6Bs5eX3S5NAk9GGoT0OY5BlMpf1Wq6
BD6wVPao/ciHnLeruIQhgQG6Rxw6rfjQeCU4sc2SQKe7atL2D0ZBoN9G3rcj
0G6Xbc/D6RHgTGm4hB0jsFRLYt4O3RHQzIl4Y+tJ4CGLNPUbbsNgdah3y9pg
ApuNJwI3JX4G78Xa90TPEzjyKtT4XvEniK+L4byLJTDCJSzW//UQPAoa9i+4
SSDx/iRP68MgtK/V74/MJJAXfGK509hHmBpINj1UQKDHVyLu9NQAyF6fKNpY
SmDlZvXFn4kB0DEzWyHxkkCpsXbXmbn9YEfePd/fQiCi7ydSsg+Ci36NP+mZ
3ftMUUtZ/gOkHLfZH/2ZwGXJ9NvQ1b1QLp9X5ThBoILPx+fcoB7o5c3V2CIk
MDiJtygxuxuo8MMJUmIk+gvn1XUMdoGizlNieDGJW4JK9PZyO8FgTNK5fAWJ
vu+tbxmFt4NjukvLNXUSh4vfV98fbYXwPVW6rhtIjCltGNl95A1kisnf1UcS
Mxyjk3qHm+Fl6amFsiYkcvrkpWrCeDDs2ej3xZrEr20XaUuNJhBXUemrOUTi
79vcp0xbG2DN29MmN11IjGgwVYn2eAXmVzoKvXxI9NPbaqWh+RLc9DWXG58h
sSsp/mSeVC1Ef4+MWBlFIrd0ldWJpdWQn933ZfIaianK1UYX2UpoPrh5X0Ma
iXqRReGccxUwIRVXmZFD4oWEP9NKW8tAum50TUAxiY4vDN+eefccNgZtu7bz
BYl85RcOb5Y/BZu1KULlBhIdRnbuJxOKwW9g0mmmnUQzQv4rq18ESYkWzS19
s33lHTLFKwvgmWnm5iw+iQXe+/ddWZMP3QR5J2SKxOy5i++/r82FmULbBTY0
hUX/mc+TPJ8Ny48/9P19AYXyt7b1bIjLBJQX/0DLUBj1VPvGyOAdOMQ7Ytyl
SCE+sLGlAzMg9NzzgjwNCovPcGb+NEmDDG1p+QhtCj2u98dy76VAFd81/IAB
hbFrPzWFySfDYFqNYL0FhWsjhJUHxhNAdM8KW7F9FK5Wes1NkY0HVTG/F71H
KVTclPjydkwsGJU2rS52o1DiuNaEhUU0OHuqxV8KoLBC6V+HJ69HQZRy6K8j
5yhUOmA3MjU3EnK6uo7pRFOY/fCMnl7vOWi8vJ7HSaZwr0qLlbl0GAi2RukM
3aHQ00YkPCAlBDjfBzJK8ii8advK9n0MAs3sLRJxzygMWDS8dLu0P1gdvObj
XEPhjKrOTZ/np8BbSvAeeRQSFVfclRs9Ib7W0GhJN4XuI8bmZqw7PApMfcgf
pHBRBRumwJyAdu4PuapxCvOcOsr3rXCCqX7Lc0nTFFbzszwrnh8F2cSsMfc5
NH6RrdPK/OswbDal9xpK0mhVcspdIdQe7Ai7Cnl5GhuTSS8xuX0QXFioPqFC
o5uBDfHZbA+kOEnE1a+jMeUX3bFizi4oX+Y4k7qFxojsmGabDTuht6nU0XcH
jSZsWsGFWBOgzi1pMttFo9LQeM2AsyEoartrr7Kn0ZxXdF2mWx8M+HXpfzvR
GGU+3enBQ3BMU5jP86JRvDo0N9VDF8KtA07d+5PGKc7Z+AZGCzLntfQER9KY
xOUk9OO/4WXJ6h2742hk1VI6JyU0YdjjbL76LRq/37LaH527BsSV38mSWTTq
Ln3gViWtCmu6NpxtL5z1t+rvCV23CswvX+bfL5v9m2iyf+7wSnDbOrTnbD2N
XHL++hTjZRA9CeX7WmksMTxRLpe2BPKzEtU0e2l0uSGQSy6Sgmb78dg5IzRe
IA9+4LhwYELSePrdt9k8QZKVjaU4SNem/1FIMDgsIS8X8lAUNgb+bLwgzqCI
V/HNy60U2HB3ax3+jcHMlumVTzcJWb/+nLRNCgx2xm5b19z2g01KEBFfsIbB
x9I/e6zsvrHPTOy9BzYyOJ7vljaRPs52Cx+9e6rH4DrN4S++v/HZmYKFhjGm
DJrcnfqu822IXe7klHfMZjZ/63KdM0X9LC6rkGEdGHymmgxPNXvZw00yYYtd
GYwWTTEoi+tiQ896jg77Mpg6OB0pUd/KZmi9sq4IZdB/juJr9XYeWzWqWJZw
iUGtGa6ZpUYD+zE1SPVkIoNj0gV1bm21rKh1a4xBBoPf+Pn5dl6VrOo8jZ+y
uQzmezr9qi8sY41Kwo+OP2bQ4khfgFLTE9bZ431DbSWDtbnp2/47U8heVNLa
lNLI4E5usY+3RD6b0xmd6t3JYJ9rv/ajnGy28dLneSYDDDZau0XknbzLCvS2
eikIGNz14LjzgFo6y5lM6v7+g0Ghm9LkEoebrGbW122NjAiGWT8SayxJYK3s
TR/cXiiCsfYBSQ/VrrLekneWBsqKYEKzk9zCocvsP/cjsm4=
      
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{1.9392510921875004`, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"|\\!\\(\\*SubscriptBox[\\(S\\), \
\\(00\\)]\\)\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\)\"", TraditionalForm],
      None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(DA\\)]\\), \[Angstrom]\"", 
      TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1.95, 2.6379301}, {0, 0.9921567104120083}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7101851293622417`*^9, 3.710185137563019*^9}, {
   3.71018520048656*^9, 3.710185221347858*^9}, 3.710185257766927*^9, {
   3.710185461720118*^9, 3.71018550586167*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RDA", "[", "x", "]"}], ",", 
         RowBox[{"SH", "[", 
          RowBox[{"x", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "3.", ",", "0.01"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RDA", "[", "x", "]"}], ",", 
         RowBox[{"dSH", "[", 
          RowBox[{"x", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0.", ",", "3.", ",", "0.01"}], "}"}]}], "]"}]}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "Red"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.671381480460538*^9, 3.671381583434284*^9}, {
  3.6713816564171963`*^9, 3.671381760799569*^9}, {3.710185062275968*^9, 
  3.710185074355465*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {GrayLevel[0], PointSize[0.0055000000000000005`], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
NNfAyIB8vB5ZEvsf8A1rTw==
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1: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
Bz+L5e4z4wKaVCxNdtmN/T935O0q
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.9251948281250002`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1.95, 3.537531}, {-2.103868462130324, 1.1517481153326217`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.671381505330738*^9, 3.671381558750494*^9}, 
   3.671381591997389*^9, 3.671381674422162*^9, 3.6713817158602047`*^9, 
   3.671381769377942*^9, 3.671403681149531*^9, 3.6714598979956503`*^9, 
   3.671580692283111*^9, 3.6824441946651907`*^9, 3.682708966736051*^9, 
   3.682784901703478*^9, 3.683393294415148*^9, 3.683568252430049*^9, 
   3.684091288625223*^9, 3.68409189013456*^9, 3.684093179292993*^9, 
   3.684168881380404*^9, 3.684169414571988*^9, 3.6842547349619713`*^9, 
   3.684287619369493*^9, 3.684858809035912*^9, 3.685226043883811*^9, 
   3.685313792176526*^9, 3.685398944216832*^9, 3.685462317500084*^9, 
   3.685656069918365*^9, 3.6870428483834248`*^9, 3.687107510381624*^9, 
   3.687707733049623*^9, 3.6882587623721533`*^9, 3.706965899183961*^9, 
   3.710185082187375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SH", "[", 
             RowBox[{"x", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SH", "[", 
             RowBox[{"x", ",", "0", ",", "1"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SH", "[", 
             RowBox[{"x", ",", "0", ",", "2"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SH", "[", 
             RowBox[{"x", ",", "0", ",", "3"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SH", "[", 
             RowBox[{"x", ",", "1", ",", "0"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SH", "[", 
             RowBox[{"x", ",", "1", ",", "1"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SH", "[", 
             RowBox[{"x", ",", "1", ",", "2"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SH", "[", 
             RowBox[{"x", ",", "1", ",", "3"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SH", "[", 
             RowBox[{"x", ",", "2", ",", "0"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SH", "[", 
             RowBox[{"x", ",", "2", ",", "1"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SH", "[", 
             RowBox[{"x", ",", "2", ",", "2"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SH", "[", 
             RowBox[{"x", ",", "2", ",", "3"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SH", "[", 
             RowBox[{"x", ",", "3", ",", "0"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SH", "[", 
             RowBox[{"x", ",", "3", ",", "1"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SH", "[", 
             RowBox[{"x", ",", "3", ",", "2"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SH", "[", 
             RowBox[{"x", ",", "3", ",", "3"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SD", "[", 
             RowBox[{"x", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SD", "[", 
             RowBox[{"x", ",", "0", ",", "1"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SD", "[", 
             RowBox[{"x", ",", "0", ",", "2"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SD", "[", 
             RowBox[{"x", ",", "0", ",", "3"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SD", "[", 
             RowBox[{"x", ",", "1", ",", "0"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SD", "[", 
             RowBox[{"x", ",", "1", ",", "1"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SD", "[", 
             RowBox[{"x", ",", "1", ",", "2"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SD", "[", 
             RowBox[{"x", ",", "1", ",", "3"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SD", "[", 
             RowBox[{"x", ",", "2", ",", "0"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SD", "[", 
             RowBox[{"x", ",", "2", ",", "1"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SD", "[", 
             RowBox[{"x", ",", "2", ",", "2"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SD", "[", 
             RowBox[{"x", ",", "2", ",", "3"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SD", "[", 
             RowBox[{"x", ",", "3", ",", "0"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SD", "[", 
             RowBox[{"x", ",", "3", ",", "1"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SD", "[", 
             RowBox[{"x", ",", "3", ",", "2"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RDA", "[", "x", "]"}], ",", 
            RowBox[{"SD", "[", 
             RowBox[{"x", ",", "3", ",", "3"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "2."}], ",", "3.", ",", "0.01"}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}], 
   "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6712204939457207`*^9, 3.6712205059614477`*^9}, {
   3.671220540553368*^9, 3.6712205633128233`*^9}, {3.6712206362077436`*^9, 
   3.671220701382613*^9}, {3.671221696433852*^9, 3.6712216967835693`*^9}, {
   3.671297351522458*^9, 3.671297501231978*^9}, {3.671297560154705*^9, 
   3.671297560711835*^9}, {3.671297623727721*^9, 3.671297638309667*^9}, {
   3.671297672373515*^9, 3.671297675205368*^9}, {3.671297776805277*^9, 
   3.671297776883807*^9}, {3.671297958257317*^9, 3.6712980078402042`*^9}, {
   3.671311949756218*^9, 3.671312010619327*^9}, {3.671312112762148*^9, 
   3.6713122323204527`*^9}, {3.671312271344363*^9, 3.671312354023234*^9}, {
   3.6713124042068977`*^9, 3.671312409990346*^9}, {3.671313793747343*^9, 
   3.671313936858429*^9}, {3.671381183606719*^9, 3.671381244386239*^9}, {
   3.671396084656066*^9, 3.671396094710947*^9}, 3.671396170264575*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
nHuidmL/ByQBnSQ=
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
3/pWjAcp+5TiV7WN6P8HWGkZYQ==
          "]]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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

          "]]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
h+ICsIPd0G9b4EcK5kLlz9PUkju7gS4mNtT8mAttC7lBbnftAYUq19Pv47nQ
iFbwpY8zPaDj951z9w0Xkre2dFjn1AuXVeXkzT5xIQmpjp2/m3ohZNArfE8B
F3q5vBKpqtIHGXH189wVXKhU9/fLdQF9UGWgZNPZwIUKeTcMxJb0wSj1XuWn
Li4UqERuJMz3gcCXX6oPhriQwj+RUS/pftjttC/eeoYL7dA2Jxhr9IOhbDi3
OpGIZGbJ0KfTD26NA678a4ioNIhm73eyH6KCNdv6NxAR4Y5YVdThfsiB2CNs
GSI6qSF04ZFyPzRNTGRE7CAi+c/DdUMC/TCfckLk0j4iinli5Cg30Adipq9u
o0NE5LvcfJD9qQ80+JcHhXWJSPXTxW3oZh+YFRsZ/jMmIr4ds7X71frAx+Md
u8iaiKp8Sur2/+2FeEX61pgrRPSnvuLrzye9UNB5PszZk4j27k1wjmT2Qnfk
5zmtACJ6ZDb4R7C9B0jH1llvekhEhtnOTX3uPSC3dKli4ikR/WXl5kbz9oBW
ZpFKeRIRxR8vkmPHdq/uFeIv4t+t+s8/Venc2g2Bom7063lE5Pdi7VDw+y54
XVnpcrKEiO6f5krVUu2C8ttbWmWriWg6WPPto8+dMKRy6/B8CxGRh7BP/9Q7
gTHY+La6j4g6Z33kX7r9AqU45Q0po0RkJaaTZ3a1A3QNgny9F4io7PfLE/+c
2sGZ2j3wH5WErOZZ0VKX2yA8T/2/bQIk5B/uHsqyb4WsKxEsgjgJeYipCt6w
a4E6maHNjVtI6BrFvp1i1wxTDYcfvt1FQs+LtI0I9k0gHPx81l+DhJxH3iYu
XW4ENZi2PHd0lZte/HjHrQGMJ3S/KxuQ0Ph0/UVBv3q4kZKyl2ZGQqrpwgWi
EXUQY0KIa79AQqO9wRLzqbXAWnuW9sGVhB7Pk57wFddAe1Gm831vEvK0VdJ5
1fsTlq/ztJwPJCGprF8lXLw/QUrR+pBaBAml2bFdzNSq4WDnl/Q1cav+lAFS
dW0VWEUKCvemkpBPxelfD49Ugr+246287NX8OQ1/VYq/Q9JiyZ8wDgmZt3yW
/adXDqXvJQwulJFQVro+z88/36Df5voXZh0Jpf8hZg+HfgW6aLWc4C8Sep3C
+nZEsxQUKuVDBwdIaFhvIqKMWAI6t2/P5E+S0NjzV0uW1UVwWaXl/JMVEppl
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
ZP4fwqYIVg==
          "]]}, 
        {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
155KYd53nsRnBLCgXcly75ObDmFx4oMkv3AWJHZmNH40TBQr71W+bRzLgsJ0
Lnli1QewoZDQ3sNpLCjqrbvyn0/7MPrT46eJeSxI2yj3o5MvPya6qprVW8qC
Tkf5oD+/eTD1j695P9WxIEFrpeSZ0v8wG4sFn8B2FrSe7tvbwMSJBXDrTJgN
sCCM2bO7zYINS617b6g4zoIOhik0q10gYfVeW19ZF3f4F/jiNjoYsMkjFw/9
2WZB5pLyegvNeIx1OCvkMzMr0hVWCsxQwGGyMUxrL7hZkWREnVbOxDpFT9fi
mo0QK5JOm3okwbxCccEXN5ClWNG+hNlW7ZwFSmgBl+J/iqzI89WPbe+mWUqu
/Y24McSKNtp0dK4mTlPa91UylZ1hRWdlY9v6jMcpi62CtyKNWNEbheUA69Rh
Cs8T118OFjt8vkcEIc8/FCWVJrVTDqwoXKObwvx1kGI8czCTz50V3TKG32IV
vRTPxAd7aD6sKE/D0+tZXjcl5mL3w+pgViT4IauFXamDUsJyZPxNFCvS/uJy
8ZViK6WXGnj+dgIrmuUywxWc+kHZuj1UovVxh69T/+JbWz1FSFzloFARKxL6
+XDoGX0NBfWGv1j6xor+1h/y7SmpoFiGTK40NLKi65LtQe6TZRR/tdOWid2s
6M4hSKTSf6Ukrbz9fvfPjj/lrc/JfUWUqowleb1pVkSxqm7h1c2nDJufiz24
yopiifcvzkEuhYk7lXGTng1xzAxsbZ/MokjU4W62sbOhX2sSSbIV6RRtL+Of
aXxsCM9kHOI5mkz5P5UP3PE=
          "]]}, 
        {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
rf82
          "]]}, 
        {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
bhaU+ExfVvS3CPZ/Z2vRlw==
          "]]}, 
        {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
+qXF
          "]]}, 
        {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
HZefra7l9RQMbCN3w8NfcpXX6GR0wqj0THRdF6S+CjqgtpGMHv0nojsS2AW1
eoNRQiJkpJciTl6V7YIxThXKuCQZBTURMrZXdwJf/lOH8kNkJHxUUzHYqBPk
7P+2vUJklKXwVfl+23cwFD2u6qxNRp+8nrlpnfwOLi0x77TOkNEcqXQPZ24H
RDyY27DjChnpe13KGRTsgBxMz2vWloy4D5t7MJzboW0i+UeNKxldbG2LCy1v
g4UEol68DxmJ/2Ff8d/YBkLnz+d7PiQje8sa3qFLraDM80lM7xkZBbfsepMU
3wIXi5mPdr8hoze+1ltzfjSDl5v5zPJ7Mjp3Q0rt955miN3LNmnKIaOkjh8G
/NZNUNQjUJHyhYzs9GUGfyc1Qv8TBzmfGjIS2be1R+JXA5A0vr4820ZGMoSU
UEfJBhBfEuGUHiCjHYy+b2eufQP1NA978l8y4nGIUbTIqAcLs4bWjjkyyo98
3i4/VQeBm/f+l07iRI/76her79dCcrVfyr11nOgvs/3ZmV01UOnduf6SICca
kVmd8qusgt8HD90+KM6JeNq0v/91rQTmr0fD9P2caFJeNWqLVAVIvxrW7TvM
iW75JO/2HCkHXT3Iy1HjRMQvKhKWGWXgyPlcNFiXE81tuiy1z78UQvPGgszO
caJtY5uLOS+vva9rmtNK5pyou3b+g5B6MTTteHOJz5ETnduWSLwn/wWmmxfK
f3hyIkU3pq6RbBEIPDCQZd/lRCnxrjkh8p9BAXsfGf6YE7maMoTVH7LBaIJM
tn3JiS5HK5cs4oXgmXDx2n8JnMhO1Jqbk1oAkeeyWzalr+X9OSksYJYHhet4
0N8CTlQ4ru3Z1JgDXV8sk0vKOJHkO5eOtjPZsOL6mf/lN05kqBTdmDb6CUT2
Ct663smJEj/xu/eGZ8J/PdeHjv9Yw4cotA3oZIDpk0qdbROcyD3ayFZGKB38
jovlTi1xIibnZ7bd6EeIX7y5o4qLggxXzWKKSz5A6cemB6/5KWj3uYPlCoXv
YPjqvim3rRT0LTMy+dm3ZKBuDrios4eClh54sT6SkkCiurtM/AAFRchR9p/Q
SwAtbwWZRRUKQkFgoZQXD7YHH7/4pkFBnX4PzLSU4uDhz5/EJAMK+ilTvKDb
+BpSo/6z87pEQcF5yh1ifrFQdyqy2dCagjLUjTg1Q6NhjDyJ7XWmoI4bBtvs
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

          "]]}, 
        {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
5AU=
          "]]}, 
        {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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

          "]]}, 
        {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142],
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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

          "]]}, 
        {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJwdV3c81f/3v67rDq6MSkZDaBAKGR/c93lpyCgrGVHKqlBJEhKyMiqUJISy
ZUckvM2GkE32CCXJ3uPn+zv/vP54nvM8z3Nej9fjvM5e85t6VkQCgTDHRCD8
7xzJsbYM+fgPwrrqbLKsE5VtvL7Sxkb+wfRtpdCoKznKzqLh7Xtpk8CtVmYR
fKRYuSj0VFr97kkI4jFlTfz4SXltadHt3tFJcHD/0Rmg0qQM5mnaBzUmQdHr
atEemR7lBzUmQq1mk3Bm2d7DQmVUuUqafe7BnUkQRLSgxVvTyuSo0s+SQZOA
2zUZTwmvKasz20d2xU1ChDHcbhwnM4Js9173fz8JoXRbZDvPxahrbgLZ2kmI
UZ3+zUvbyeBU9uEeHJiEaq1m/Uc1+xh6CbLDTxYmQST2HK2p9wgjjD5aoMQ+
BWLcIX55JEVGm2NE4C+hKcjslh7mWD3O4O1Rv/BcYQrW+f5FPgrTYpicXDl8
TGsKIqoUO7W1DBkxGenEfxZTwHN8PM8t5zKjf/vF1iiXKbg48CFhosKGIeTO
kaIWPAWOw3f1VEUdGZYjZa5zCVNQ33UL7TruzkjWcjjzpmgKinItaCpxfoyx
98KC2g1T4GWspGreGcIQ39M6vTI8BfGNioZ7mV8ybjz0q05ZmYLHJoS0/vtv
GNn/5CPOcU2DYlrennTGW8aM4W8b4oFp6J/kUM9de8eQK4tkZClPA2fcVYl2
pRKG88HTnKZ60/AzxDeQ/XQ1oyhkbZB6dRqObS2IXRqrZ6wuZubn358GIcnT
g49M2xhw+ZK/+bNpIH8d1HTZ1c/w+splwpE6DWENUi2zIqOMKqlKieLSadid
cFk6PHiSQY50JFxrmYYi3RGLjlcLDDXi/ubtY9MQ2XUhMfczAQuyaU+s2JiG
iaeh99grKVhdk7/zze0zsGE3r8hTxYlxKilq7jw0A+cnqbdGn+3A9OL/7PqK
ZuDadSt/H19BLIzt1eQdgxnoBRc3ma0HsLbbWpVCdjNQmmg6JsJxBOPr3nj+
/cEMZFpdnllUlcNMTuRcdXsxAxqV5WXetRgWk26uJJoxA2m5HO9ICiex/m3b
trRVzIBWjdBInfAZTOh+db9XxwwUFjRnaU6dxSyHnd4dnpiBNtr513VHTbDk
Mwf9uplnYfL38TgZD3NsLP+HUQDfLFRrj0Slcl3DxHcHHZI7PAsy77UWGyfs
sRt+yuuDJ2bBfK7GbrnWCcue+NsQfH4WbORd8cuR7tiMQWy8sv0sCItrfalz
9sHkcB2n376z4Foh5qZ9JghzPkBUD4+aBWejo2Z1+55iRcHvBI7nzEK6T5tn
PD0CW12wnPj3aRbyBBL/iVXHYtglnvLo7llILS6t1v2TgHl9+fxMfXoWNHvV
dL2d3mJVR1ys5ylz8GLm2taQxRyM/FLsv/hdc3Ds5YLSZYcCTI2pm01HZg70
9tbtO+1RigVde9y7qjYHA01WO+erK7G6Riwn9eIcUO8tTDCFfMU4FSe9DRzn
IKB0a7a4SwOm9+a1AXPgHOSN3HVeFWvFwljPimbHzsEHAmu1xe4urM2BtGqa
PwedndTDJboDGH9Xfj3t2xz83CkrYbhlBDM5fuX1+/45aN2zPq3KNI7FvOV1
tJifg25bSU7Ooimsf2uNKid9Hg4MR65LXZrHhNzu8ZXsnQeuGO1PGqKrmNVP
8fFr8vPguGOC0/EtEySf7i3lOTMPioSRiFUBMozlBYdWms9DYRN+Juo5G4jv
UrG0d56H93l7m10OcsEN32m5XU/mYVukPalSbTtk/42n1cTPg3c1WQQ/yw8z
5851O33Y5KddpdsrC4JcKTlL+Ps8KOQYDrMvCoPz/sIHDT/nQUL73LHo+weh
6Mk1/fvL8yDqXSUQNyMBq/P8B8Q4F+DXPf//Hh6XBsysdqlt3wLszveh88rJ
gdfn+7XeSgtAxMqH6v4pQtXhw7FHdBcg8wS1olEdATmi/1aP9QJIKgY9+JNw
HNQIT08Eui3Ai8rD7ifiTkHQ1eM75J8ugKnZqp6MwWmoa5j9PZS8AHLG0l6G
0zrA+V9ScUjJArSk2TS2yemD3mvDYEbzAmST95yvZDOCMBrNfOzXAkSEh8qm
+5lC262ioy/WF+AN55Xorr5LwNdpSzmxbREkvGSlx35ZgMmxXZ2ToovQr7U5
C65fgZi0+vRXsAiKpULN3O620M/t6aFxbhF4Se9PuvLYg9A9Kb0Fm0XQk/Jj
Yv/sAFZDgyIJnotw5qZgbmrXHUjWDFvQCV8ES8tqsuglFxh7d7Jm7e0icPII
FRhdvg/iOxei08oXIURA2c993hNu+KTcNGxfhN0N2zxG/b0hZ9z4GOnvIjiu
Tot+vOkHM/ps23OISyBXkfsK3gWAXEnx6AXeJfi5reniPtPH4LzvRhGr5BI0
EHgvlX4IgaLHex4XHF+C8McHufSZnsHaXIOZpfES2GRkWCcGPAe46CXNdXMJ
xIk/t0YaRoDXJxmWUp8l8JfsCxC2j4IqyeF2m8gl4B9OiJfsiAHyi/C0HdlL
INDHGaeu8RrUNk7dr6peAuzFYj/hXDwEXlnSvtW1BKWXexTvPkmEuu9pQrun
luCY+bRjyWIycCiYztWQl8H8SllS5vM00Itj/3J35zIMKpxcHbTOgDAqHiki
vQznNMSbG+Syoc3e/nrjqWU40D3Neq01B/h+7EXuF5bhY2P/Wafgd2Ci0sx9
6PYyyGUK352zzIeYVJ/hdv9loComjESdK4B+LrlCn5hlOC/P2fT90gcQch0N
lMpbhmdl+pZxvh/BajDiQu/XZaixFdQqrSiBZA2NI0F9y3Am/5a5IlsZjOWu
EBXmlqHOkDdEF8pBXCCj9SfrCjSR38SZuFXADe+LKaGCK+Ac3ebcUlYJOX84
7mFyK7ByUltmhbUaZs6Wn/mjuQKpUixsjUafQK7YQTDi8gqEp+IkvpTP4Cwi
MnPi7grMklXsjOa/QNGj1uqpRyvg+PGuQgeqgbVZv4iYNytAEP9xJdnnG8AF
BVvNwhVI4LO2iCmthQfVvxmLdSsgFJxx2+JPHVRKRHEmDq1Av5uztj3lO5DD
Tw/pLq1AemaTxSNKA6itr+Wvb1mFYz3PT6l7NECgdZb/W5FVYOpPoW/8aoC6
+ksmRoqrsMruoFJ4rBE45LklWXRWwdRjVNEjsBH0YisJuVar0P3TYdGitBHC
KHeaL95bBbs1ip1XdyO03dyfxBa6CpFPv2ynDTUCX0e7c2HSKrx3HuuDhkYw
QQGaVsWrsNzKsy/4TSPEpCju5m5ahfOnZb/6GTVCP+f4ZOnoKhR9idAYnmwA
IZdXlbZrq2Cv05MVY9MAVgNa4bxb1+BZB8X2U8B3SFYnXKs+uAbHXDmVNNfr
YCwnR8kBWwOnq2ksx6RrQZzfYsse/TUg3DHeV7yvBm54bRv4dm0N3n+P2XXz
x2fIGat+5+yxBrMdM4sftTbvS++u377nayD+6kxt3sMKkPt40LgpbQ3SatIv
oy04OAt3HvIoW4PzZX3b5uIKoSgoaP1Q2xpgsguTv7/nwNqMcmPHnzVIYdti
/Fk9ETDTiXhfpnUw/zoc8scwAB5UxTpJ71iHuJuXhuNOPsWrxHXV+8TXIWaE
VfUeSypOfk7c+ejYOrTJULjNIvNwtbV3EwpG6yDUV1qS96UYD7SyKh++vg76
+bopb90r8Lo6nrCn3uugcPaYTvSzTzin3BdreLkOtz67816NrMH1Ylz+G89c
B6WCVs99gfV4GPkQ/WXVOrTUsvj9E2/E2250957sXAcfCdOvBoRmnK/9cc70
v3XQYkpJ+l3UgpsC+MSybMAvG99oW6M2PCZ50uC0wAbw7YhSamhpx/s53ogu
HdmAyZ3Dr9XEf+BCzmdXE1U34Emed7COSSdu1U/6rme6AaqSMkNFF7vwZLX3
rzdubYD5g7QzJTLd+Fj2Fcf0hxtQVUtlX2nvxsX5+E4Zv9oA0lUZnyfqPfiN
BzV85HcbwDzg48v1sAfP+X1vPPfLBsT1WYonBPfgM7oSuFnvBshJqOyfNu/B
5Yp6Q+mzG0B52Kojx9SDK3Op5XaTCOjgZPxLZdtu/EJ1nMA7DgLKHevgNH/T
hbu7LPkE8BPQ/Jl7B5+ldOJxEnoTZvsIiKfq5R41zx942UCaodwRAir7xhrn
Id6BDz5nLqcrEdARP9Hoguw2nFnDVGzoJAH5tsd7/uRsxUXW85590CEgVa+G
FmvdZlw1l30t2ISAijSJNhtOjbj1/xsB5bBGe/iwf8f9+fHvyrcI6JKxRggn
/RueWr/jv61uBDT5pdGxbPYTXuNl/+a3HwF9eg86a00V+LjcV7ayUAIy0u4W
em9ZgtP/7L0THk1A98fv1f9VzsclY1177ZIJ6MQHUZpBUBqudbb51PFcAnqW
25xKNwjH7SniOXwlBPRzRDIktvMehH704Z/8TECDvwf0hhivIfdmj/enJgJa
9r17VHYuA1qE5f5G9xDQIjdLwLnSPJhrf2Jw+xcBMYOO0a0fH4Dn0SiuPkNA
p2KJFFZGKcgjJCq4TkCJ5i+XeSfKwGg24uk8lQm1ZEi5sxpUgGvK1ErtVib0
10fGjVWvEiJNNazidzOhbT8Of/zXWwnFnPH1LqJM6PQwj3jpciX0VK3I6xxl
QoEvRlLTEiph3Vn/9X5gQmH5Tw8I9FSAoEQG65o6E/LNSDeKTywHlQEWx2Z9
JjTpLvx3jVAG5s8v9qSaMaEjT/QpLCMfwVu9QNXThgmlnwlikmIqgIQ1jmyD
O0yoLHUrScssBz7lXOWT8GRCJeqG76k7k2DEqtyLOYgJEf80i+Y4hACVn3/8
x3MmdNTwki7TniBctN7hXHYcE5J1Eun+W5GEa3h9K/V7y4Qime0Mm768w+3k
RA5eeM+ESkNnSj77FuOPxtxCZcqZkCXpdzFeXoFnxrQu02qZkEEIf62BwWe8
Xk/Ssr9ts351iubw3Dd8kvyw7v0AE2pqTu9p0mjAuT72yT0eZ0L7B7pFnJ43
4dI3FeIsFphQ3FzSm7jWFlxfOJSmSCSiw0d/HGaQ2/E77b8dONmJyFpDSfGa
0A88POhY98gOIiLms3/32NeFF0DUyRIhIor028gVZuvBO2ZmMp9JENGBLAUH
te+9+HLyaV4bBSIy9ws+tEu+H+c3TXyAjhORwSWNV3rT/bgy5/oYjxYRZV85
zl33YgC/UGWg/9eIiDpC2rrU9w/i7s5ZJZUWROR6MfFdcfQgHidOPRB5g4je
NJcV6ywP4uX9l0LsXYhoO+XwxFVsCB8M+7Ck6kNEn/r8/sReHcKZ1bktdgUT
UUXSgO5n5yFcZM2mduYlERltLfMcuTGEq+ZUytYkEJGab96oguYQbm21MzYu
i4iuovTBQ1uGcH++O9S7RUS05fajw6aFg3hqXd2tM9VExL7Dl/pMYxCvebC/
S7iBiB75rExUVA/g47IeJ5Y7iSggRUWGdGgAp4+1ZzQME9H7DKeToff6ccmY
IzuSJ4mofqKjwPdWH66lF+B5f4WI/NkD53d86cHtyYO/z5KZUcjeC5tjoAsP
LVI8K8bFjM5V3dRX4OnEc288KybsZEYa+40ydLZ14C1C4/va9zOjfC3P29Er
rfhc24ngDClm9MvtZEHw92acJ+jVorcyM1IONneLf9aIy8P85fOnmJE01/hq
dHg9bjSj9e2I3qa/oW7q6sxX3DU5+SjlAjNidAOTkGo1HmlCiOm5woyYrrGP
vHpWhhdzGFPyHJgRkjJQCK8uwHsqc+wD7zMjOwpYcY2m4+t3WTsv+TMjx8p8
0a7pMFxQ3OK4/DNmtFtEsnEs5gmo9H9MZ49hRsvfPqSVXUkF87BtPD9TmFGv
vFN8oXE+eKtd9yh6x4y4Y6ueBxeXQMJq9a+QUmbkI1PGJT5WAZ+yd+td+cqM
bHblt/yu/QQjlnc/MlqYkYNAh4GGdw1Q+RpEtvUxozaN5H4P1noQrTv4ZOz3
Jv/tjiTu7AbQePBgoWyWGUVPWljsVmkCO9nOSy82mJFXbl53eEEzPPotXXOd
lYRuCP/cMsDdCpmvgmRObCchW+7yJ6F6bVCv+zOaX5CEkkZSw22c2mGShUGe
EiMhJctdbcbuHcBV9PzmZ1kScncXY3ey+QHSNyY6XqFNvuUyt1XFTtAXOnXM
UZOEljaSj2pNdsKdtti3GgYk1JsefOpvYBeEBy5u23uZhI5V6v51YeuGAkzX
fcGWhFIUyFFZDt3QMZ06WudEQlsFt/Oal3fDchJRN+EBCaHUsXDXxW7gNzEp
cn1EQu3zVu2zvD2gzJEnrPtiU09coFG3cA9cqKQ/PvCGhCh9V2PU+XvA/a7V
/Fo6CXU8iQoxW+uGuEOlZi0FJHRe4sCcWn03lPfxfE2rICFN7RlWuSfdMPjs
pvSDOhLSOhqoeh7rBma1L1GGHSRUqKsiM9bXBSKrgiySQySkSLR15XPsAtVs
lxukCRKSHszn4lvtBGvLpvbORRIqdbMJ3e7SCf68h1RymFnQ1ou1ubLjPyC1
1jvt4RYW5FbnOR9h8ANqPLu3XuRjQXLJ3g4GHzrgz1HZ+0dFWFCaxOCne9s7
gP778QjrYRa0TUlcgW7XDpKvRrQH/mNBi31nJjZK2kBbFz4UnGBBAzu1DI7T
28CeJULoiTYLYgo+lvjesBVCP0wGWZ5nQYP3410lXrdA7nX1OUUrFuS1kyPu
xu9maNn75iKXPQvC8u78lJFqhrnW5c+jrizoCCOSU8ylCXgCz0qV+rKgEwe+
TU+WN4I8lh4ZFsKCSNL5HgL0RjCaJpFso1jQepws+YhRA7gmXbiuksSC6OHS
v3TOfIfI8+/bduSwIM9Gn7PD/+qgeAsHmvi4iYu45w9E1EJPxZXUqk8sKJyn
a3pG7RusO5VxRzWyoPoXFYZ5hBoQPMTndqubBd2QSA5JKvsCKn23hk+NbvqL
UbMUAz6D+bMard3TLCjDjUu+/vwn8D4lXDi7yoJiSDoyGbLVkLByb+83ChmN
F//S3MpfBdVZLYGvucnoauxSrzi1EkYsJGbv7iIj/yfMvLyECqDy+l3QOkhG
dlyOpBGmchCt7f0kIkNGPr+j4qPYy0DDU/7ICoOM5m4cHLBSLQXboyEvG9XI
aCTo0Vd532J49OsXMeUsGfWzzg25thdBZrSKnftFMnJpYBoZV/4A33UiW/Wv
kZFcq5kII78AJkkz2CFHMvJ+DRpb0Hvg+qCZwuRBRhep55cXuvNA+noCV0fA
Zv7PPUb+Qe9Af++aa2YYGZnl9d0/qZkLd1rP/fSJ3eQ7INiQKZAD4QGZZ0zS
yKjrt2GI22IWFDAoBVL5ZNR2nU+huSMDOqbMBKllZLS/92uyavtbWE4sDOit
IaNonn/BBdOpIHCeayavlYwU3t7iIomlgPIWG9OgfjJqSEUWNLckuFBRUX35
DxlZIy7txNEEcHcSOKwwT0bGL+f9CmzjIU7MMWILEwVd10htFaK8gfLeWqZh
NgraKLl2qL4wDgaf7rP9yENBI4/+cmtuxADzKfeW0L0UpHRYJlo2PxpEVtoY
V8UpaH9W+KfToZFwMutwMiZPQX15f+ODQyPA2sKfc/sxCuIkJN+l54WD/44B
lz+nKahNIvLewHwYpH77b6jckIJ4C8pcGEbPoMbj6ekIcwqy3heEXWoLhXGZ
P/k3rlPQbjXz0cibIUD/dXzPSWcKWu/13Bt34glIRkf7C3hTkLSVVv3ojyDQ
1pmbmnpMQQf/26HMGx0A9iQtky8RFJQWpRNr5v8QQguTqmLiKSg9fypkS7Qv
5NptSNzJpKCmvLEHL1q8oUXQ6IXmh834h1McTw57wVxLNkGoioKmX+5FSWme
wBNAs1ms38xveOjUlYfuIM8wb67/QUFYb3SzztQ9MJoqUk78SUERP+q+HAx2
AdfErUn3/lFQ9vXQ9VMX7kKUsR2H3jIFVbk/uoQZ3YFi9mrngyxUtI39dnmD
223oKd81uM5BRZbqhOT5z7dg/Y6TZis/FWU1dnN3yNmDoNj3vLf7qOhDhU5E
+OPrgHoP7PY6QkWbz9Y4ccwGzJ96PjRSoqKLLpHjRz2vgrfqj0lJVSqiW9NM
/6pbQ8Ky1HkWXSpaVVXeUnHcEqozAyu7TKgocgXP+nvNHEbMh8RzralI8vQT
5YnCS0DdoRzuf4uKPrkxdIkmF0H0W9jGRTcqiq6aOAsBJqDh8feq7EMqilOx
1JyfNwI7GdUmtqdUtJxE9pqJMYBHozFKg9FU9DNgSMLaTR8yoxYSCpOpqL5O
aX9noB7Ua+tsCc7drP/X+SGpTzowyZx616qEiopuVIWonNMCrkKmAaUvVMTZ
FGineU0TpO3Oa3A3UxFJKLWOrUIN9AXfvfvVQ0Vcr77sDDFWBccWtl34LyrS
y870MRM7AeH+ln7PZ6goeDc66XD4GBQql/yzXaei7zeP+otaIuiY3G58jEZD
F5vmrYL9GbCUcKOCdxsNDf1SNG96oQgCxp8P/dtNQ4QkB8uVCXlQZhd8Xi1K
Q6pvdTK8H8rChXLn9aijNLTjemCQg4kMuN9pvOIANDRuEaOrZyUFsaJijWoa
NMRvm7T9NDoM5T1einvO0dCdIf5v+BZxGAztip8zo6HwXf5PsyVEgVn1KHut
DQ2dcxTeFfR8P4gsP3J6c4eGjrSiuKsgAqqZw33OnjR0VWE0nLBPCKzNMXXt
IBpadqsOjUKC4M/zIndfOA19NoyibeHfBSk1/wRW42hI+mcHaRsbP9S4q/k2
vaWhEpW+1HzNHTAu/Xoi5T0NRYuzfhdr2Qb00SVDj3Iaejb5YMDyFTdIRumV
n6vd1D89+GY9jhN0tN+KibfT0GGe53bnc9nBnpkURhykobN1c18tH7BCaIHp
Wsc4DZ1Zl6fGJVIg1zbfOmuBhvy3d9Y687BAy54tDb5EVpRZsRR0uJYIc83W
/5mys6LcfPv91TgBePzxN9K8rGgrTcysqXUNk1fmpdOEWZHGSvrt5uBlzHjS
/k6fBCuaMJPdoR6/gLkmfO3NV2BFCVKhMEOewyKNhNQeHWdFjm0tmfdzp7Fi
+r0ccy1WFFip/fBazCTWW9bM/58xK1JLda6aevgXW3cU9+GwZEXl3zjvKyiO
YYKivn+Hb7CigzHXUaXaKIZ6egyKXVgR7c/LuzWpPzHzULmypz6siO0/Gu9D
/UHM52Sw6LVgVpR3Yp8Vn0o/lrA0+hQiWRH/KdKunw3dWHUGWt2eyIoyCt3/
uPr/wEYuv7Qaz2JF2Gxm2+tXbRiVZ7q+oogVUW4J2sqQWzDRGg2Fl9WsSMux
3l7gQyOm4R7/+mbDZn9yF8ydTL9jttKrrKpdrIj7ZFF/XPE37PGIvuPOEVZE
D/NILvH9gmVGZvRMT7Kizs+e7PLp1Vi9FvnU15VNfTLKxfn7KrFJoll2LJkN
te1Nid34VYZxFxTwOXGxIaNh15N5XSWYtC2n9+mdbKgYfjX2Ghdh+nuujQsd
YEMkmSknu83fn2Nz+bklKTZ0bOhffaFnHhb+8H8LPxtSqu14bb01FytUun0w
6RQbChxxZnPtzsI6/n0LddNjQ52u98U5udOxpXiRFb0LbKiIJadhqTAFEzC6
byl6lQ05XbVqQFWJmDK9rW7DgQ3J2elkXD4Yj10ok5Rvu8+GHl7hURXuisPc
HR/GpfuzoZL50ZDhpFdY7MF+mvezzfjEjFE/7kisvFvhtnEMG1ovLg4dGgvH
BkNCuw+nsqGLZ7tfnBUOw5hPjp0k57Gh/oqQrXHZoZjI0rGs7lI2NK0SrJ/H
FYypZkTxvvvKhob1iv7aqQZh1pdnHwS0sCFZsZXWjn8PMf/tZ/6Y9bEh59zH
96QJvljK10R9uTE2xCIUy3Ha1gurub9eQp9jQ0/X++wu7/fExqUMDwxtsCHB
tc/CvdpuGH0kK+QDKx05yv9SE/jujElGUpeDt9OR5Z0AYvzHO5iO1mULa0E6
4vasazCh3sbsiUW1yofoqLS0oep9qj0W+p5bbqscHenhwE06dB3LtbGN/Y3o
KPcJJ+cD32tYy+4qapnmJu6QjuhnrbG5pp0O4QZ0pCMf2pDla4HxPLzTZXeZ
jg7o6fMKcl3G5JXqTxy3o6Mvr1kCtrZewIz/7c/ku0tHNe8ELL5xnsdc4z12
TD6go/nvWTnxVQZYpGGH56dHdBTjzrjXM3AWK2aTGot+QUd5zS+zH5joYt14
wNnbb+jI52egjMFpLWz99mCxegYdmdrI7si4qYEJHlTaL1i4iS+eMLvFcQpD
3c+C5yvoKHxG4K7UzhOYecj4Ym0dHXVJfOQw81fBfE6cNI/voCPpKoPtYiEY
lrD46pvLEB1lNsy6fXmtiFWnzx/VmaAjr30fwk7LyGMjl7Rj9i/REc3wdeDb
o0cx6vYUyhozO8rLHtVreyGFiX4l3Grewo5a+nZ8WIiTxDTuG3em8rGjQNV6
vcRkMez/AKHky+Q=
          "]]}, 
        {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJwdl3k01N//x8fMmIXJFkKbpCJSJArN65ZC6mNLStaECklCImUtRVmTKJFd
EUokM2979rLvsqXIMvadn+/v/nPPPc/n63kf95x7z7mvXRa39KzwOBxulg2H
+988lGVtGfxtAgpNkj4bljIKbLwrqSNDE9ClJxQUuLeiwFUyonUXlQVJpIlb
mHdjQX6IelrdDha4NkaL0S1/FawuLtx3l2fBvy3Cbt/3DBeARZq2hCYLLhef
Ol3APVPgVWUk1mzGAr5h6jJn73pBqdymWS9nFvD73JUZUKQySNHM7zIBLKiz
6y5K7tnMOENwiOqMZQHzvXn3sMxORoDtrpv+X1hgFHT/X4apBKO2sQGO1LBg
POFjd9e8HINHxZevv48FGdqi1K/XjzP0Eo78fj7PAhd+efEtOWqMcNqfXOVN
k1BsfcMg1EWX0eIU+fSv2CR88J70YC+6zBDqPmPy4ugkmLVNPq25YckwOr18
8KTWhr9m4pIp+RYjJv0DfuLqJLjv22QX4XGX0Stg2hx9bxLuqCvLEHK9GGIP
uFM0giYhCbfn29s3TxmWQ4VuswmTEBGY8XJ2JIyRrOX437v8SVinON33zX7D
GPmyW1T75ySM3i1xPsCVxJDe2Ty1/HsSDng71t3RzWTYP35UlrI8CSnSikMW
XHmMzAnFyAu8U6DkfvzCtbQixvTFYRv8vikY0lkwsmqvZCgURh3/qDIFV3ju
nwxtbWC4SpzjMdabgqbwM0/lTDsZ+cGr/ZTrU5CtQw6Jqx1grCxk5OR4TMFN
URUgPR9lwBVzf4uwKbj8vZdP1meG4V3Ja8SdOgVmO5X3nTVZZZTKlhwoYE5B
WvD5astJIpMU5YS70TQFGnzfhgxKNzE18HsbBUamYOa9/TsDfgFmgE1rYvH6
FIwPFf3txbYzaxv8XW8JTIOAr9681j9xJo+y0tltUtMwcTiPb7/uAaZe/L/t
lWgaDh1Nai9xlWeGc75hORtMw26qinmjhwqz5Y5WiZjdNGj85tQTLVZlCnet
v/jhNQ0Fj+voN7TPMo1OZV2//3IaUiYHb1z+oceM+WChLJk+Ddxa/1lmNhgy
e/n5uVqKp+Fn2Oi0RdoVpphHWa932zSI+vwjlAteZ1r+dvl0cHwa0nialu6b
OjCT/5N41EWYgaXzsXIS0i7MkZz2S0+EZ4DZrza0ZcKDKb0jQErh4AyMD++p
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
          "]]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
PNuQK97OdEg/FPs/4KzoMg==
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0.9503040468750001, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImagePadding->All,
      ImageSize->Large,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0.991646, 3.637531}, {-0.9625789385587704, 
       0.9953825820184341}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {307.2, -186.8934781979682}, 
     ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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

          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
He4syAP0p55gYpiHk198lj8L0lkxTUsQ2ovFHRhg9nnOgqJTlMZGwvmx8h6l
24axLMj+qVWWhiI3NvQspOdwxvZ+tFCm3RA7RjoxfoKxgAVNNnBQomqomOjK
8ZyeTyzoWnCnsup/TJj6m2ie/FoW5KYt2bf1iohZXZn3etzGgpapP9n8/23Q
/LnO/DXtZ0FDL7sel7Is09JrU84rjLOgYOsXj7fOztHq3Dc/Uhe289nFCTwl
TtEmZC7+N7zFgixa3m1Shsdo1JGcZ8UUKroj/YcivDRMk4oirwZzUdG+rZiS
duIATUf7ylUrYSrqD9zsTMj8QXMgljTQJKgoJvg03eHQNlrIew6FXQpUtJc/
ZMXH7Tstz9Yu7g+ion9WCbzcFnW0NqFKctkpKoI8Gwq3cBVtoUXAMUKfigJW
wzvuj5bRuP2cf16/QkUicXRdIiwfaIoqTWqq16nIWM58qzfuHc1wan827x0q
6iQIjNNr5tLckh7snvaiojoO2a6suExa1MUuz+ogKspcKkzJZUullbLIjMe8
2NbmqRfuxybQej4/1rudSEWlJiN3qoRjaJu3h0o131BRrNTN+v5bETThAyr7
hYuoaC2IV8NsNISGep4HL1ZQUdMzyfasJ0E082cTyw2N2/tPL9T2VDyi+aqd
ME/qoqKDMnJMp/d505KXX9XfHaYidaMHsq2/79OqshbldSapyLauzUaVdIc2
YnY2dv8KFUlXNbmvnHOkkbnSmTZIO9DrCnLkjwM3aOK1hFutrDtQaO8+hXbZ
azQtd8PuDN4d6FHuiXPHbpvT/g9Em6zB
          "]]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
mE3R9DLuz+BmhaV8Dw9UdaZT/g/HJ+3M
          "]]}, 
        {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
vrg=
          "]]}, 
        {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
2wtVtL1NerKEOJH7/eUc+4p3Kv8H+eMJyQ==
          "]]}, 
        {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
QWwoOfCQe1voV4ImLDz2NYINXclO+lyg1UVI1bvo5ySyIWNd7fd7hroJLd/P
7++8YEPpd0xH1i70EpcUxSXNXrOh8Tf0SYe8b0TwiEfY/jI2dD0287yEXR+R
Fd+6SK9lQyV/z165199H1OvuteprY0MuGSokN6yfGKcG1L3uZ0O6QzqOFzz6
Cb7ib4ohY2xI7Ar1sHBcPyF/+WCi5RwbeslJXe2I7yf0doTRD7GzIyvmrK+S
Tz/h2j7swsvNjuKlb32VU+0nIoOOdA8KsKOkzvD4HUN9xBuIPfZOjB2l/koV
qHToIzqmprIe7WFHi0dHpI68/EYspmkL2h1kR61XBQLljvUSwqYpPugoO+IV
LJBNed5NsHhXR/h12FE6V813x55OwqzSQO+3ITvaP2hv0PSjg/Byy35XYcmO
2hYUnK5UthGJMrRdMY7/9Lrsl4/6tBBlfeYPnG6wI+mzaVudRZuIgfC3C2r+
7Ohg/faspzpfCLLmesstoezI11C2OEGxhhBfsaudimZH25Xw3aXkKkItt+JA
TTI7CrmD6yX4EISN9eaExGx2pDVpUvNpPJ8IFHKlXS9iR3PtFGVKczLxvK7O
+UQVOyIJ/n7yxLQfr/GR6NrRwI6+rKiHe7omw9iBW6qLnezoWr+rXOb+fGCO
tGc2/GRH7no226HrHeyNlxVIG2dHy+s9PP8LqwAd3bvenkvsSC74KyVh9SM4
UQeGz1DJSLjLd8hnXy2EFR06I81HRsxR7eYQngbIc3xUQtpMRq5Y4JPkH43Q
Ija2s12CjJ569fOaRjTDTJtqaKYcGd3JEfJwFm0F/qC4eT8WGSl0ln7luN0G
SjB7wVidjOKjiueiy9vBcErns6wuGY337HpD/9oB7mlpCpxmZDR4XCnkzqev
EGNCiu/5j4zIRwutw8I6oYTHiDPfhYy2NkfRphW6oKci1+meJxnp3SfEil51
wep1Rqd5IBk9azrAJ83TDaIylkeVHpFRuUpv0DuNbjjcV/ySO56MTqX2awlb
dINF+Eb+H+lkhDOyCIZZN/hpONwqekVGx2g/566pdEPyctXQg/dkdC526Z3Z
Whd8yNmq+181GWWmJtDqM7pg0Op6MdZCRi1qGh/7oAtoQg3iG7+R0cv12QKv
SjtBqk7y/sgwGW1imf0239cJWj4+c6XTZETdxCZPuv8VLh3oNH+89m/e8I/F
k94OCB6Wr3FgUJCJACVLfkcHZMUF7VfdREHNpYfuZ5m1Q/3pH0+ERSnITezs
4GBoG4xzYNQJaQqSEc+KjC1uBb6iiMsfD1BQ8Ju7d68MtIC845+OOERBDTej
ZZc4WkBPTP3I1eMUhEsMXUra1QyubQkvtAwo6EcVT2epRhNE3pvfuP3CP3++
jqtBdo3wBj/tNWdPQZV9nBFb7zdAx+TzX3XXKGhdxbTlpO0XWExlP53sQ0Fm
PKNNyyV1IGxiUuQeTEGmWbHeY0K1wOLJ33H6MQWd0twmtcWnBswqmCG7nlHQ
wVQDl8KpT+B13Xp25SUFdVxbsCl0+QiJu9+fb3lDQYND3yVGVqug7Bt/dUY5
BXmnbiXGoyph4NFleZ86CvrsKb5F43AFkDU+xZ7toKBAgVU+jfkyEF8W5dj7
nYIS9g8b73pfCmo5NxwpfyiI0lGqvbKTABurpvbOeQrqqxsVfvy7BAIFdx/O
JXOgsW2bZgabiuB5rV9GwDoONM89+Se4tRBqvLs3nBPiQKLbo0vIM69hVOGA
p4I4B0r22tKYIlsAzOGQQcY+DjS9Xk4hL+AV7I0bPNmvzIGcItQZpxdy4eRp
ePtGlQPFb5WtfeyfA04cUWL3T3KgOsqAofDpLAh7Ox5kZcyBtEsrzhh9egF5
Dpozh6w50FLcpsTmS8+hZfuzc3xOHMju7aUTNqw0mGld/PjLnQNFqTWkDCuk
AP+9M3Lvb3OgfR1CHQf0kkAJfxkT/oAD6Zrf5NsV9RQMJykU+1gOZO1hLHJk
JQHcU80cDqdyoBiOyuPiXHEQY/y6TSCXA4WbbKgf1Y+BknU86E8xB7oYfd4p
6+tj6Cn/73nlBw40cK5wf/LDCFi9Vro+tpEDNcznrZP2fASiu//teTcHStmo
yVEZEQaHvzn/VP/FgQIxTAfLCwWLRzU6Wyc5kIKtMV00MBj81HcUTi9zIOXH
ygayaXcheenm9s+cVFS74mdfTg+AquyWe0/XU9Ghd7lUrwx/GLTcM319CxXF
hmodNPP3BZrgHTMdSSpKNzbMyHjoDVK1vR/E91ORez7739WnnqDlrSS7hFFR
oXmCjs81d7BXeBDdqEFFdisBlQdjr0Pw0BB7+hkq2qs72s1Nd4WsJ4cveZ2j
It6AK5yX37rAl1MxrXoXqciLTZquleoE45QpfPdVKlLnvRXPCHcAvrfH09lu
UZFC16rDJG4H8g7JfB13qajGqrKw6eh/oLd9xT0rnIo+tsguL0VbgWur/g//
BCraMkLmvKlsAZF3s06YZFARpTbLjCliDm8wzjdyBVRExbV4RJ1MoWPivCit
lIo2nr2esrTRCBZTCu/21lCRmPi8TL6QAYgY803lt1LRuk38K/pXzwBrnZ1p
UB8V3X8XXdYtchrMysurLoxSUX3U6QDEqwNe10T2HZyloihbg6f+llqQKH01
ah0bJ+o7se2mirg6lPXWsv3k4kQl1cYUBzVVGHi4076YnxNpPHldq08cBrK6
V0vYdk5kYWw0EMkAEF9qw2xlONHmNxXr1bapwLHsfWm40j/8uGtNPlMJbCwD
eTcd4UQKs9meN1MVIFCg/8aoNieqt94o93ZVDp5/Vv5edpYTBW+2OfNWfx/U
3HqoHWXxj98gICFwZDeM7R8tcHTgRFaGVyLJubuAOXR02zE3TjSyb8Vs5KE4
7H3yJFDEjxMxVMXb575uh5OnZiYmQjgRtTEisWVqKzhRdEw+RXEig8k4uy9f
hCGsMLUyPokTsWx6r2YpCEDepbU9rlmc6JBcs6Mn30ZoETV8fPwtJ5ourP2s
dpYPZlpySGKVnMi57NzI6wlu4L9Lt5uv50SzfOfPoFY6KGEWzfVfOZHDy5wN
papUMJwoYqX84ESSkmEF6nvJ4J6yIfXmX06kljYjKuJLglijSzy6i5yILK/7
o9dqGS/hrnKT5KCh9TKsjAs283hP2ZaBVR4a+mwu4xg3NY2vul473ipMQ7J5
S6YiixO4qPSX/Bc7aSgvQ13IvfkPjnp3bfWVpaHUcKUnv2xHcIuH3gGGKjQU
dXgpiPRkEPdT+zq+V42G6hUSu1zOfseTF+WMOU7TEOlRhW1+YB9elXWvosuE
hmzMPwrrQTc+aPFdJs+GhgxGh53zNnfgNAFWZKAzDaE/gfXHwlpwqc/ha+c8
aEjMtqWJO7AR17r12/ZAAA158Cyjop46/NJ+tSauh//yFTv7ztlX48G/4lUG
ntCQxkmBwxkJVXhW7FxyYRoNaaf73DS/UI7Xnzy1LjSPhiqdPgRUKBP4OPn5
det3NOR9e/c2P58inK+QrV/lEw2JetIoazdf4/KXjLXWN9NQcASdbMvzCtcT
ffVqqIeGCsUe7w7dmYNfbeHaQgzR0PjdxD/1Bi/wyECrOxFT//y5n1Nkt6fh
hax3f+1XaWg0boOv8v0kvGN8k9EROh0VylS/+3U7EV9IdiwX3EhHLsPvUw1/
xeIiRh93/91KR498Trj/CHqMs7hFI6qk6KhTadNF665HuFmZ22qsAh0Frnw8
I1fyAPdybfzPBeioAYLSK2SD8QQp6UYNLTq6hGUKRBQF4GU9voe26dORnokw
D8esHz4Q1pU0c56OLOIdjJc/euNkNQXuWjs6+vV5U3ePvAcuvhh87ZkrHa2e
S1e8l3kdV8v6+c3Nm46GOtNV83uv4DYWuObJIDq6mSNvLZzhhAfyP87bGUlH
eX2zcPevPZ5e81dkOZGOtG98jamw+Q+v8fr35b2go6j8zZFujy3xMfmnf9Jf
01GWdk7XbStznPlr4eytMjoSu3HIJMTOBN8bq1umX0tHxutTPtUOG+CnTr6Q
lmmnI9ojMVL0jjO4E5kSzj5AR3bdkYHu0yfxsDemKx1jdMR41bxR/7kWnmdf
YJM9R0dntBnTPipqeMu2dQ232RkocjYn4WLAEXym2UbZlJuBpAn1AOleHOcP
JJ7JCzLQtVu/deLzlHElliCTvoPx7z66LFlz4QBuNO7k+m0PA9WMuevzfJLD
3ZOrewsOMtB+z/vW9NA9eIyhmEbwUQbqfhXFvv2+JF7CvJlrofNPL0TB+7il
ON5b2iysbMRAIpubL8GoKL56Vcafx4qBLL/IW3TzbsZFpW7//unIQLp2x3z2
qwrgqKfHoOQGA922aBfcqr4BtwhTLH3oz0Af4nrR6m8e3P9YqNTFUAY6BOWv
WxwYePLCr4cQw0A/Umypzj0ceFUmWt6UwkDGBa2zPhvZ8cEL0dZj2Qx05q7V
h9qBFYzGP1lfXsRAOtYu1dI585hUjdbB6CoGKryjvGxjMY1peSU9vdzAQOv+
ww1jm8Yxe/llhloXA00+lLBqLB3FQgb1rm4eZCDV/Ge3KvsHsayYzJ7JcQby
DZYy0+4awOp1qOrVSwxUkuF/0In3GzbOfj4ngcqFqHuXJ48/+oqtf/NG6Bof
F3L/2Vs3zNWKydvz+mlv5kJoWCOo6mQjprft4pjYLi50pWFoFa7XYleby/QX
5LiQ1Qbfl3etPmKRAf97+LlQot1rU7pSBVaockUyVf0fNnlZbx9CYB1/P4d5
6HKhy59w/v4fb7GFJPElXTMudEJlk3cmVoCJGHpaSdlyoWKeN79C7HIxFrOt
bs2FCymbOf3Gg19iZqV7ldo8uVD74vwjumUa5nU1IPFlIBcacmngCpZIwhIk
++h+j7jQPIPRH2CUgJV1H7xiFM+FwluebxdNjcYGHoR173vOhezYXpxuWAjH
yMdGjlHzudCilOJC9M4wTHzhSHb3ey702PkzTxxHMKaWGSv4qpoLcUpdqzzw
/Q5mc2Ha524LFzKvuV+dmu2LBW46MXr+GxfKEaKca73lhaVXp+gpjnAhGvNh
gm6/G1bjufqOOcOFTqllH3ireRUbkzu76/vaPz9RK2Gru04YczD7wVsGE9Gc
kM+NSTtsbwxtMXQTEx3Q/DJkN2mNndK5YGkjykQfgqNSeXsvYE7sRbWs3Uz0
vmZ7VvFGMyzs9XrFDYpMpEwh3MTSz2J5dvYJw4iJ8k7nGsSzzmAtWytppceZ
qGZzjfnYsZPYTNNml0gDJvJFk8f5L2pi/AGuXZcuMJFCwoX2iCRVTEmlXvXo
JSYqX/YOaSpDmNFfiSyh60x0v1BH49R+Fcw96ZbAuA8TSdKE4834FLGYsx3e
H4KZaH2c5dWUn3JYCZfcyJPHTLR5uoSVR9mDdRN3z1x5xkTHn849xvx3YatX
Bko0M5notS8XYnDvwEQlVSREC5nItv7x1GLnVgx1PwqdLWeipC3mRpaLgpjF
g7H52jomsm5hexiouBHzVz1mkdTBRBoSemM/jXix5Pm4zze+M9FweUjJoDMD
q3o5q3DqDxNRK3r4o8w5sEHzk/ESC0zUtvdIyFk1Noy2KZ1zhcyNVB0PdtUP
LbGkqknOzeu4EelIYEjy3VmWlqdR53MhbiQcacMfKjfJ+j+Zna4d
          "]]}, 
        {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
7CumqDzR78nk3wXvhvKH2mjkU/4PhHQDUQ==
          "]]}, 
        {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
nvWcpP8fqmXwcA==
          "]]}, 
        {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142],
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJwdV3k4lP/XHjNmzIyRpRItEhKRikKZ5zmfZCdJEknK0iKJokRkKdkqhKRC
lkTZKSkeshQhW3aylCRf2Xfj7feef851tvu67/PHua6zxfqysR2ZRCJNc5FI
//OD2WdtQ9//Bd6vFjcFJzA1e98qxvDgX/hZ2hpz4vMhNTfZqNYtjDFoN8kS
7nO2VCsM006rExuDIVY42WHMQW15fu6mx54x8Lr0dJW71k01sE47LKM3BrTT
TMcd14PVfKotJL5ZjQHz965UJf8YtXJFvmkf1zG4T+RZpF1PVaM9Kf6kEDwG
Zu3bJ7mMCtR0KU4xnfFjINi2FPB99Se14ItbLgW8GQOdhC9/OJ++qdU2NcLe
mjFgb6ltX+v8Q02AfVuov28MNmneNXq3elLNOGnvz/uzY9CbzJOtmcfFjmD9
eqvGNw5t+l8Mqk0F2C0u0UFDEuOwlrrFb3x5E1ukW9cyUnUchnIT3u46Lce2
0FzcqW44DtsTV9YutquyY9Nfk//ajANr/fOHTCctdu/aU9+e3BgH6YlVV2Wk
TdgSXvwvdR6MA3fsHynFlTNs28ES9+mkcUj01mrXXrjMTjG8ciihcBy2ZrYE
G6nfZA+/kRQ/XD8OqhXVU8daA9jym79NLP4cB28N09fdBZFsx7v+FS8XxyGu
bO2w7s8EdtZflehjghPg22JziXEiiz15/Lc9edsEOAynr7q/7QNbuSQGy2RP
QEGd7xuFTZ/ZbjIGAieNJ4DVWHxGO6SZXRi63E8/PwHxkt3Tzy/2sZfmMvLz
PSeA9PrPUKDNf2w4czrA+uEEFBW2RZ5Km2P7Vgla8KdOgJiGVfeax9xY+e6y
HR+KJ0BuY1Vz8iZBjBbjQrrQPAGhLYrY90MbMR2ydNPa4QmoslcfrtTdhgXb
tyZ/XJmArvTlLbqCSlhtY4Db5bWTYGx70vCcEGACavv1N8pNwpt7Oo31u3Ux
48Q/m6rQJLTshZJMExMsgvfZmKvpJPQazN1oP3oaa7lqWCbhMAlP9NO6skXt
MdGulcivPpOQK0RPgjIXzEIj+/zNR5OQ97iZz8LJG4t9ba0mmz4JqySHskqH
ArHeNWtWtXycBD+ZiKFI4whMwrOi17dtEiLc8uar3sdhtj+v5e4cnYSRwLFK
29SXWMohGf8uyhTEpspWzqzOxYbz280CRadASOj8tV9nijB5sWA55Z1TILvn
dRq/fyXm6M/m9GtMQfX1YzpbdzVgWaP/1T84MQVXLm/lvrapA5s0jUtkO02B
NdXy4I6SAUyZMLr2+84UFLu8Lxsv+g9z20bWjXoyBZ6LPnvd9Gewwge5Gw5m
T0FFjPlgSCIJX5q1Hf1bOQUaEg9J6wrpOH5auPRp1xRE/7znvkZfCPf9/Omh
7sQUhGu7fto9uR4v33Xj7AzPNNi6+wVsKJfEaY+370vcNA0an2NzsnrkcR2u
Ll4jpWnIC50OPMLZgwdfuNezpDMNa8IdwifO4nhtA56demoaRN9XjRb80cQF
9o/5mbpMQ80fK30798O4ccJzU0rQNJg2VRHZPqZ4BPOobFbcNFyRLGmwp53G
W65wL53MnwZS0sPnZe/O4us78+sYX6ahoHQ+W5blhFscPPf8Te80yAQ8MhMK
v4bHvhJxsZn5h9+B14U/u4X3rq7WEmDNgN1nk1fOfP64xE0P0aItMxDwTfRU
WeJ93O6H/MgFlRmwfb0cLKIUiacY9BQLH5qBjWtNfAdUnuHDeQ/CyqxnYHG3
zm4OXxIuv+mArZPbDKDnfzenXHyFO96ZUN50fwZM1GTfTL3KwbP+S2RUJ87A
Nr3s84Im7/DJY8e6rr2bAXvfK80xG0tx5WJapuTXGdjVy7g/xPMJd5Mu8Kn/
MQNzv25c8emtwwvvXzDxXJgBxQ3sjO2xzfjSzPpt2wVmYem3WVD+pU4ct6qZ
b9k6C2Ohs6dT5Ptx30+eNX5qs/BCqzx8N+cXXr5zZ9yuI7PQdReJ5N77i9Oi
e527z84CIa/1xebVFK5DCtcIujkLHF4fdemFBTz4/MF1KuGzkJd23rYzkAtq
66d+D6TMgsF9CXNKAQ0E9r34EFo0C6u0Jr5lHuED4+fHH2BNsyAS72gr2C4E
EQyG9fDQLFgPFY5ESYlAi3PhnkecWeh5fOnMk69iINpxkUdjzRyYBMncuB4l
CRbqmzrGZOegyub472P1MhCbVvf6GcyB9+ADlYQjO6FXyPuW3rE5kBxNzMKz
lUDCY7fxrP0c5GC1vc6vVcFuoF8qyXsOMuRqEy7V4pCiHzFrFDUH58szvVVk
DsJwrmb18qs5SLl+zlG8WBvkN84+TSudg2TP7q8tRw6B4+2Xl4+3zsGp8GsW
ZQxjyB4xV+f+bw4qUiKCPDaZwqQJ79ps8jzEmJw/tofbApSLPvyyFJkH0tSM
ppXzaXDb6ljIVJiH/iaj6IBxGyi8t/ne24PzIKJW98Bq/XlYnq63sjWfB5ft
Gt15tEsAp3wVBS/Pw8vvz3T17Z3Bt1KJWnx7HvBTWX4ljS5QrvCz1T5mHoTn
PwtofHUD2qOotHVZ87Acv7xfzcUTdFa0Pcsr5uFElMnX2Ys+EHRu/rBz5z8+
Js852oG3ofZrmoTY+Dy8ceuIXr05APhVT05X0xbgvERg0UG1EDCO5/t8feMC
TNPOCepdC4UIOhEjpbgAgaz10tiWh9Di5HSpQXsBjC6cF/aVjgLR9i3Iy3IB
ct6kppvefwwWB5qE5K4uwJsDd5hrzzz7d8du/2wNWACZZbwzsCkeegWVC27H
LsDYRAov2pMIEu6/gnbnLYDZTd2Qxy3JYNcfbdlTtQB3FbfRUPFLSNHT2xX8
fQHsLC5Neo2+guGcRbLq9ALoxmaGb7XPBPkN6d9+MBfBUtxdJfdxNjj6nXoZ
Jr4IKH7aviM5F7L/8HvgyovwXSXUrL49HyaPlh76o78IxhczU832FoDyhyvi
0WcWwbRUcCrubSG4SUlNalxfBL/owG2yVkVQGPKtYjxkEcpFVhq615TA8pR/
dGzCInTt41KTDSoFsFS9qF+wCKMfdZ/785WBT8VvbK52EV6vQe/CnpZD2Y4n
AskDi7BT7I7opT2VQIsyGDgyvwg9x7zHixs+gQ5nOZ+zagnq4jNLMp2qIOhs
ZsArqSW4f5/b9A/rC9TWnbYw278E7oL85knPa4BfRUiBarQEeVKlUTGydWAc
V0bKsVsCbl25A1JxXyGCx7XplMcSCEadkNjkVQ8tl6Vf8IYt/csLDhzc1ACi
ba1uBS+W4Lh5ml1xagNYoEB9uw9LwOgq4+wWb4TYl/vFhBqXYFTCJRPzbIRe
gZGx4l9LQPet77xb1AgSN56VXVxegkKJWaXa7kaw6zOMElm9DBGuCk/GOhoh
RZd0oUJmGSS6imt5cxphODtb7Qq+DEHWPzy8TzeC/HqbVZtNlmEVfcSf8aMB
HH3X9H25sAzO7Y+pNfsbIHu4Itft1jI8P5mScc6mHiaNr/tvjVyG3wvJd1mF
daD8Xsa8MW0Z/BOK5JoMa8BNskPuVskyyP5ydvl7pwoKg4M5ci3LUPmOuTHo
TCUsT7Ib2v4sw4XjM4dVfn4E/ORo4h0uDljXrAtZkSsGn/K4a4rrOPDOSb+z
ciofyuWP6H6X5wC3DoV57EIa0CLJG0PUOWB4YJUHZ+IB6CznjqqacaCPt+To
b+soIsjOrvTnJQ6M+mVXx41nELW1whHhfhy43qi0ufPuO0JA+fNZeMyB9tHx
xYXmUsI49sa+kQwOHNdUOdfVW0lE0ORYj8s5UOFCCjRu+0K0OHb1aHZwgNor
HDZ4rJ4Qbb2XPfGXA5v3KXU1JzcSJwFux1FXYGg8qnB/czMRmzJmarBhBVp+
sdyj21uIXv4E2fldK+B+X+BEdUYbIeF2dClZawVuRBWc236og7Dr5f5qfHIF
7mvs1svO6CRSdN48X3FeAQchwmBtXRcxnHXO5fXdFahT3jY7+KKbkBcV1TZ/
tgLjm27dS9vbQzj6VIvSclfgy1J613/Xe4js3x4jOZ9XYPTJtipzhx5i8sgO
wqpnBbZTNGQJoR5CubAnjDW1AunaqcFiDt0EW1Anp4ubhKiclcQ09y7CsiJ+
Qy4/Ce3lou+pONBJeN2Yvx24noTqj12xnaloJ+J3GI9abSWhLOmJ2B5WG1HS
l3ZceRcJucXyiEpuaiH6IymlLDUScvKxOnmM00RQ9E5uH9AkodbTgXtbChoI
KU7ew3dGJNS8T2TdhVd1hFYO3/IDCxK6ubXyqmBRFXH2/42EePv274kpLCcC
1hNf2c4k9Pzt8FCDE0Gk1q3bt/omCR0J15ZYjswnqn2dEn77k5Aqz+3tvutf
EiPKVbwlYSSknDV6d/fYXYL1Z4tr1FMScjlzJODo50hQiHPvcUghoSRPG9N8
SAPDo03aB3NIyIsT6rP6Ty448chnixaRECYVnch6+w7C3t9eP/aJhDKkLx/m
v1gMOZe7/SobSch+q8936/kSaJZU/u9pNwndut69VWvzR5huvW96dYiEyr9q
5rU8/wjCIb8I3UkSstU///mg10dQQUhWnENC+6VTThnmlYLZVHT4DJ0LhZrV
ZGtqlYD7y/HFmtVcSGOo2mXc+QPEnNSzSxTjQtqje9j7t72FDwKJdTdkudB/
tso2ZkQWdJcvqhjt4UJaVamunQkJwHEzeS4NXEj+lo7XcdZlEN+RzlzW5UKP
m3atF7eIJw70UV2aTLiQsMF53HYlm7COPNWdasWFOmTnp+rNPxB+um+1vO25
0HujJ5qjwWVE0jJ/lqkrF8pkXKa+Y1QRldnnRXd4cyFeLP7rYngdMWhX6ksJ
5kJGRqntqsxGgr5+/Uh7JBeievDQHxY1E7J1V45lxXMhVsyx1pMnWgk93y/F
/q+4UInzxoqG1nbCQVlKxvINF7IV/7r9zY4uImT4ZphSKRcSWzaccTbpITJi
vy0warjQGqkpUoREL1FnrGDb28KFBiatf/xY6iXGaHdr3/RxoSHKgaSHb/oI
wfffle+N/OvvXOXueaifULysGm8zy4XiWeOtc0Q/YSIZxthPJiOJg3xOrawB
wrX19xUBPjI6kz9mfFZpgIgKVu8aXEdG+Hjwfod/8Vt4olkk8S82vSAmzTdA
tE1OZjzcQUbqvaNK6qX9xEKKgYi9KhmFiqX4thv1E+tPJvugg2R0a3u66vmi
PoItwBkWNiSjz9bnRsvpfYRluanJf2Zk9IFezFy3t5fwcsssKrMhoyvWvyej
A3uIeHn6thhHMjLeEN24ybWLKO09Hep0g4xyNus7Oyt2EP0R7+a1bpNRbC5K
fPiplaDoCtlsekBG0o8MJN7t/0ZILdvXTD4mo4yDrh17wxsJreyyvdVJZHRz
X+7U15dfibN2G+PiM8lozK9NRIe/mggQdaVfLyQj/z7Hlxq25URqba3zoYp/
fLRP+b85V0RU+0h3StaTkZmtD+Pw6hxiZO8tjYUOMjpUvEvY484TgjXcml7/
k4yKda3cXtiFgkLsrnUpY2R0mczlWPgwHQyNA709F8koJC6v9KrYO3Ci9f8+
SqOgH/J1d7L9SiGscP/R7YIUtEsk6LaZWiXkOD78QNpIQS+Emhw3Z1VDs8TI
1lZpChpj+T4e7KqD6RaNB+m7KcjCI+Fh8akGEA5+NufHpqDiDbseG25rAhWY
OXNCm4J6uF+kT1Q2g9mk4ZddxhSkZ8umDLFbwD0lZQ+PJQWhZjn95oBWiLEg
xXafoyCPGww3Iq0NPvCb8+RdoaDx0sQaVmI7dJdlOwV5UlCeZrvl1SsdwLnO
7DgdQEH3oxLlZ0Q7QVze5qDKQwpq5G9a7IzphAO971/zxVLQsYxGcspMJ1hH
rBH+8ZKCBBwPP2Xt7AI/nUu3CnMpiEbuY/2n2QVJSxVDocUUVP30h7s+1gWV
WWLG56r+1e9l7tBa1wWDttffY83/9PFs28bf0gl00XqpNd8pyOFW7rafHp0g
Wytzf/j3v/kUT1k+3k7Q8/GZLZmiIEOb6ZM1dzrAYW/H6UcrFCSq1J5uPdoO
Ib8Vqy8xudGL28e/UbXbIeNZsJLGWm5U3Oe22BXWBnVHfjxdL86Nsqy+/lqq
b4UxKkYb386N6vmdCFtaKwgWRl7+tJcbvfTwNlhUagFFx9G2Z4gb3ZqTqg6x
+AYmEtrqLvrc6MGhkwpVXs3g2hL3Ss+UG01LGQ2rxzVBVNDcmi1nuJFU8jcR
x+JGeIsf8Zq9yI3qZA4KxXc3QNtE6q/aa9woKNPiJD+nHhZekI8k+XAjEO4Y
aRKvh/UWFoXuIdzo/gZF+6/36oDNnyd55BE3kmlt6zDsrwHLMta9bQncSOvM
2I4U9AW8rtvNLL/mRgW+uqaSaVUQL1ds1fz237zv1d6OzZ+h9LtwVdpHblT7
Sa8lL6ES+h9eVvSp5UbGZlx19koVQNH5/OR4Gzfi3j0iHNJYBlJL4lSFgX/4
UtGz3t4fQSvrhiP3KDfSIX6N38NK4axtY2vHHDcKmFGjtDJKIEBE7kA2hYos
+r9kVlQXQWqNX9rdVVS0pSm1WS3+PVR7d60+JUpFVjtV+d8/fAd/9uz13CNF
RXs4fOcrkt4C6/e9QeZOKqrrmG1515gPCs8GD/ftoyLjU5Uu7Rvz4PARePdW
g4roMWbmBr454ESNlrh/mIp+XM2WkCZnQ9i7sWDbE1Rk1JOt1aycCTmXdKf3
21FRjNPWy2Ixr6F5S8IpQScq0hPdepsmnwbT3xY+/XKnIh/Gs8STwykgHHR0
d/EdKpL2Lh0cbkwGFfx1TEQoFb2eUrB2H0gEswlu7otPqAj0i4JaRRPA/YXl
pQMvqOiqrzJPy9V4iDnxpmVdNhWdVfP/m9LzDD6s4kej76koryjG7caaJ9D9
8VxqeSUVuUW+9xe+Ew2cayVCTxqoaCRCtOWRfBSIy4nedO6iorA0lUU1ngg4
8N35p/YvKnL8qv7igmA4WD+sNhSboKKI+p/q2dqh4KctWTC1REXpFcGsp4fu
QdKix5YvPDRk57R2zuB4EFRkNgc9F6Khdc79Go9f3IVBmx1T1zfRUHnmgM7i
3jtAF/G3NJShof+iubzVSX4gW9NTKaVEQwpLn6vDSD6g562yaxGjoUxtHcdC
Wy+4uCf0cYMODV0qaGqok/CAkKEh8sujNKRuunLRU8kNMp4ecPA6RUO6l2P5
XR64wlejmG8mF2gI5VRL/tl5Fca4J3E5FxpK/eTZGrvKGQTf6b/kukVDLoVq
50P1HUHxUpJgW+A/frff6Mj32oPJlmX3jAgaYg14UA41nAPXb8d+3I6jIcPT
i06ctXYQFZhxyCKNhqL2XdrE/8Ia3mI8b3fn05Cth4cSxf00tI1bidNLaMj/
okAqv7AlLCQXBPZU05CTqm1bbbI5bDghOJn3jYbsrWuFZh+ZAnuV/cngXhr6
bF4RcKj/KFh+/Fhx5g8NHXrd5xDkcQS8rm3YqTpDQ9Iqc+si3hhC/HaX6FVc
PAjvKRObmNSD0p4arp+8PGhnlkndnefa0B++9eJ7YR70rVIti5yrARRtr+aw
LTzINrnQ4MQmdZBabMHOy/Mg1qt4I0gH0MzcmYKr8KBXIl1p7a/U4KxNgMBa
dR7UOryZHimtCgHr+m78MeBBWXsqRxX590Lql30Dpcd5UFKYZNiimSJU3wo3
iLb+h9/62WXn+E4YUfqT73iJBz11PdHT+UkOWEMHN2u68SD+h4abqFIyoPD0
acAGPx50MjzdN39aCg4bTY+P3+NBPbqu9HIFCXDiNrT4HM2D5P9We+vc2Qxh
BS/KYxN5UMJCjqerwQbIcVjZ4ZrBgxy+HTC+GLcOmsXNHum/40FpBxnSjQ5r
YLo5iyRR/m8/BQpvLZMFQTiQYT9Xx4N+iE7PSl9fBSqYdVNdOw9y2VWA7dBm
gtl4ITv5Bw8Kadj4fCKZBu7Jq194/P2H5712eKsPBZ6YO/AbL/Cg4jZP5/zP
JPjAV+EmQ6WjtuOzD0S6l/Du0k39HH46um2sIJdeM4dzXK/pf1tPR/67qxej
9aZx8e1f815tpaP9k22VVI0JHPVsE/PdRUfRh7O+UI/8xa3Dve+aqdGR1Yps
tmvTMO6n1T6moEVHmn9F061nBvGkhd0nqEfoKHhD77Rg0gBekRFU1mlBRwEH
T12Pq+rFB60H5HPO0tF2i5FizfQunL6OHRXgTEfSvdJ/im+04bJfIlZO3aQj
V6ePwovfm3G9W/+d33uXjoRX5gajqxtwByWtRt5wOnr6Z9XGXYZ1eMivWLX+
p3R04syC82R1FZ7xZDapIIWO3kneS2n/W4HXHTZa9SCHjvb03fNlJH/Exyip
1+2K6MjT467Cz1cELljA1af2mY7kPr6vLewrxBUdTugJNdGRjP7mB6tr3+Am
4rm5Q910JKTfkpd7NBd3aebdRAzR0dz7YaaAVRYeFWDrHzlJR5fvPDWNefsK
L2AX/b3I+dffKmASdyUFbxtba67OYKC+8WNr3jQm4vNJjh9F1jCQwerd+zyI
eHyD+Se5v2IMVEMVCxHTeYqz+cQjK2QZSHkhWmh39yPcstSN82QPAxl+pLJf
b47AvVwbzl0BBqp+ceuR33QoHie7vUFHj4HIzl8OLIaG4KXdvvs3H2OgEtNB
z8O8AXh/WGfitBUD7T6cY/V+322corWHr8aegVR9qh+WkXxwqYWQawmuDCQ2
q7qDP/wmrpXx87ubNwNVpj5eNlq+jp+1xnUPBzPQEtmVGrzFBQ8QfpSzNYqB
hD4P3BDud8JfVv/dsBTPQDdbMs4YHHLAq7107jS+YiDd/YxH6vnn8BHF56Mv
3zCQY4FqrFy7Dc76NX/8VikDKSnZP7v15DSu8MS49FgNA/V8PzgXUGmBGx1+
tV2+9Z++bejVe+XjuBOFO4Lcz0Dig68+/WdzFA97e3K5bYSBbB3FjKi7jPCc
i/lnM2cZ6H6G3yU2RR9v3ryq/g6ZiYq/bQ9N8NfCp5vO7jvJx0Q/UgQ+7qhU
x4UDiARFESZif429TtUGXIUtwmJIMpGtg5nATuZ+3HzMyfX7Dia60rIlYTBt
L+6eVNWTr8pEQUbyfOuoiniMmYROyEEmWiOUO/9ragf+geWRbW3IRN5vr+/Z
MiCD95Q0rd9nzkT4g6GYPWlSOMdF/ja/LRN9UFBQspXegovL3vnvpyMTVRNh
ubeubsRRd7fphxtMFL5YWHw5ah1uHaZcEn6bibTI9rWpwavx25oPZC88YKKb
ZZKhYrsE8KT5X+EQw0TW+9wcuWuZeEU6WlqbzERzkn8l38vT8MEzj+1GMpnI
UU/ZPsiUjNOFJ+o+FjKR+rRjz0cjDiZbraf6uIKJZqaaJnN55zE9r8Tnl+uZ
SIjo3B6ZMYVdVFxianUyUYLIPTZHcBy7N2jisnGQiUKTih20to9gGTHp3RNj
THRDjDLjtu8XVmdI065aZCIXWlC1qtQANka2yoqj8aKbt0vGXwd+x4TevhW9
JsiLVqmLIL65dkzxooCfwUZedCn/mmy81TfMZPOFEYltvMjnuaWTYWQD5tJU
emx+Ny/aLxua+GG4Bou6+7+HnxedLVK5Y1/+CStQuyrzQpsXdbjmmT3zL8Pa
/n4Ju2nMi9KOTv9XRC/B5hOlFo0teVGJ1W8TR+NCbIOZp63seV5kaqPSdTc6
H2OzWmpXrvCiXVKPBPryszHLEgWVFk9eVPyyO2sjIx3zcrkb/zqAF5np0oa9
q1OwOJleht9DXsR57Bpy4GYiVtqletU8lhd5TWGzN3/FYf2hYV07U3mR6NmI
uBcbYjCK5rAmLY8X5XjIaa61iMSk5tUzu4p50d/A52NrroVhWulPRHKreNHd
i9dOlQSFYGfPTPkENvMiiyqpZYMjd7GAtYf+WH3nRXrMNsGXTD/sZVWyifIw
L1oeDtuCC9/Cqj05RaxpXnTmGnVrhOUNbGT38W0DK//0PnxkejzLBWMNZoa+
Y7LQBc7GBxt7nDCFGPrCg7Us9MggLu+I10XMyPCMzVlxFvI0NNCqsTuLOZEL
a9hyLJSAWXXux6yxsDdCyquVWUglg18gLdsSy7G/GPcbsZDNhCS6KWuGNYuV
00v0WUi1rP2UUspRbLpx45UoUxaq3rkw7TN9GBO+69rpcIaFHiSbrX41r4up
qNVpHHRgocau6JXo9ZqY+V/pDNHrLORVsUWlVPIA5p54a92YDwuhVS1Wjs1q
WMzxNu/KEBbCj+8kd0YqYx94dw8/fcRCafyvv903VsS6iMCjVxNYqLmzKif7
7Q6Mc7X/g246C+Ws7/LQWSeDicuoSYsXsFDAkL9d9R1JDHU9fDDzkYWkjnUa
qj3fjFmHjszV1LJQceoRnTXPRLHbGprWiW0stDGyfefK+zVY0tyzLzcGWGj6
5o5Ks08CWMXrmT1Goyw0SjW6Yr6VFxs8fThWep6FWAeWGl9MUjH62pc8yxQ+
5IOdt6wv5sJkq0jOTav40NZ8n6XNGUtsPU/zjlRRPnR+c6TUDrlZ9v8BpwK0
lA==
          "]]}, 
        {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
FCFutP9VhKEmuzzl/wBsBitb
          "]]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
          
          "]]}, {}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0.9503040468750001, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImagePadding->All,
      ImageSize->Large,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0.991646, 3.637531}, {-0.9713817797698686, 
       0.9960339902606288}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {921.5999999999999, -186.8934781979682},
      ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}]}, {}},
  ContentSelectable->True,
  ImageSize->{1240.8, 385.7869563959364},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.671312133714178*^9, 3.671312153721208*^9}, 
   3.671312247134756*^9, 3.671312375653305*^9, 3.6713124296610823`*^9, 
   3.671313855156625*^9, 3.671313994184208*^9, 3.671381306341117*^9, 
   3.671396148403407*^9, 3.671403717111088*^9, 3.6714599526562557`*^9, 
   3.6715807281298018`*^9, 3.682444236409692*^9, 3.682709010671691*^9, 
   3.682784947239629*^9, 3.683393339668888*^9, 3.68356830338078*^9, 
   3.6840913313255587`*^9, 3.68409193486342*^9, 3.684093223776473*^9, 
   3.6841689438453197`*^9, 3.684169477671698*^9, 3.684254802923689*^9, 
   3.6842876531045847`*^9, 3.684858853081208*^9, 3.685226078718897*^9, 
   3.685313827310657*^9, 3.6853989777674227`*^9, 3.685462366103487*^9, 
   3.685656105081588*^9, 3.6870428822921543`*^9, 3.687107543681478*^9, 
   3.6877077685702047`*^9, 3.688258797450012*^9, 
   3.7069659739300833`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztvXmYZdtVH3apO1RX9Ty+fmO/edQbpKf3NI8ItdAAGhBICLUmVJrrCSEa
kNyWBY3BFKC0/qCduIlJfXkpO7gdqEAZ0s+8Dm7sr50UpAxfYZdNOVScCoWo
2Ncpwk0oZ2dPa/3WHs6559y61a9bqvq+vn3uuefsvaa99lprr732Oz7yxU9+
/HMf+eKnPvaRO09+4SOf/+SnPvbDd775mS/oW81vazQ6+xuNb1u5s2GuVaNB
H+V/R81Hv6d2Htp56Fvkoe+y/zX1x6ba6HbVRm+z8aXoXncjvVf03OfpXm9D
dfW93qZq7PL3ehv6me6G/fZMxed+IXPvSyX31KZvT94TfXw+8+5o5t3S50R7
b3Vk/A7737haunhGTZy+qDaIzL0ldWZiQp2eWXTfu4vq3OTEiJqYmNAtTV2c
17Szf43Jik2sLcyp0xPcxJkLl+nRxmc8gJfPTZpf/RPmc1RNL3SLoGnkwKnb
lgerUQzXXoOLmr94jtrT/ybV9JXlPKX025cvnOH2Js5Mq+XeFtrrLqnpM4Bv
4vR5tbhusW38BDF7eVb/ekYtbij9nLnXVoszp9XE5IzHpRimyaptlMBBNN9Y
vJjQnEQihEfTff4i2po4reYWuwO2taGuXpwSbU2qi/OrtpXP2s89+pFlNX12
AvQ+fU7Nr7q3M3DlwKrS1MbSjO1+YYPBykH1Fvvph94+PW4MAGLcbK6ryzPT
6tLCmhWUOdPb5AW13O2plavTtteLi91nqry+uazOGiDPzam1jZ5aW5xTk0a2
Li45fA6q9asXHB5Ts2pxaVHNz8+r+avzaqW7WRWSRu22isHitjYWZ2xbFy4v
qV6vq4fLlP1+aTWGS7Psynn72+zimtpYW1BTpu0L876tQzXa2lRXzhm+nlVX
V7SeXLcir79fUPpXGm0bSxetaGCkjGmpmVPTs/NGBReC80zh++Pi/VIQPuMx
UhsLVkmYxy4vLqqFhXlL7YUlTxEBjnlWKzh1ZmZez37r6tJ5oxinjAIYpLnu
wnSWmHMrPeLd1fMegVWJwLRarw5Zo0pbm5q4M9NzarVXClY44JpyxDRa9t4o
a92ZRRpHWtx1V5PTi8y39L2m6VedOz2l5teJl02vUdxzjsIt296VC6ctSDPz
a50K3X627NWqPY+qlcsX1OTZWegHtarO6abOzi1bE8gZQq5bI6XU1vrV85bw
S726bem55vxZdf7SCre1aeeWSTXfxZwlR0GrIhyTpe+W90vkXF9w88ppN88T
J1Yvn7Oyt0KYadk0Omma9Vvhq4YqZ6bmBFXW1Hn92JSG5DMCukvnTqtzAXQO
Cz1deOqVg1G3rTK4+g4J3eTq5UhNNaWNx8yQ744F92ZUV6lAjudnzloKTs0u
tCt2U/D6eKYnts2781avnL+6FojlxdNujqFueksgWu7dXQzinNMly70+4lve
R058xzJ9fI7kzc+LE6enlZ6q2p6vdpRLQ1sjP+2USNGrYwxhV81MGv2ywJ6C
m65C0SnrIvfeaKb9CiLWW5njJkYyz+VEzL2rWdNbVucnJ9W52QUL5sbqvJtp
py4ZX4BeXbnsJuOzs4u1u03f7duto39bd3FFnT93zorSxOkLaomJ68TEEGlm
aYO7lyLRvw0jmJvq6vQZrY1ntDm2qTZ7a2rOTp9n1fJm1lRpVey+WMn27XbS
S9/m2lVnT2jp0xYETbJLs2esIbPOUuXGy1mtkPq82ls28nxGXVpat5pg+Yqf
7ufXPb06FriF2Qvq3DmnJc7OWK+wWaH3ik2UQeHF/ds987rrrp9l02uiWS85
yvYilRdozPI27Eg77dwjdjImzynnrkCfLc+d87ZujwWwX/9l7/brlxSQtc3O
OxtMa4NYRZ6ZXS6R/eR1miyWZs+yU0i9a5uIGNr4iqfcprYArdNhDYC8li4C
4bMlbVSFg8bQ5uoVq4bPzq2wqZnqVjcezRT/TOF7NFGGfZ6+cMVZ0oLyawuX
1Pmzzl68uLRRpdvJslf793zSif4beRC5yWLi7LSanpqgXmFqL1qVNusjEGbM
XTaPnbviad+nCTdMrZd0/opaX19TK6trUL7aiJq/qM5NM3y6xwVnPWtUm5Wh
qNJOX1A2VhfV5SuL3ER3fjqabL1A+kmTBNK5My4a85kKbbW80DpXd0otrq2r
1ZVVpT11b7Lo3xYu2OcvnD/DbbcqwvDZkjbaJX1/jtrfXFUXz11QC8JbsWQ7
e8mGLdlmvWTG/HnFQ4kdJGH/Vmqrze9Oz6+q9bVVtbpO9pGbyFYXrqgrizQd
bKpLhv1Tl6XC7w9Oxaby0PggLM0ZvbVFdeG0jyudiRxUPW9NTzo7wwzh3spl
qyEuXF2HwZB5v+3ldHnurJ39Vrobdl5ZX1vTDNokUd9YdDPZpWWnx9cXZkkL
YMiUgFClnVY1UMiTn1tyTSxaXWvtiwYsibNW/BYsydfcjOQsMB4u/dvRo3f9
qgd33a4EmBG83t34KvFss6uuzJCql9JeDsJn+75f2DVRgWJkZy4uuND2xrJ1
3iZnFiET61ec+XFl1WM4lSiNSu2Q36Ktne6GAWVdrelB3BPURGxMM840tLnm
hEG76rXgqdJOCTzezHqT/a9lH52bciEhzWYibm/5knN/6J92g7uK7dPsW2QF
RLbNNIX1VePT/jkzEGaniufDZjkUn63VTB2wumrOrXrwcxeucCQBU5bWn9On
BViaRfPrm5+t1UzTStZUDJYjqH3iq/65Vesn2qg4hD8PwjOFr/Tv7jO+6eVL
50Wz5t85I4A0SS1ePBv8fP4yrP/SV5tq/sJkwod5mFOeDx21uT7vwtv876ya
X+tVgaD01f4QvNkNDnK5VW9dLS+vE82d6G/oe0tLannF2imfzzwKJvWcfjZL
pF03DDd67Fmvry6rxcVFtbza9f5/0vozmUc71Vtf0i2tdXtoXQ+N1eUlfX/F
WObPFD6qp8Luum2RWu7q336SxVdP2MvLpgmQJWz684WP5ptm77W7ZkFZWl41
UySFRTbWVuzt1fWeN/GTR4ksmxtdbr1re+rCnmzZpd4V+9aK2tgs7SB6tE8H
Xq+q0r8XZqn/le6bEXzz8Rvm453hvV83H3eKx61ymKCG7JJrfO/YNt6bnZ3d
6eMG6eNo5t53Ze7tydy7acgwEywGXn9/p48boI8jmXt32M8ddbTTR60+dtTR
Th9b7eM6V0c7926ce9eTOtq5d2PeG4I6+pK4R7PnsO89lum3qqhTe1IzD/te
Dr4SMv6s+RwxLXy54tXjFQnwt4bScgnoiv9+rSJIeONXr9uubmCG3CCgv8T/
JDd7tDOPK/4bKtMf5O7dYqpZWncLlJ0oN1yVbagYyfRQDvGb/T256aMc74pY
zARYjAcZtyUZ4c1M68MRoVd7QMRuBfeX34WR2/CQA26oUniH/2ljfU2trq6a
f/qb+Rw1a+LRH4hMK4tlScHbTdl9MhXG/VVLtm9lmhwqVW9n5jmKGca27Oeo
urDQ7UPV/nmm9l5b9qzUr/C9J7n3nloLeGo+13nNLpdQVDW7OcdbwFIyYkng
Nns9tbGxYf4ZEPTnqNnr1Zc0/fIhcwppOEL3YiKNT3Oe4M0+Takt+5C1POt2
28f7/fa/tuXv+rqRhE1W/5C+8pS7a0BiDVUvEA7zyeqoL4nLUkYtie04+ena
MD/C794ZkXPDZVtNXZy1mwxCFVmcvbV9KvKVHrKtZBdeQ2ncVKvzs5yAMCPJ
V5LJU66FctYHkWUr+WUD6z62VtZd3r6eCniJuSD/YvsFZNC8oW0Xjof8Txur
y2q1u+npZD6TtfvchD5MS6NWYsi2WxeFruE95qOlfnfyFvv1Z0vwqZBXUGiU
3xF28wuZ5/pBepf52MVN/EzmuULPxhpXHX735+t1nxOLm9yVbrHFVz+QeW44
HuMR7mOErz5Su7eaKB7jrjp89YFtQ/FwhqAfHiaK9vPODE72h5+uCLr9vC0D
q/3h5wYA6QQ3sSts7G/WAcn+DSFgczQDzfdnnhsO0w9yH6N89aHavV03gZ1t
R8d+3s5t7+Er+8PZiqAr/huCwGDcApr3bRuFD3AfnxomXa+tmACJcb764I2L
DrThUJGwn2h7H1/ZH34y88bWZN0GW3L4HcrA8H2lmL6I23tnRRper9HsZhFR
9jMpDjpkT331N95b2sej3F5JIiPYVStyfZyhgRJqMlz2ka9m3u0nfbdyYxiy
9oefyLxRCNz9/K433jRIuLKP/I16wOUYjLkHsH5v5rnhjPm7Mph8T+3erhsV
Nny/6mXmA9J3uiJw9hOGt/36twfo/inz0dlq916mdCstvrKPfKUeSDlmQoHA
uUEv35V5YzisvoN7ixB7T+0uh4DxOHf/lmuAcX3vrZ+cvZThb/OV/eGLFQFW
/DcEW/RhhuG7t42a2z5Tv4SROHnjIgFLCdoEsr59iGH6P8C97eKrdw0TbfsJ
wyNS2l+piIT9hNMNqGWQggbVma0z5iFu8Z3bxgQEWd4/TIK/UOgM3zh4DUNt
v36hInCK/wZJAtr2TgsdqL3uSssDhsu7S4l6HTpQCRKakOVIbEXmdnNv0AjQ
n/VlvZ9wvJjbtl//ehHouAUbRuosuhcpri/xu/18v9eFL34+81yhlD7M3duv
uXBYTaY/xdC8qTbJr5u5+EZymzCLwve2P/y1imAq/huCPQlrAtDcIPNMDh0f
iBjI16mKxBgT6vM76BSiYz9fz/Dbr89kniuU8EcYrkjTfnnrdH2aW/z2baPr
bdwHVtCASX3v7bpRiUBs+MFwTLlw6e0POaYP34B84brPsfA+dzVQ3PG60cg3
HBKK/2rF5xGctl9/aYBO38Cksl8nM89tU/c5xr2MoXlj5tfhMO5ehrp8YaUf
Cwv9Mkxu8NjLA6/1/TIgAfX+ji2hk2MwFqGBif3hS5k3IkcGNr79+qP8a4mr
cm3nlFsYwg8Nk3LftEjcw11t3wLY8LXqowy1/VpridH+DWFSfQXD8PptoxxS
Y74wTBp+k6FjP5F5cA9f2R9+rCLA9vOx8N2aa83XDSDXVl35cN/Juc99tnYf
g0hpU339Fxuv2150WgadTw8THft5m4Nft323ueoYTOwPn8680W8NRLfSsJkb
5sp+g0fV5JZ/ZAAwb3XA6SZPMMF9wHKLAI/w1a1bh7UktyPoajd3dYiRaPHV
azKtDEeSDjAEowzBwQxB669nD7acrgFp8xVC5AcZkCbf22bKeDCQx6AB2lMM
0LBpZD+R+zOaIQ+iq+0seeiebeoTFUlhP7HeC9xxdSJs+YfrIZZjfof7u5+v
9nEv/uq5D/yNR2pTuGaur8YOzgco2OGr+mvdgy21a0Du4U7t7oSOIcBD20YA
EB5ob3vgDshCvm/h7sfDq6YhgFOK5or+bR9JxhimhxiS79gSSVr8y53c9v3c
9hhj6cezwdD8vZPfzfnp9vNQBtZd7jVq5eNb59dLuO1jDGGHrx4YjBPNooAG
MLHY2QHw8tI+KiWlliwHB6NuD18dZBTvHwzFCsJ2mCE4EqJt+x3hq3ICDDLJ
3MQ9j/PVfQwD2DvGV/a1d1dE1n7exi3fyS1DyFthyx8bAAlk42EkIESFlb+b
wq4+WBGJvzKfTfXTP/bfv5wbxaQ7LEwgmbaAbsv0N873YJAg+ALEMOJldoED
6fnGKH+9j9sbjgTbyO0uA2mb72ERCAbuvQza22pDUIlk1tofN4CM8r0XM4tA
mcRWcvr2eSHpw6aR5aaVnhHmazm17mAgDzBU4OHTw6TgXzBILQYTztBLGZAR
96smlKebvrItvL8iPf6Sm/eU1lePleJp3/voAOjYtnfx1RFGx+6/bqsP/pf/
bDcj0YmvqOfvroPYCEueRfFm7hIZ9bCqMbXYFnJrxZVk/hPcsx3v4KL99RaG
wV51DNq7GFk5eQe438MNDEf6Px0Caa+a/Ct4A0LdxuTxwQNv6jWg1V5aG8hK
BJ1gBu5hWHMEPcwQ+l81aZt8FRF5lL8+vG2k3c/3XsE0aoaaf6gk+4/c8z6+
inRFy5AC5IEPNc70iAZcDtncvQ3uci9fPc5dWjulw+rpk/UQgyx8PCZuILd+
arFaG9gFeELFwEC4uzYTyiXgUxlS+EGjfzX/GnCtbmfQWo5GBG7TySpdvao2
kDUJeoCvRvhXTIOINNzn2zMxZg2r+UczOWSLhhnEatgu4SczkmB/yJF2JIYP
MqFBA8zbROSPMYSHKhL5fgazkLRPXSuCPswQtOOrYLaCnf3koGSkUiyyCh0O
BnUV+bob+Yp8/56hfpLJiIggooQW/kMMtX35PRWpZT9fyVSA0VVICvvGh4ox
toy29UpttTn7iP2HcnNJ4b+1hTlTqIbPbznjDhO2LZVXgfoo0+hoyONbmWSY
8fcy8bzyotE+FtJyhBWVpHRAhbsYgqoC8aqI66YOIx2m269GIWQattghvueZ
pofbvcxIzAr18/ECRh4sKm5nnw1qH5acYF9eXqiQiSeYLwcYs72MWRSlC0IZ
9fnjFN4eKkLJcstVKONqil178DpXUzx9Xi2ubzKTq7DQsrqj/uTCvfBVNFKz
rvYu/cl8eS3Oh5gSo3zlxdkOfk0XzFEDx3GK6zW2fL1GrttXVrav34HsucG9
zrSwCI4Z+nwno4oY1T7G0r6XixRZK9VKRWFZzqiWIx3EdlZdXemq3rrlsTIH
s63li2T1GMYWw30sZhYWT0jFFHLM3v3BYsYUl3xs+ZKPXPkvV/iPNI48IhxV
HhtNKXwNKyROIZGdR7+73zDl42rn+Z3nb8jnAxPWXu02wzppiCanyAG6rnAp
er6Te949A6WUYlS5n+d3dMbO8zvP7zzf53mnaLyJ7Qyd4mrSY6gmXaEKuPU7
z59V5y+tsHnpitJOqvlu3jj/Dw4yMsmbRu/jyueDpG4jlv7gGO7nK/voqUxv
fStUt3yFai4wTHikRXO1PddbVucnJ9W52QXrM2+szjsXzdVPda+6lADPlxtB
QHaeD5/vXBdQfFM83zJjuvzRArNPj7mpqamidn2TPgWVn2oKhTebWFbbgCyc
5PD5EtvPuKBbtv1C3Y6GbGLJsDg8VoREBc7cYHJ6Az+/o62un+fNuCgZG9cQ
nrwCkqZfcuJFm5cJ+h1VQosqm6tz1taZW+41cASDiKr6vm8gDn7rPN8KntdS
27xhQL8+n9dGi/0XPO/JrI0c+6+oH/o9fs/85tt9QfA3+Uw+p6nE2gGs3luz
hogPcPsmEjuhxERyL4uft2IibefzetRcV/B8Kz6/o8eux+cFW7xBdJ3AlYmG
+Z0F99n/qp+gpFTXHZ4jkikmJs+pRXcWHL+bX4f/kLtC7qxW/+N81YnRwqom
Mq+ximCyqfS/ND8tWKc/wY1WXaAuPrurzWd3VTu8bZdt4+r0GTV5dkYtdzfV
Zm9NzZ2ftOu/y5vBei9x7Jq78zvP7+jgF/j5ErPIhNIKzaL4BwqrlRmSPmXr
uhtkPlNDPm/TMHPP07MvPOd2DMcb6/kdpXU9Pn+9Go6JqvV2UuOE/Qytx74H
TRot79Pfzl9R6+tramW18NTDb7iuscVM63Zr6bXCVDiYitirhD33yFz1Obbk
p4/wI0i+tR2/KwPLK/y9fufJkjnnTpsMjeSZ+TVuL2ckIxfbttIMTWNsaUVd
41sZ8AiFku2aLuW2/DzMlmfW8txZm5e40t1Q3fV1tb62prq9zdzydpdB3ssg
g0W3ZxhzMGTHgapMKD+F1oGuzfRFk/49pRbX1tXqyqpJKHViXk70kRAD7E/d
y9Da977Sj8CdoiM1CQjnWkkJaauJaTpF3f2Zuz/nOtYD8BSDivGwn6+woecx
BhXpq/X3aDCxS86sJTlR61ftu5eW123euRnY692N8tNDP8mg7+OryB7Dhg6f
a63l5InamHi+2E396dGgHWZXz8m42S1hcdC49PocWguWQHoOVmTJrYzSHbVR
eqUHuuCkXT79d3PZ5WlIV31iWvlT27NaCAzCBhwgZ/VvOxup1M89wcg1wu2O
ue0NAzMyt21ojWFthYxois3s+tdXuytUlQm2tWAftW31rZmO3BaL5NReJ0Vt
1euuW8khCep2e43cMPg/GSKr9zo8ITXsnk2ObGBTqY9xBNNVIZXt7Y/WIyGk
+oMZxh8UYFqzABEcKnrSUhM/9a9w8AUIjMJC2Fgx7L25n2BIdzMTwU5pwJSR
FhUrXlcbvkqk/SiDud+RjPjeFEsH9FpE346hL4pbAer9TNURxhiBsJdcA0pj
VEcoeHtNA+5ts6Ae0jYR2Z93HMgvduW74WhtSN7XM8tluzSkLb7KEVvuKkQ5
q4D2rxgyxT/C+IwwPodBcaw7+0iHTWBpGwS8PGMMIp6qIR5qma8/zRAdiYqw
WOQyFw3FPUzxNl8dZdCjs4y/UJF+f56hGiQW0ecRfq4RFvjrMCwjfHWYocJ2
GmyXh3qzDX24HgWTIDmMiaCYRES8wwwc9MU9DFJucrs9w+2tyOcXQiC9CqBZ
qclQgblNvkJMH8QDpI/XhrQSfb+fWQ5ZvZmvIvghnCjyBccL2+WvBaU/zIBD
po9maD4e01ersMhYOLI9RF7NQJgIMSz9lMijfHU3E3QkboDqjVSteoRQQk4X
jPG9A9z5HUV0s19+qB5R/ixDCpTlwAD2IgRhGhzjzRC7RlPOdw1Mdrczke17
AxcFfT+jcycjG22eBfUDXXArI6gbJ//aNP52bnw4g+djDNgxvicVqp89G5j/
b2LQIpWPgn71y3bWJCcEFiYMokKRcOZ0LejrDwgLdFX9TczlRP5QBnCQu8m/
FhIZYwABOpShGbhIQonTGJD2PobrBHeKUqSY6kHBqGzByYok+zMmBawknK52
kMEAS+/gziNH70P10P53GRad4KubuOdbGBqUbAApbh8M7T/njvaWoi1VLxlk
h/i5qPPv70OA6KSJ92UI4JXw2nuf3sXP+aI41kWDu6uBe4ABKT9+reqxFNZh
GVW9v3t4XwaMaIwfYhbgeE7IIMoCPlYK2sCaaZI7aBkwUaKukFr7GWArxn62
DSY56NP6xkiu9OYHzNW4Iah3QANII4JScW+j/6lRaTsFBkh52dxKZTtXzOcu
AxzUjn5Eg2h/1/83rATc159usD6hLKOaBW8rIllOK7QMVCOYBWWC5giTsyPk
0zpQfelnb/5optdKIvde5uY+R1/dvVdE+go5Q56vHuYGNBmMnN0xEfW9E6Us
rT8Fvs8BqcGVXi9RcBczr8UotItQgD7E4hUcY0wD9WM8lQj/PYxJo8Xs9bCN
8G97Y1boK5SaywmSRv4IY4aKOZBcPHfLdjDHMmKcEYBrvZufA3w5yudMk23i
wbvNlR2X8FWbDPoeBj1He4o8G01Hkyhcb1T6eum2kfv7mNww/SIZb/EjmPyA
Anxp1FJEYe1XD5Pmf8xUjRyCXcyCXQyhBQmljkFV++bfqUiolf7k6fAj0Bfg
NUoZI0Z1nMkDh+UOfs42/r56lIE0vpNplITNCOBRBhjUGuMrrInB9vITnR5X
cI+hFerbMeUi+V6G70CGtHv4OQw3byqmFoEfWuZoJGOtWkOnLRS6/vFFtaGv
zgcLOgKZu/jeoVJy5wNBgabb7Tu3MVdfPwgjEZYI9KBfAUKXmGx1ywe3jYdY
2rtN8CZl38NF/LLGzFB191IGOEta2ATe3CMWoJ4uBAdsuTnDDKxMtJkZ44zO
CJPCV9MlvfTqipT+t4xCm1GwtBzjHyAOHhanl55vvIG/wkYb4QKubYYl5xLV
pKqM4xWQ1hPeCTAtIZjH0IofDwYu/a+Bc/cOuHeJoE2hesl8G2V0cjCXkxbB
0FH1jY8+BRORdIvEIyIypAMhNTgDXu9rdGHvYs5o8xWWFS1suTLRlbTROzI4
UekJI7EGEePWdIQvRQMzoj7qmj3OYCYTH013LQ6QNIUlOTQt8x5Gy6rW8ZBL
HnDCDYZgoHOl74ioa1WmJaZ1sHZSfw29Ejff7ggaGCVWZqyYtpkA+zMc9mwJ
2IwymTgH6gFGbFd8hYWsbWWpGP/OQ9G40b+Ow8KymzwFGevzbo3GmyoxEIvv
50cPMK6RoOwLpaDprXIahAbeO4fJ2H9ZjLJwynZnVJDlCpDHUjd0/wnGEst3
xzO8tb+2M6j6gAKdLknppJWiFX4FTwPuD5zRV9gKhJLGAluvZu7rzyafl+OZ
m63oXUL0RaakX4ynkdOOlEiLO/WafixEoOnGkt2wAI/DxoQ0HqhznFs9hR6B
nQaN4kcuQQy1Yq9G+ZSw0drM+TeMXkvUUAdzaFzJ6vIEVSu+Z8eJ5jPMCijU
SJZQiteeKOjdNoL+9fU4CH34VkYHxpAXFq8vGhYnH1Aw392v+g3L42T5EuvG
MMzBZurjYBGvEf/LcTiS4/H+DIcewmIDumyJ4lP66kcY8K3o4XcxTTtORKxM
6BG6x79mKAv6PSfrRENYGmEO4iiTDocQIrKMw9egoApFCakUlgZt09ThDOZD
mG6/k0nRtuxzGoF21Ss/YPxBmYVTkkVmls/WgZtHhtV38HO5taUIXy91FEKy
IvDDQ2E8HNcGjqI0Ozq9FDsKRLFGKRSwNBAlgLunCYLlhhzvkwUWjMVg1RQO
lh8dONByOALwh/6eoQEJ+mg4FvYz9zGTjIhdrjALXaVqP5UTy/3BzTgcF+oV
8aLgxDogjWrltsW7K/LZOmmNlkTK3Gkzbw8wSoAcYWxZoh86jXjlTS4vAMyp
xJYODszCgqWF8LX1mIRR+hYnBWmBPp9d534wAkrvHvDtSaEFCzvMnEZcEBnU
IF49Iu71ZeeuDBUiRTkcW9p6fS13CAdxq+FSOKj4hR8xsD1hl0FXYfMHxl1w
9kxSmB2qn7Qbdse0GWmgfyCDb/WBG60ev9ld2ZFqPV7iv58f7HCFt5dyGKoq
isSBzTcxnjhecYwhwDD9QgadqovO7wjxkCPOmDBuGhLMPMi8xFlthbLbaLI2
Mj/A58nx9z7GEclfw2dj4dC2M2MzJAQlCZvBK2gQsRg6DKv1SK99VYxCoNIw
EUVaTJp91ThedVX87cxxz11S0cgPtpjZyBpmTdhJZOTSCDTxNM9/IdVvY1Sg
isq3uFRaNv9fGHoffwTUoUfLxXgChoFXCKUl6Yi04oOUPPAFFnay/h6wGMH3
qIHdfAVrGies2P7vLOJkdO+PwMlwNgIbI4wA/Z6Yq3D3MS8FESe4JH79Axkn
GnC5Jqabz50XF1kTdExJ7ZH6plAEkNjuR2pgNIOrNBsdyGAOGY90GSasAWXj
EN+7i5+DmoCZ/UN8byuT8dtC0rRZDpJ1H6IG8q/8/l/SBt6IaUSKDRl73hAT
RKkgF1gMkhk/oGIgJjgEbqia/o1MpFQBgmK0jCANmf0Z0YHGw9GmiUhoBHPT
ulROOI49oAZijcMx1yIJaQkJSRdxkZkE1Y/kCMxxQCEXgEKavMcNR/MixXo4
TP49sDYMvjhu5vUDNqYdYa5CFSLdH7yMLLYHM6yVOYzUgGyKtOATFTn4Rwya
HNTYBYwTTXXLONgRxjVOhO/HI3qO/G0T/KTFUoRULFg5HpSwZ76IPZ0S9mC5
oM0IIlcHA/G479AoJeLM98RcgO+PM3MIGVqr6seKPyzCAtMutp8244eJknJD
mRM4XioP+OazcrQaIviGxw/oxDdIMI3KI5ygIBBHsffawt7h/XTe9/XL01AV
sPL9eh6OENP3DhFo2o0jxJAMN84oPsP3tqIBv5PxkPvKAqbBoIMixjI2UpUs
9IlHpu8d5T5uZ/YNNUsJnHt9iE6H0cHauF/+RwSAiJwsqXopFvHhUeaXDJfR
su0+Js/t/Bz8dCRXNsIUbtSuAJuHM729halRODZhx8Kfgr0CNo/yG7B+wOFk
oyh4jfwhTBUU+tnLP9w2THH4n4UQBFNEYv8jQ8g6R2ABhD0WBxnOisQBkaxG
mPkLjwZpQrnzY2GM5ybM5Cw60nN0Nlk/wfgDKQ5SrZWLA0gyXkQIBF9xCjSY
i6NSS2SCRgNew3CyD7y8nhD8cyCLsI1H2N5o8hKCjziTHoC+u4d5hNwSIFPO
wWR50fJS/3CIvw7Ixt93r3Hiqiiri5QJ6G0yFeSA1pDCUo/yEuHTJLVqkIUM
w8npUVoSNvBFs3BNvkGXvxYcDMU1svkiM5329kmWJkF8izamcdjvWAHCynKg
1h7kK/g/CE9FS2ZIexmOQreGyS5nM0f+CrFqhA/RkVHu6HzliP/Uin/N6jOs
H4EkSJqFdR+sJI3LfqVM3FybEJVE5DUQkWSQ55RaJCoeXJzpCbX/nN+f7/16
EQfIiQzF+eV+0psZttu48RPc+F7RIaJfQxMUaweNlQoKUI5kBNM/chMiyYAF
i/jEixhfLMSCmA8OUwCumM9RrwHz9jnM10AmaXXVtIKwXuTBhuafQkrDYcFm
Muv9MEA8FzXI4CVj6SOdvW+ryFw7oTXdGhYFDiDjWOMeYz6AkcHELTHCPksw
8jjf8w9TVQW4xbD37AO5jY6Vxq9dsRxnMa0+ZAu5ifhxYKpGRsYYN3+U2YIl
Vz9yUZkqimtqibmJW4Zt9zm+t5WR+zrREfp1Gs6IOmXXQbgC7if2q34Tgo50
+EgO4HlghrinSA6QE4/AFTyFnAEH33eo6t8aoBgSrXBIQIb2M8BQeknuTEqU
YHek8VlS8YGFKOOYOcmxHQWW/bB1/mtYcpq8WuiFxuhHD3yHYUe4HQtYiPBj
0wdMpheHOIL70fCSngAkMbAZt0kiXsoS0XS0LzANYDwTs3MTxgjLTVJOqkxa
ohxRX/4rHUdYZ7kv7nIbxOPVTBo5YNMSEyKw25JOnrsd7TAI3CBEWwC7tLf1
uzfzV4gCnEfMkdCqEJ76+/BKROa3zWcro2Z9KAB5qKRw7VOpqZ1Ii24Dcynm
Iv8rQkJaHrB5EktkkYxg50WLCREZELdUFIV/xg3kvZTU0RqRb0h/HxuJIAeB
z0Gb6hRm5sJJBwsgtClIsgRKOxAa29Dn6/EcauIl3HMzmWTNX+pGwEZ3NonM
5MC+PBlDhV1JXiissEgikNSQON9UHUyusOo+cDbqXoYP20TQHqbgz/C9rSiR
V0mJyMtQsoKOSRkx0iAoUSgvsnQWzS2IuWKKjUaqbvwHMtgOYXp5scAo1KEt
1qGJ3Eh1GygMbFNLRCYqXoMYE8gaqNmc3PimyFFB3AmW7glGAGI0UgRL/Vzf
LctSNDU1/adRIJTlFngKclTC+8Gi4BEmHSIzjTBrrsP0k56OA1L6G48yEeEM
YbQhSDBwdt0lc5XbCYMIZOQ0JVYYorBI1YbPrt/APVT5hOHyMCNW6CpHjuAj
DH0uz+53ixguswuiuSdFCyMpl2kE6UWmMLJ2sEJnEXwqg3S6+0RmaQSmiX3w
6T68jH56rogGFXQJz5nSJsFKBpJrkpV7/ab/VT8NBbSL30jSZ2HYIfEQXgEN
Ko8DscbC9mgGa2TeFcpAzgITMhBqeEIFq2vgO4DFRIKGUBziFn4u2WCM2Ylk
phHuPIXkwYaxAL6RES3J2sN88ji/LelcoPik3oL/QoGRQ0Xv5pZvRuL2NCx7
MwLyaEYssI4JYUCWeSPMqsbGg09zR1uZM15eRDCZPkvbo6IJ4QjDApc8ERGX
wCtRwL44yAkKso2KLgMH90QG3yFYIJCYCuMH4dBAbCRRwGtkISNIIndbEASN
cA3XLbeEpYM1re5nWkFKnuI2tlksEOZKBD0dOMcYFpQciEQABpMPcgcDYoxb
Hmp5sd8KcYpEPcIOUxzIvZthlaWVMG5hQDqi+A0ktvPRPFcRLU127QWcPs7P
2eaqFsL7HQlOxuTJTo45FsMBR6nQY/wcairdwxxHArRt+zP1ePWb5hOxlTJw
k7QoG0jQb95cxC5Ic7KMo1/zmyE40ZknY3AItQSRiYPNIfA94CHYhgon8gG4
VmTbSRoEO8zANzm9Q8gCxtMqvpFWSu4Aax9jtKLwwVP1mAwl/KIKGJfIqawf
QiJzmN+E8eaNHh8KErxHUi1SRie4amjAZygGrPDnl7uI6JFNZ3tDitKnmAhb
0ddPb42AQCqpjBpICPxjPwRQy5P2okTYJpk6w56/HxkE88T8KyhGCC4DgTKD
0I8HVDMNBGvcI2IzmXwQAasX2GyYK/cPmcJ+lxdMkkL0d4GETmMQ7xGb3sf0
9sEnMnYQ68bZR1hIeoivIhsJSbZYNxyCVP2jCriXjKKoZhCmlGRhKLAJMbwg
llT2RIoKak9hbzn8dHgRFrg3VmT8/+he08ii6lJOsUasRSVb7H1thKmdMIqi
gFBQTo5lHFMUhWQf4q+QiDSYgKiU/eXt9TgOPfIQc6vQOkys/3Q1PQjwSwmC
cxyxG1lzqGhUyOSHGdzhRAxf2h9pCMMY8wMKDyZxM74XxKujGCNEAOwD9x8Q
YNC98cwbQ61gU0sSSkYItYdcryNMo8hOuIlbcfZW5B14OdjP/aNwITazwgiR
Ga7bICCwHwttz0JaREKDVH9s95XpILop1JNHfAmetawNiNDSSS7nNWyJeJA7
GMjGiOaFaM3eVzIIKg4gIoKGrCkRBNyi9YgBBQWLn58Yisg8OQixKgnRSd63
nBohWEsZEQoVvhqytwIPOydTKFVxP/+KXIQhCJbNY29Gg2oQkiDaAPMQ+OYp
FG3x0vLwANPl9dzKHm45Whs/lsEnJw+/zQ0kigMMJTCiAYKwA23dMa+R1kSs
EW44MCIbW3quctrF2imiL6BBmiT/ZD3WQmc8wP3VHQbNUgujU9TucUarEa6S
Y5uDKELn1Q1KfWHbBnJR72dQMZshNxkzPmg7nFkH2QS5dS0ZmykPgGB7Hzxb
bOoLJEjGB2ZxPjEMn0im4IF4y46EKPJ/cSzJUGck6HXpMdbzTxDch3EaiQ7K
Rab2nPkjew7nDEVzEmQE8oVD+uAXQWtB0nJZz8Ou8QtJKydhoIVhqXo2FIsO
9iOeYDGB6AxVOH4tFIkO8Klkr5k/0jFPhmzH0l0jzFqiikliYDDP9suXzB+N
iCMZ9idl58iRfENFjl4KkZfBzmpTKWBB6QofBAo0xv74CgfFUEIqHFrbdM2i
jr/KmES6ry5DM9idzFQFcW6JsUBpu4KNM7Q43bsR7sJATDviK2gEjQi+YqqN
guJUM7smhwU1WpIaTAuUXemIN1Pk4ZYcid8NGA9UsB7+GF9FUYiaPIdet0H2
yDQsdzujc9uj+g4Jk4mNXvXYRpHuBC8/wP0oX4EyB7lllGdA2jP0Pi0lyEkR
NuUEY74VLV64hgspqaoH4EsKV6Ml7dYQM5AQ0RwciIqEHxRCwealTgb5IdgG
9xRRw+/SNBi1gzHjx43T7oWkQfoKzoWFjMBftUDAIsdar6WLPeICDtj9DCyW
sElkZJbiNRMZmOcicTlMs+0UUQiGAXzxyOnBcRAeQaTdIUBEHR3j9nCOpA8a
8b4yO6p9IxCy5DzRLYubTUL7B0y1wc1OuJtQEhZRK33Y5Gd/HSfZVF9kIHKZ
cFjbz3sM6Y79QviwCQPJfJizokplQXKjf3hMPEz3oDcF/+LNxoTCcW7APpAL
5Zcogoshj8RE2Y55ZJ+HPmwyDWCiQlv5e5RFjFrLPu7/7Id/yfzTkqA/o7Ix
/sgvMuXt13tiztBIQDq/vV14nIS9Vcj4cjcbrIv2XwDRnNnnuiGRFN1EouBO
/Xte1CtHOADVc2wLr2VUKiW4oVRjsXmYCUWW6fWobhBWgGEjJLpK+XkeAQtJ
TmX2VGsp6EjeS0vJ3rurSABAtShgTtVOJSxfYtJsZTpAAkKq2AQhmdn9JslA
jGAgeeHxHqLY3xNRT0bjAo/xSAbbIZgMJxwb65qdB6lRUVkH1VORQBfNgUe5
X6klyWqU4S/arGF1ipccfSWnP2HDYGUNcZ3ktONg26A/1l7YprAzPl6RwFUF
C7nBfRVSI5tSiFRpeFEohjfry8fgqAK/097rZfMv2VOCFVVBRqxX3epRM8FC
4u89GbIMLIF/37G0j6kawWcfwMzdylDsTkbB63GH8vPpIUipRvf16LFujbVd
25SZ48Igl5883eQX2dUINsOxQlQN0pksEqbR2ygSfyRDz5wszklES5yj9ISS
fkoubRJHsCGbE4V8seMGkorQnn2jI8gbGEZj5jWUBUGwO4q2DHy80O2ME8ym
vr5SZDpC0SelDavJni+lBbpYZUcNdPhe3pZ1ulRKGqrnRFKFcn1wu/YxLYYT
W33YkTCMreaJWT6a4czArUJZ1sRlJKpgIMvVUqJAk+joI43m2wgryTbPey0x
s2BnYSCCd/K9+vXGKsnmbVJeqhp9rVBAI5oeLmryIe4VM6k/T8YSx8mmEcZv
+CMDsMSCCRilfAoF70RtWlUQtz5hj37GnB3FdzJRIy8VB0Hsdk1inJ6y5e7M
NGv/3MQQjWF5DGwgUwiVI/U02c09bJm61YFUYPIVTAbNYkk6ldRqupl/gGax
je9lykuZQgYZhT+8JUiyHM26SDN6c20KlUsS0j1iZyAujlM2whB4geWJwz1w
wEpLEIKeg+Qkmh6WJOqqQjNSIaQo4DrUU2WedVDXGGjkghZqeOwkQuwUKQ13
MTXCZEMhDE0WhiiExkcl4Rw1kYF3gumHcHZ0VgRAs+1yMdE+0jTraBHY/a1w
LTE3mCA09zEEkQjI862sV+QIa4lgFJAwCp6P5QWFeCIbKzm7hsITr6snG9Av
x5kAsT2VsZFJNhCBup/5UZh3DF84otAelpdo7QorNyMsAjlDS/pagZTIqiUk
KlK50a41mOof41+3opHKk0lasOErBqrhVCBkfJSxbIRF6vdKcpol3mBs+TkS
ar3nayXHMWo/+hAfGKonCcGzAdbCbd6tigMRG65kLgIcSuVl8iZJNfPXVwg7
HnqFKni0OmXZGEkiktn0I7eCsOH4hWDKKYZQ+NGK9C0XQizVlOn9aC223E2K
GkKSLzIjkglQ82C3aE/5GZTOVGcbDH6q/gEW9DbJ33/lAKlBnCAumxNBecgF
jOtg1ocaa4QbJJxb1ZZCZn//oD1MCjM0BYcQmUcgCilegeRFE2LV057/OyZQ
jakAC2CILCAbXu7KR7KBHT/P8TGI1KhcRtP3HmIsToT41OT7LztY09WWdn+r
5zj37DNNcCxvytFRxk7UHmyx+/pBOo+GnhKurVKKqvfD28Eioe71wcF4+g8Z
+VpGzgnmpbR40wn+jpChHcFQZUeWkVy/DsC5n/aBB0S7W2YxppbDjG80yJuO
xcT2KJwhDygOmI04kEzC6HHxYI2fP3TW3fMhoGaIbIfbQyQdKvYuhn44ztHd
pTQYSNGhIICVApmUSVg0wv3j0EtJmryVFt3bk9wo8t236XBNa03lzh1GvL3N
XqwPL6VUeEJQQXkNBx9IZviQqDQF9zXaPt5FNm3HNQUfklbMsDEBMpTL3IEn
AOdIGrsRVfUbH61I1XIJu9PhUTbKmixUheSECX4LX8miu6qfZEHhYiaB3Yf8
Fj9qsTOpJ4t/P0aopulPwxHD/9zx+qQ/1KNcCRWmBqFkYOIjBWKITQSQO9LG
0ealppCrVAhBP4SJkHmRHO1As6A8yyNNDbKP8qJkH4H7bx2QJ2WJgWYR9W7i
PiA5qHMBJQSq+OcoM6QZio+Yp5NIW7NUoJCFhYT2yGcvOX/0Qf9Tb6Orut0N
+402qSu1qTa6XbXR2+QCUrKJ8+az4/cRCOFhwnXiUB0ly+fG5+1MvaBmRl4o
G2EeAEICdzCF3MaPzBY6/Zt3bQONdzPTsdCVwtrUoZDA92WoQ5vfJRUpf1ZS
O0fZGfPZDscw7KhCFYdMErlTXYN7h2NJj4/zNcuXSUgOCg4L/FhWRmBbFgHS
yiBKzylJdbUOow0fbKjLF87YR+y/M9Nqueee3Via0fcm1cKGf7m7qM5NTpgt
gxMTutmpi/OaoK7ZkUxXmIUtOqPZaePrpoIokXMXa8O7GEVsmINowQVN0liQ
4GSb6vEJfzRZuNAIyysKjhQG4LAMB6nDekPVecJNEHuIikxxpmJvSZ3R30/P
LPpXLGeI2IIxDrzCOdqKXod3U2H4o5hKh+l8ggUIInqcm8KqcIuJCFMfawXY
n54YvMHGenmCglYdd9cmYiC9B9XalfP259nFNbWxtqCmDE0v2LPG1Kb+PjM9
p1Yt0Xpq7qz+bfKCWu721MrVafvexcVulpiQXL/ADUffqjOi3nuZelFczvsC
cBWRgaf8Cma5WN7DNMMUWn+DzSs8nUrw14RaV5dnptWlhTX7UgFNHeSFQmdH
ZOEIHw1HeKQrH2SBgM/ZZPxlcfFZPocpGPCYlRvhmj1awYIzGvByruF7jGk8
UpvGXiTv4w41qc84kpFSXL9qSHpWLfVo7I7ycJ9ZJO3q3pucXmyQ1WbZAKmS
tr2xh132jbeOOXEtemrn+crPd3LPm/9vN3K9Lxz6TREAJQflhsAyAfn5QUiS
qxwnW6DhWvhIFDsmXTkrkkT8tF6Erg+rDUieb8gyf8nzZIq98OzapueZP4O3
79NGbgx8d57fef6GeD6vcbUl4JzYKoZDVSMktGP+jvkcF6uqNsMstdZ8Ube+
1hqi486tttqc3f8eb11GRXjKI7fKGZspkLZ/N19ZUDh+V2aNbaiLp7VTdXGJ
CdFbuqhfOW3cWibE5uple0/TlJ9buqjd4tMXdQv+Xtu7YsQUZmS0wVz/++su
pGk39Wp0dzkXytr6oCjl3dnzdK8beyLBJV+AN3yp1Kjwmfxivt6SceExmpqa
sv/KMBoTfkJg3IvGedk110Aj3OkomUSZFvWtCDpYbnAmYbGhisSU0Bnxuwyd
x4reS+muERBhX/5tAKHOWxXHfV6ZLPNxxAV/9aA6Zqh8zCXK6O5Ph7xOuO4j
L05zUGywkgaooVGE79aHDD9hwD3KLsaYL3hpUBWaZrvVgB+kgvxDUx9u9TjR
mtWAEw16qStUOz7K4PJ9adz5xgpZ4PHmZIsUJAr/Z/EmD2Vo/EAphHIN60T8
+dpzhKcnLc0PLlSaG8MXwqYUwsYBF/WyZx9o5hw01D7gUkA1mX7ZT54VQBAD
3/x6wn4GRsLMpLaoljZ4SG/4Ib0ohnRvZY6HOVTEaTUxKVVE37BNMkJ+ytU4
s1kfNuL/tV99yT7H4O0d8/6Keqox9fumqTBeX0VXZAJkpbocnbJ5HzsbTay1
aHcani+yCRwwOZvArZbOFtgEePcbYenqvtz45rQJzN8ANkFutj/qcs40/W9y
y4Y023+1cLbv40pVHdAVFYTzDloBTQJ4znmsDDGQ9fycOXvZrvjZoU/hxbFr
Mf77z/nEvPJ+rumcn3TWkdO+/E2VTPvF0IgF6msw3dd9fpAZP8zukNUG61LK
zPl4xFD8UGao7uMZ+5Ah2H6esef6zdg5A92XXog9+jOzy6WT9ebqJXevF9nz
kzOqK8a2DB78jPnc7ZYs7Rqv0/Z6Ora/G+D3mM+k8EaaBoGNSSgmjmNgO/wa
pisUxZJHaFOaoTziWdPUb10PEiFwiK1994CoK2MPzEIBA43QIY+bOWsBnqzN
MnCh96/j+DeXuu5W1+SIPuTiG8rk9ei+3s39Fy9FVudLVT7nlyMb8c7GwMLy
PKVf94g81NTeOcGNjjFL5AGVJ7lqqW7+jdyKXRzPjY797pBmGh0HHLPtpkv9
MEpmVFpr1DSaNKG/BaZRd8Es7Z4RNDIhw0V12hillNmhNtXlKT3Gzl3J0vFr
5nNUbOXyNd31jBpUhvfyQ2vbo9F4Ucqn2NvJ7BEmEsYG9rrcxII6InK6sJ0j
WLhF8hGy31DfCZmd2KgZDRW78rtbFGGzRWZ0v57FGoPdbj7W+KESyF6/SPX1
+Cj2hkvoJjJZ7UGVSWU63DjnY+81nf98hvavqMGzavwP2/8vmCFjtPNaQ+7Z
qM27lIXj5mHsfsUOhOTcYt0KtnDgFJLoTEHEeF8cMmQva6xoyFjWWKD2MFd8
/TKba4oyNQYXg9VeFp097FFbl+p3MiQJkkpG1dLsWUvBhXVzY03NaC00MXXJ
JOlgRKl1NT3p7pswfG/lsprUTV64up6lepQK1WGiNcKz9lqCJ/QuiNth99An
VGFYKT6UPQggQGXh1GHsn8R2A4wyzGi5seXJTOUoo1GG5Fn77rjYmG1r2uLI
Y43CmJiBCNVRBmOcd12h1KwVWCprJYfVKC8TjIf7+oononIWtiqLQtEEdJgZ
NOIYToqTXpOKs+WSWDRROiwd9zBvhGibpFsc9wXBGGHWNxmCFjMSIxHbBTEI
YVRgfy9y7o4wVSFUlCYph6hd16Cxa7QH4bYrw+am65fGLtKax3gvSY7D9odd
wgCbrZUupl/fXFXTp5F6Z1g7v77Z9j/3li9ZCeCfp+aMSVI+ni072pzB3qEk
2OeF+WTasFtKaPjal1rmJb/Mhfw7/eKtYeMYvh2nAumNR5lf2C5HwBrbhix+
2xGSGCPOtfnk3KbTLAXD0idPpTOgLDQH85fmhzEESfgNi4wdHJ8sZd8ryxnT
KmdrecLaTcw3IpnUw81SPdzOzJIdbg+nPqEkFM43QJENDFVsKUItQuRFR3ur
yNuQDJJpwCocw1SPalSkc8OwCzy9SDA6XE87GtKdjIiMOAEiEWnycWxNtzXK
LoIqM3zJAuqI8gFVB7Kr4m6w6KnV5SW1tLSiupuKDnBUG+tqeWlJLa+sGRWd
E4C/XZvtPonWVvMKxm9b5GSeCs/+Ciqn4fSsqHJByzTlM5v1FY6cgaX7OLey
z71hFTFZUlRzTy4mt/jgeT+hpLxCLmSHeYVKsKO8a2HUrUkRr34pQ85X5Snf
yfMpl1//rAOV9GeLJ0ovq0T3Jps9beF4B4NsNxPap3IHA2rEGZHK+wY49gzn
JBWOKpTMPMHkQFVyz2pbzlr34X8oIL4sSknE9yW3aKCMMfExUP5FhnT9dh5h
VtK9CjH3u4ef5/0O0hZpZiYpaLSkWHkg30j+BukOu1Z0e1GExGsM/QMOK80J
/h6mAaycfR5wqa4g+KC9hWXcdUQUB/cjr63FYZcOF9+y/f5yhsC5rRX/jevo
FM4Ll7plJKNbSEMlDIgml1FmxQNMbNgBnn6BeGMDSUT2e+JH7OIzNRUU7Eqo
C++4XSTZLbeblOhMTrC0DVpF3rENjY8z2f8wQ+Lqez7L+TDC4t90J0KShkks
M9QIJVHKT9lWlSuvB1Bhz/6AnXYIQSCqgD21do25zZ5U0zXVV5/7TCsS8Mg8
Q8XWFlfPiQgvC8ST52BZ8EN8r/5W0duYkt4OKBD/kXBq3cU0KCxFgRoLkRVz
0L0LXUN+KrgVjYYmcwFWFsYFdhGOMBH3sXBFREQkybJsnMWixZoIpRVbrPt3
uXtWHKn+ZIv9WUsIlH0bwobogxm2NHn7umaJ0EU8KsYZ6ROuodQtzQW8c8Ol
LeiitjZcsPMP1gByEqN3W7ygRvtUpXpruqAsgZZTbygI1sqMMjmhBIpuv2Mj
ihbRaopl7RdLGVo+wO5gpoCTI6IWJQ2raC7Zxa+BftEA28O8PMC92atRp+Zg
yhYMHJwSjx2be5kLXnJo4JD/GB4L5rgivUYo2hx7ICDtDHtot6dkT5PDSW3W
fxa+FzHSA4+3v5vhjRhl4Yw/wsoP4wyH33n9PSGPWs0Ntlvcu5Y8ytsDsFsj
IbiNmXaMWTXCD6Pz3HDyW9igoUnltfk1b6/oHpus/Pa4ezR+bEeQjsK5qclS
ZHnz9zLELtlBTgzIxVX9rnIbPksZcJzxlWNKwwzfosMUj2YVizmqS2Mm3O87
locy0VzRDMmFmEuT5wo6QC+RYtpgLXMwSePYjv91hkT9K+cE1ItUS85kSg5q
SlULSvl64bFI02t+WdqQ5bngCOFUguGJeGkNVBFyxr1QYl0o3d97nLGFTY2F
05Y4VgwrqgVaCMVHy4XcA0Q+vB1Nfz/DiJxo/wrTu9ywgmiDTRIF6JZ0+dqC
i9qOQBpqAP4b5oLHuL0O09QbTHbLHI4zo3DFKLfSLFLq0SAYY3IS5v5oVikW
RN3dTKs/zlCyksF0tD+5q5lO3suymhZHvWpxRMluhARlsQpstYDVdEpuRgd7
MPFiVKA+BUQgNyqO8XMjDHM7BCjRzQFr9zMv7dBAhCU3I4uDJJLghLfjaXRY
SIZQF6nAUipjnCyCEYwX7MrO2yG6170xz3B8Kvk5cnAF+uswcwVLMW3GYh+3
1xJZHQ4WaTFJqUkHl4+3BboqN8OMFC27YXeOherFjPnwKkWmLKOAdD8DCtIc
qbZ9TFpoe6xtFY67AzHn7GuIDuiHH+WrllCzs7xnnWys3IjJab/dzCBov/2C
QVR4p8ljpsUVoZoZcfjxUraUD6F7WMZIEYRx8zLTttABuZtZEYhwv+EE1xpq
TNbaKRg/TUehYjMMyq4Z8iVy3nMVlHnstOTY4VWwAtvMUuEl3O3A4+a/rsgd
BLsinsCGgzGGGkaRq++HAtHE0h/DA3ZdJ+QOKjE9zrj7JWfSZPDAcwqr33gI
TOID7mEaDxa3f5ghXWE9TGkqUW3ZaN6XNctSDQRDz6OlpfFWRnA3X0VCfDt/
hZcHzwrqFkeZyekl9SYaRSkWBWIc2Vd+ZTiwpf4kQ7NKWh31xCLCjoQiCnIi
xwiCiZr8WFaFTCLLErkmu5hC0WQAywknjGIWvicGF2fyePtVMIKiXIXavYIX
XGAKWfIfYs5jttqKUXQvs7OqGzESmkXybDLNC1RlxqlHXm4p7NcI8y4Rp2gx
G+BL4CQeaJnciIhiJomNovLBpVEGEkmxUeFd3TVybyMbqeliIqTfW6Ep9FRF
DlUfNIUR25HQy4PjixxVnMyCBC1wBiaOpzgKkpEcQnEFfDnBfWF4eM+EVnik
+eNSUaI5V6SltGWSATFArNMW6KucRYT5Jho6cLCGUG37FGfGhdG9duxPWNnC
hA9/D5lPYrEjKeAnGYZcEuuMw0VDrARTim4NAgy+4UxseDZBwMb8eT65wQJe
+l8NpwxSI6zYvO5L41UjPFKwSB8NUmQQPl2RP3WOUSnyIfr568jU8UqJVmvk
SnjBUEIV9GglChNOh/nWCCuj4xB2nGyJtJ4odrWfwY1mNrCMnFzDUUH1ER5+
kVrOWQ17WIwqjsJSOwwTxBAOXigwegsZTfQHo3E+S2ToonI2yp9Cg+RGJPRB
cA6b+SOXCE6Kj68huA6jkfLgyacwbpwfc2xPYNnX94BaSlSpucgbKRp+L6vI
mJLh9/ciroQWDSEcTV2RVoGlGZztav4C9sKVhzngiRpkKxQONQTJUOlQ1puj
zguHH1aDke9Fp1fSTOfJ7NcwrNompbmviIWwC5tsiedMwV/PcKDkyBtM1amw
RywZCa0JeXQopFsDeQtTmVI6DN5BgjjUYjPuHFtHUkYgTH2bb9loKJriZe4b
9gnQGwXGBCapHL13s3g2BY5pKPl/zxC4zjmGZe6PLH2CIErgCMEvjwbBfu4I
og/dhuVTuDogNsz6EUYb3hoSTzGtRF4nAgCpFe1zF7/hD6VripXlQLgjvQQx
h7E+hLPDqrn1fWcN5B3eEdMkMAVqDQsopOSQOU2Ro74pMw6icCaxQQyBfs5M
FJD300mZW/OKimxIzqYHD2539wJFJJe0Sf20sraYlo5bmRoFhnKOB8EML5HG
zA1r4ihfwTxGHgSlDScOZeEAoKWQgtgh8ixycXcEkUZCGwr2J3jxIib4O12H
AekfZmwi0pcrHmiGu/i5RAvop0Fj2Lj3MrOQ4oNcHRRSbrLBg7BY5FrIio2k
Q3I7D3JH7GEsvTJDtUeZViWnvP9KSLwCswYBwfgMH48Uhmdy8gV2Gqar5kk5
cN0UNlYhcQPnEO1nmkGwfVT7lExni+zNg9y8z1ojReeEN62oYYwgMngiUzOn
0uFOWTh+M0PpnA7/jXLqJ9pDBv2ALlzvICbrhd5oe8M4xK93MzUh0Q/za0iu
IN+HHCwT6PBKM4j9QY4jLUCVsQey2dcy9CqxRv5BSMrYKU5jF+au9G0CemIS
lEY6mZSoWH8sI7YIz2IlW+h03z+OVAx2vwjyuZRmGd5Jt8U34nQ/EoM9zCfo
G4lZoHQamZy/EX8ShvQ9EXnCWtxvZXhRciR4maXeV8vAcgancEiNnDddix7X
YB3uELd2jOHwZEPSc2BCerMSJ2gEqSZuhoNX5AeKDFL1icAWaB/sXJHzSWCw
1xwiMNjvZPZVdZsiT7b+mNnHVITNgQPW0B4iDdhvwjsVA42roUrOGoffowHH
WQu74kZteJxsS4wamWFCQ6cwYhRN2vBqEaXNGf6SVls0/B/JUK1vfAiJkS5v
S3Ip2RBDeUIy8DDQgEEgIycXUfycAIQEFIyfQpeXlKO0oGRaBNKWNUSvqciM
SkMLQrcVXxgGz0FBTFiZyOhAlmZ0ah+IbvUfnDDKcZP1KTRAR8TDQUQYo3SX
55WJ2hl++X8jvEe6nGvDdBgwlHInltQfSi+K2VZXI8KdGGV6RbE9nNuKQDGi
F57lNu+JsqIke8kCO8ZgYIEd52NGMGPzxkhYpSARP4x5Cmc03MmIFBJEFClC
C0ssMN5eW5EpJUMqSVYoW06HesEVltO97ATxVI9O4HogdRFmltwoHNhBllC3
izdoZ3ArHDQyTkJ2mjefioNKZYaBdEuEdXbI9U1+iIXiUoauuXHwj2JaDxpB
igYAjpOt4PjhPHAs/VWQfRwFCNiRF1HofMs3CjxwGF/lnsqfZyhaXbAHdbmb
YTMR5WkHpuEeUQ8HykVkRc7mzUx5KCakDsJnOSibCqtokh5occwpXR2HO57K
P7DJcSdyVeTBaenSuG3lH2dYkBsDvxX3W23OzvkEnoqkEKRVCaM1TdrBqY7I
FklSdchYjjQKsghz8aUyv7yqSl/P0KySRXRvhrDRNFVgrzaL9EpSdiIIMkVT
LGbSE9w/ZBqnSyKLvFCm5RYm3TnyoqR9jF0WFG6CRYa9xNA1NcJMkGo4UVux
enA+VI34U07isY7sBQb1kwIOYE+9Vwrm7zneuh9KB5lWmBFxOCWONoZv58Eh
drQYJmFLuSlVqBvPYRjUZeqmfmD2dRX5VH0kiQ3g1dagW5KYMdlgqoDuhEVu
bHUyTD3EdAcLfVK/a1Rm5B5n2t4RS0+6Gy9OGMhs04hWnnF2H5g4Eq7L5YJa
8CmawxtdjzOCFUJecL2RVR/pob38MHJBwYV23JseZODHSAwBDS4sdCCBI7GS
dVPQYdGAa8Rll1JGYTWq2vgr9OijcFjkx7+hItdKxtqv9WdZfqMGIVh1bN3L
ZD8miEi+lt9OgWFgOYgkdE0jzKpYoPLshmURJRBgJ1Yfz6NQAWIUITjRCu2t
5zNkzY2T/yEkdSOT5pSUN0idbRE8R26nJzLcviP8FKxmv0MaMUHdzdHw1yh0
jKv9RYSGoiwjNGK/tWaawgDWv8+Qt9KEgjU0lL2pH6wCD5J1Cg3rCe6twJFB
uNC+bksFoWYUPOxGmKKUcIP6TxaxZ33lYGm9hLGoMke7KBZVaJodZoS3Mnk8
we2VB6SilS3z5xJYT5VUcU72aCIDlngMgUDVBD/hQi2d5BIVVMkL6x5eoE/5
7MvEaoR12Tc61YyBjBqtG7Eqz9V9Y0X+VR9hcsspDS6UQPS6JXB1yocU1lIa
YRYulhUw5frhRfvAWsJSRi4gdJ8WJmwyS4Yc0kiIadHwSpWdyNxxrUUHTFVz
6iMDbZvGGEZKedCX5G88bkC/cjs3X6DvsG1hhMuqeSM5EMaGOzmZwvrR8IrW
V0a5/zHmdy7sVTKUUps5srnKo2BDHTZJSls6J8l5GU7Ic760a250wCGEF+Mn
Gsh6LqASjBNkjMIbldt5TsmapLn4F3W9T/RAjWNS9dwn0sThgnBWKl9sPFKR
M+WDBa5jjiV9g8IYIFiskM55oLP8/BQUHYR1iqBEYq/RJv8K0TGMhCa3PIw4
2bdXpHbJOEBaULAJRtaOjEbvvswbUexeli0KpBXmrwzRwCZEVSQ4IIH0I3AG
MKDDC50SKi0Vrupv0ZsvXCb8Jxk65wT+H/Mb/cLA0JyYZXW/CI3br68TgGNu
PRVmnqtEYqG7K7sP/gAq21j9QFU3Q4tKqtpWcZPbX4oMVecyR6ZboCMa4UJ2
YvoEAkyNGlSoUeh1yDOm9qiOk5VJbIY6ISSH7sF22R/D4rAMHQ3qnPLd5NZ4
ZSyXZ2X1kK042Ue5r62o9Ce5Pci6TJgPmAPnEPMoqIdMdji+iAvi0BcEmdAK
psu9sQT5DIMG8hsLxgRmEekTOOSlT1AhjPQdFWlbaXQgRUdGcggGSGThdiHQ
HjH2Ixmy+1/hh/UVbmShH47Jnoq08M0GiRsVbmYtd6VvqsiK+mKei5TLcz9E
IMSTC05XM0P+HP8g/0lNA/0wVufAWBl1CiJ7nuhC3RRuCpcBe5j5qdNVP09q
CAPjN7mxwskiGhO5eQIqGDVr7uTnHuAr7GBF1l6SpmbD5BgEbuLxdrqFucy5
laJvASvQ5jl7PXJpfzdDrpxcP89kwEZNKc2gLYxmq+4CGY5cI2TD4OAG4AbK
Q0DlDtOygHOB+dKwi6A0cTNPGpm9O1UN740MsfqJosyuDjQzvEuPgE+jZzpJ
kcR5Z6RZjjOd4OVVlctGppyVXCZL4zJQNNFmhyiOhs0ThdJKJYRqLUb/0wx5
y0W3MKYpTnLIR08SLaC4yIAmzB189RA/B6dEZvUEFIN9InImXFCYJNT7g/GO
ygqBkZpyCdvBbuBpJRKaq9UCzR8pTRTJi2iGCC7iUZFSQMAR6Vp+3V3T7GHu
MimMzIGPzNKgNFYQXMFALvD1osTqyLm7mVveip3wNLdXyZOhUQVO381NRZYA
VqLuZdwoZmM4mEasRwTfCkJ5tBA5i7O84+m9VuDiZEUiluyCfNzdO5VUbfAL
mhBlW8SZcArG9PNiEa0R5qmh1IeslRPIp3TGcwHs4CwFpL9ELv3BmG7DEOHI
o8sFKXJyHG1+LJfeZqn0iknN/UB7w+CzFSYvY8kAIRaYv5G838XtwYhoMkly
ki9PviAHwQUsbIIHiYBhMTZpJuGPYBzVCn8MIvzRT8+Zz3ERXggUsUyslewR
ETrUE4KgJwHUcvHW5JNhZbjomgHY9l4o7Ug/T4LTNfy8nMKBKwppv5ohotXQ
9tbv8HMV5HnEi0ouBi1EOiz/BAc8kGrEQ737GZx6gK0vCMPBj7zToySnPbkf
cMKe7ZCvW1cYzMNmENRMh1f2F0yxkm2+v20+O4L3gbfVKMpmyQntHcxJkN+P
d421rAJNhMoZubmqzSiamIQhAokssWoFBeXic66aYvmaSaFsRvf+Cb+BJVvp
RZzCgVx5EtNaufWCQiP4JBcTB5me5RMvYc8GBiyS9hCmQD6S3Bb9HJ906mhq
YCNCRCHmwiAaBDKKFfxlhlaVjN6nWdD8aPVECZc/IuUKPxHSGZwUJDMQn+Af
kPvbZDzggFiK++M1aCUod0ATtsolR+YgJhTsn46FFadSe4GVbnuByVv1qMhy
k/fljCNcDFmGAc4qaqQgLh4IWTSpyIDs12SVdtQ6hBN2E/eBGdmH9glmqAm4
1WJh1Y9q4o+U5SANftbXDeY9Z6f8ZrvyINj3VaR2TRFH8KZcD8vsLHrXA+yj
JzSPUPo7ygBEBnI0GEDv27g3rEzlakZJRgQskUnf5FjnxoZjZZwDGm+/rRpN
rqbOhzNaLFtRaMLvnxVueBRQFpaHCyYIy0NaXjllTQMHU7AnjCbErfG9CT4y
ioYfAnXBbn4Z16y4Oz0/ZsZlqwK1rGf51orULxk9V9yLQYwOriR228k43Knk
8EpkDiBHOioJlRsG4/FrqbpDXmlhyofimlbBBJFwvs9qtyR2bmL4nzLUy4m1
DdqNZkzCwlk2DNoJ3QMrGvXToljSISbmLZKEUhXBTISrmJ89g8hzFC4Ru49D
M5GmhnyGYIU4Xi9DxEr63k6yzbxJg1Aw6JwLKCM7DyfHiByBzDnEthVPJliI
EBVsp8EACsxxsU8Nx9dIaZYxKsIVXmqFLI4oGbtCgATJdVvR4682V20fZH4u
LIEATw+uTCLVJI9R3AlhPri7FYQ8OeUNhTmRZUmkTmxMO06R04YsJiMRXmUf
YGHKqee3VSRqJWF/BXfltycJ2kJhl0s8bPCbYoLAgvEC30DmVyVhD2oCRkoc
Bg1kH7tdIOSyUjFBFQVHIkWTLOJUi5CcqMiZcnF/A1jS3/kPFhXDgQ4XPQ25
JqIfrHVjqxckHPUOynKdoARaTOBUvqNgdy6zbJvE/ZWxeIBcuX0TRFukNkHW
kSSAVF+ZmzfLtVhwJDFya4LQFBxbIevholHEEBiKqOVRIPOFyTeQiuEa7ycq
MmyIowCqqRHmpGFGxqCABYf4/b1MEowCO3lFBx0hXRMKLskvSQPc6JxWgZJQ
dxQmfEdFIpZI/T8VYuESQD0V8sQLVHp0qAK+JoWBaA0Bmdl2dOMsZ4i5DTt2
QimOQuLJCRkUtcntCKLVPSmG48wCGSYvCMr8XoZqOan8PUFJpOx/TVZMRbAl
sjmwZdSvwAYaFHYiRAQmHchE6UPhWdjUubTiqL2cdxIN7aTLsjS7v8rQpZLK
fTWD2WhKC6MhZ1Va2ZKy6EezGCigDBw7+IhjTC0YqpGQyj0EgZBioyYWzpID
JanMUiO7Tg7vIMiqBEcQ8mn35w3GmTwzltRauQK+k8HYigL+duZbi43BfppD
PS8icZB8BMgDd0/6QFi7weDIFRKIlmOiLKfkvAOaNDBkC+u55oLmOUUdkf0D
FYldfaz4k1Wc2WGEioKOstDLKVnEIYmsaEQwj8Eo+HbGWE6ipKm81Uc+DMQa
bPZUnfUHnWORI7eok9tWndPCd1WkYLm4vikGklhfLriFa4yn5MHUUCjBSoH0
a55iCkQ7LVqhBZFkycNJfJaPJUcEt9ZCY6Cwv6siWUsE066qNV3iJgmh9cBx
qA8yvYGEz6sJDlK7mZGAuRQF4Sx5UOwWpRJAc+SPCvfCsTuoPlB1vwlKb/1+
Bv2cwP0+w5f6y4j9+iwI8+d7xtR1SIAAAyjyaTWub+I3mgylb4UqFUUTEfrP
TT9UgyTa5VA+DWGlTq4tBHK2WU+m/rlDxk4rsEqf8wUTDrBwwORECAU6A86P
PKuPSJcsFAbChrxM7CuJrE2UXpRSiMVcogIGabkUyihZoPsWMhQqFLuCmCRY
3BQaTTyA7F4sMyXqFzGRifDIkVO8z+PrfM57GAUIvebIzImm1cS4DYK5siSR
fuQ/1RMtzKOvZ3JhamzY2k7Q9B56zFKwKUcYlsg8BW7YiI9wIJT8UaYpgqm3
MO0jnwelcyIpREWm/LZTC2n5mr/IZ6i0lwO74e7lzrcyK/s9CJEPat2dwKpJ
zv2KcgghepYQs1yMOLDOD4tHiFbJ+mQg3i0nKAHzYK3AvinwpsxfZAydklm7
FRbbvrsinSvJvQ2ajItI0NdkvfRk9ZHEuiN/yJxLgSCH7gPZ22NMMqxwIqIE
FLGNwXeEleZoWSIS9WpJbFEZhlysKtK6w5Ftn4No5SSrd+WWl1OZw86xjmxl
MpVxRGkjlQFBB31EPbwk3xzLpwhEyuMnA4EpjyHQuop03nIuas5Xwnrguypy
oETqbVBml48rPCtO04oMCUwsCKeQxjSvkeWFABaWPKOc/GMM/2EmY6SzE7mG
DYHZgGDxOpuMhoJKsbnNHNDTf5AhTU5u/wWD06EMB91NNCM28hojl/AAM0uj
AH/gGAuKT+8Uf22RT6Rf8g2h9F/oambq4AUegOTm13+xjzOkMhQpka0/9Pek
zwibOhnSgckAZSrtziAq9aR4Tbd3k2AwycKtLGDJsYAIZgViFUlI/YB+pCSr
CtYfMHzO3mvHm5HsXVlKBc5iIE63szxgaQWZIrslPjIEBLIiyQDlVSBQ0VbO
nCeUEis4vKUk7cA+zetYdadt76oHouVjB3B1SaAQ7EXNVOS+IF0P5cuhf9JV
TylziHwkJxrSwVLRGZDUbnJCqG5OHKlbSaWhouIDjNdWpue3mKs2T2043g3L
GsnOO7LlIHZYpEaEH78i3xc5B0TZopxyJSdXv68ykUKkmHqQoJMrLB69uyIB
Kwnnd/pfpS5MSr/YGQKWNUbus+YMNWoqJ6bwKOE05bayQiRlZgcVHJAFyXKp
Ln1X/IW0FqlGzLnDEVBL2F1OQHObAOFJQE1iNNOmcxjmEEtpwESCF3hESWo6
knyC+m6SfiixiF1VBZPuIGJod07lpl+IHIYCPHYLdTujIy3o9zFOqPF6iDGO
REkmcxNB3XqLG6u0tUn5sVqY7ZeLNWJmjc7H+yN3hQCPwD0nGcJlS+ysnJg8
VioIXmBwGhYcgmDnTP04IUx+xbiWbHyB2vFJqEhX+Jo8UAqc9yW6o4gc0tXx
GhRQsLS6m3HHdICqxwiCYbuL3LVNozd/yhyJRwMJmEbD5MytBxnIreiUT3gi
e00cAYQQPbTGKwW/CGmYVMmRXBr93HHqcvHJygnxoxEvOWMuow03uajIeypS
o9IMBlHKn8cJMYXYYAXNquEC2bmDm8ICMhIFbcvHQrGReQwkO0mMw4oc1Y6z
XZb7gA8NRXbexWSCrkXo2IIGDZsTJWinJzJClavFBfHCtANVglzDRva87MjF
QjordPEpmV8f0e+jw5SxtzM9kmoemI/oyi8dRlMbCdrLuKlkN25KwUNMwRGm
oDgC1sVpKCaDVVo/yYjog6xTGKQZRHpq2LIW2T7JSXXE36aY1L7+i2IXV+KN
Bzr9Tm7F9naQf4jiNvuY6EnQi0zOSMxy8a7IDn/v1iXsX/p7+UgEJkQkW8gM
kwKBex0jC488WfbGoQ/eRhbqKzCO8oY1VsJo3SkyrMt9wH9VUaSWGZVyqiQL
gYGFgERN+wNqssIGzinpw9yUrFhJXRZGTyuEqlr1pAR66B1MD5hN0C8yJQfG
UmAwY2DdxVSQNl2wxRCxVViQ8QI8sn/lpj9Zs0WIizVopS3gWkjOzYBDGDhm
jzDwW1FO74mlJpoIA3FCyB5+Lg4BhCTBgSv3ySC8UeHhJO2aCAI+OLs8EwWc
5ZMnyGqLphHa1pyP1n9vRbLWkdDAsLeodooE8SgTYpzJKRNUcyIZ5OEc49cO
e9CMOo0VkdRa0dI9MiWjjaZQWC8aiuh9D0sEbFNMTZCw+xkMrFEm2RFplWRR
YCaRoSgXXD8g4iOxf0UCFel00AnRMmi2IYjREmML4dkVClQzFKNcXaog/yFa
FbJyhgDK0Yw4kRCZuRHFlyLjnuCMhBJ+u0wwDNblk21Wgf21VFGm/i1DkJsY
MUvJRfeTcgu2z2EKCHeK6yUj8KGxl5VfeP3T914hDxk5X7JuaBo84HzvurIS
6fIkh53WweV+T5eZQV6HZzNYk/MG7+cODzN5D3vSCFlxv1F1AhIXo2lScfFy
aS0HldfQ0RCMti4V+oz/up4cBQTMyVE7TO+FJnic7xWs5cvFHGznPcCPIKYs
AwdY0QnCQeDLICKDWeqdjBj8OemnITUBqwcUSw5i9XKdHEdu3xcT6lkuBaKR
iEJNUfMH+A2fMIHdKJHTEiTAOXHIL8VEOuZRJsNW5rL3MpxRPKEpZs5ZPssX
RhYSVKhOGtxf/5rdYwlTmr1oOaFFWfaNzJac3CIgsvdp9o/s50Iz6f0VyVZH
AB1mSYAXgzAniOTnwYTCsS+QPMSnI2rnZDA/tZH4ya3cYXTBkxu5L6SVpM6K
itsXOoWPVyRwfbnELpJo1QNbOqJTIeUePKw4w/SwQdFnuagELLUg1yw5wDsg
cF+ZjhcLWT4wp9OSZmFSGowMWGpDkOR/I8Qk0KIYy7nyCl4ZBE4nsksSQcUc
TpY7XHn45LmasEEIgyZS6QLkxjomoEaYV54cz0AazuYW/nGGPjkZXWHSRMZK
wxWcIjsFRzzJMGFdyTzBj2CLmeQGModpMkEmQs74j5YtC9WkxZUdzmrS9Mcs
IE3eLNfMsDaQKqQaoQQfjiqBfPlcG+QsFNRQoKGaUIqDcrzpBMlfcKv8I14r
utUhGC7StnmOjxRO/czlerIU2P+wDcn5MBZ7tEkV54doQcF0e3dMJJAwWCIU
WHL93SiDBRsXk5XuIHw6iKBgAn1XzBvsMUQYHRU1Ufgi4CtiyskGgsD2zxl0
yCmAmVxYghthSYiXj49FVRIbft4lIjbEtkrFObvZaZh2H8uBKYdy4IcCTezf
g//wYib0Vubi7wOT8lYOap5gYgbVoyiWbRIFJiC8SCjDYEAESeTLeuW/p4hL
CBHIFAPCock8kbkn6e4QzBHSQbBqA+WLTvHB1qkKHeqmw3eDB+GgaLM6bWaj
lcFQQEYPqskmQ0GTAnWoaZawBAj1JsJRjslGfIl4/WQ4SranUdrcDvF9n2sZ
27cJaSvMURVoeVICkrs1aj48WSSdsYyjZRQkCAQyCvXCV44sHISkEzEMhn+T
3cfmkIQPqzYY3/5kaIodNoWPo7G7ja9uZ8rg1FGsuaOgXV6/RoZOlBOQS9um
KEwkhtFWxNSxFqURnX4RAovp/E8qytz/xhRLxC2aufQjNzOxnmDy4gxRWZab
sMakkfOVnVfWDn1lh62QFT8mo7V9msd5Bb6uevoBlgZvBdMj/nzMr8lKKtDP
KHZ9D4sEltuwXiBDjootbVIstQQr8eOi5W1EFtJZG3OFt+tRdDcIvUdKzmtn
q1MCl+NJ7nLL+q1wakCMD0gnR50H6/L3cHsICJSUEabXUGulA/q5VUE6dDGy
zT3vBKVI/k6K88ck7PrqVEWaVRJbrORYSWyxMdMSKhrxgSCtMkq98v5vtBAL
MasqxZplqH1xQPSWy5jN2o9WLIOcoMQTlkYvrfxbaF46FIm02qBTJH2F8a+c
MKJo2EHmBsQy0oiyOlMqqijyJ2uNpZNLGtDJpUzkz4piNZs5qI5C4M1tFGNL
zPFQeHcxMSPhRTwE6rGfGFOjsBVl+WvUucLG7dD/91xvCUiC+Twxx2l6o+LE
kqx0oBhlroS8oAUguyn/qYr0Lhfs94cyaCe8XKAhyuuNVhhuY4ohDJJbdqEC
MnKWj0QXVqRnIXQDDQWvYokuubQ8e8DChypSKEkE/19jSbPOKNZ8n+Wi/0g6
rCZBkQgk5dKEQCHJXRz/idVxP2ppDVQKkVWRJERNRxNa1rVXK4xp7rCQf8cI
ddxzFNNqilEYpKxaOpxwX4OjU7AgiRQKSBKSObH32c+vQkAKFpAQvUqGCcV6
drHdxsOprh5C0B6ScAv/GvlI38GP+Ic1fzDzYeEEieGwhDER+nx/ISYo/5lb
omiykdYUXoy+ejl3U0FB2FtQCx8IZaAZmhHwj7BOcQczGPbjcUYZBdZkVpLF
LSv8IqM2qomtlLf/WRskeVpNNrXTgTGZIcqjTIBKWwS+l2lzOKSSnIntqEhF
JDEINOg+Bf9rXP4eE1QgSoVF6jAdIjslJWly9mkwS6Xjbj8DOMLjbY8TgZO8
/yGwAF5RR+AKZySInh3du0Q47ll5rA+WR32M2Jmcfo+MbRT+brSCg0AGCj1I
Sy4qvAFKORVuKBU55E5SI0H0pSQ0YM9UJE2JUvJKGyv2BWKXCxPLAlU09yAn
+RCkJjRkkTWERdbCGCWkMOqIZi4T9A/WwjDJpcuDEmIiNRlMkso2eoU4ESWD
2Pn/TzNUzMnefzCfndDETKgY2PB+6eZksuUL6wkIXjfaPA95+bO9wiCSboFI
lDT0o8i4PKCPcrWiyaBDdrk6UU+wMN/DfMbUjL2m0EnJ6gQ2jSB5+aTf7Qqa
ilIRYeIXTGTE2/wjX+Nd54g3GWnpMD2FV+N+RiDdlqRC1qmnVgM7GyE6tsT9
n1UUmP+DUbqVKREpelR7QmwIizBYLEjQLBAinIkk17XTUSji127ipExK8+eW
ocAJhGptuxocr8xJzjiPKd5zfnc9EcPkCX8DeQkQtiCDVDoYtnwrdupHIpbo
+WjhHCuehWfQ8gbfvJ6CyeZI4uzwIDecEuiapaMU1prNXKtaLa9CdMLCiSQt
lGSEe5yX0QLJ9MsDZcLmFknbQcZuIGfSXcN0YEmDRDoiVyPMHAFBhhBPgNhh
8RhVySJhgzENRYdssZsGkSlPlQKZQiES4eCxn+PSFWXUNpoN5DStZeqdQ5Gp
DzKcyU4nfU/GW/UPOO/1Fn7YTw1aRR8T5IAr6CJ9keg0Xe5CpLiHKBKrIQrW
nkqOA071cnLoooY+0P0yo0FO5dY0i1LVCDu5lkNz97dVZNSfZtgDKxnR0CT0
EG2yC7aIwH3AVA02IpyLHcvIBgqORA646rKyxY6GFlPAQvTYABxsiZAbmSZ2
syZylGAR+wRpRKfc0qMcUVjKacpHzB9pS2TUgBDQjEHNrDC95VlUygkzQcm1
98t+kDriUTMkFFfO6yMbf8bIIE8VnkKyIpnKxm0ZiYhcAy9hudLIBXUt/cwa
hPWjWC4IYsudE94Da/0fYFGB7RptzHiWq2MFIoOtVCi5BeHBenneYcIyCrLX
ooxWt83REI7GCWhBC3aZmdUtk7vsS/MnLJBdLCwf5Wa2MgF8iGVnN18h2yJI
hpGT5wlGlzY4GeL46hW09wAZ4gWTZ5MFgkJ8RUNHU2RULJsHSA/BcLDT4LjB
4Qjfw7hBMBSrDCiSh1UdubOCCNDhN8ivpeEhN2tExxgnhFD+0PPIfW7ynJP7
4WNDEZAPs1hgoRS1Q3HYKyoPw5XuMEFALmEm8b4XCjFGlgKFU5viXIThcP4b
5rNjUDnOXIaKuoV5dgsjFe0aB2bIMQEZmr4krEHGjAsZ4x5hlCEkFsFx1oRH
KjLpG66vKPsH/gGC7/oK8UeoL2CByU4WagkWGlPmIFoW4WPBe1U9lmAwgqsR
Clh/ijxDjwfm9YBXe0LcIkXkhmUn9geJdy2WQq8BKcO2KfQj6rWKuvCm2Lvm
6CcyeNUfhR8xVy3GsGFjsnJ6o7UPAtGobFAOAZzgxD3zRzobi1RIG8bRrpjZ
JDXtlGuHTkCL/RmUh6CkP8a8Pcb3GmFCMOxgpKMjBSSSGjG/w1rw5PAjqGw3
mVwEQ8YAkQRKrcVD3xYv/PRQ5MHSYpcY67NcQ0b3BqsfvIzYDW9SbET0f9jR
JUUbGc60+uNtYKTtKD+lt0Ti4fZJAay3ZpE8JKuQWh4eYrYjAleB3QcynG46
+9qpA1rOU0oJVfjDQ2H3D5qrjlgVIOUIBI8zz3HoWiNb2QbJN1QXgTBzaUz5
2BgcI+xVhuzVZPGD/qfeRld1uxv2Gx9epTbVRlff39jENhnRhP2EQvPLR5oC
CBxifwPcZkpKMHtlA1Hey+jDAuiI+SzA2HaeC4vm+KfcawQpeIUrn0yJwuCB
N4bZLNnojImMkEkyLwuYZl96dTFvrB9ta45sqMsXzthH7L8z02q5557dWJrR
9ybVwob7vrYwp05PTGiS6Sd1s2cuXFb+Jy5Z2X+yV0bGMVahQwKWktNkhJTK
5WHzAvSCnbAsNWjWaobE8XkPH0TFZjN50uLhlzIg5iSazBwS243eJpesluKd
E2UM8E8xp5NiialWg92FQr7JJgSqpwIZStb0SHLGmDj3ZJCuNKCd0BxUa1fO
259nF9fUxtqCmjKCc2HePrupv89Mz6lVI0Sby+qs+e3cnFrb6Km1xTk1qb+f
vrjUaGa6gcB8nPGBq4ZiJscZRxQf8u5Tqg89aU7Kc8b9eorREkI7isT4pthB
R7GXSHRgCf1IRSq6KU+31V1U5yYneMxNXZxX9giU3pI6Y8gzs+je6C6p6TMT
NNwmTp9Xi+t0Vko1OYPujqSrJXYc2dgzW4c83Ca4uq1VSNhGT2kvrSI1BNIc
GlTU7mM0e2rujBUv1jHrV434nVVLPRBCdRfUudNTan4dumhx5rSamLxodFRW
P3WZTK9jgYqq1XVEzYCTBSfVt6yXIbYPYqQ1wqOAj/JL9vu9GZhs3oU17TTe
ZzXekxfUcrenVq5O2+cuLmqoN9fV5ZlpdWlhTRmFdOXchKXH1ZWu6q1bmdHf
L6g1P4PmJiyvKhFRtTuDJ+RZi/IQZ2J+i8dFU8RMC5hvO3ptFR5vqIunnVog
PvWWLupXTpu5hxXt0kXDzxnVZX62nBpCyErmxBihd+PcrznQg43oqZ3nd57/
Vn4+yi6gp5pi2pgNSwBcj0i4LBJKDySdMGvi79Y8wNOIG9UlkS/wLJ5yqfvm
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sh", "=", 
  RowBox[{"Interpolation", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "x", "}"}], ",", 
        RowBox[{"SH", "[", 
         RowBox[{"x", ",", "1", ",", "3"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2"}], ",", "3", ",", "0.01"}], "}"}]}], "]"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Spline\>\""}], ",", 
    RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6713145932783127`*^9, 3.671314641837644*^9}, {
   3.671381380445994*^9, 3.671381384908849*^9}, {3.6713819240294447`*^9, 
   3.671381924837036*^9}, 3.671382034419735*^9, {3.671382327273818*^9, 
   3.671382330238977*^9}, {3.671382442637567*^9, 3.671382442709258*^9}, {
   3.671382543893298*^9, 3.671382548804*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> 
               False, Background -> GrayLevel[0.93], Frame -> True, 
               FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], ",", "3.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> 
               False, Background -> GrayLevel[0.93], Frame -> True, 
               FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], ",", "3.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{-2., 3.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.671314653510421*^9, 3.6713814120253563`*^9, 3.671381939415905*^9, 
   3.6713820375325003`*^9, 3.671382398389305*^9, 3.671382447134534*^9, {
   3.67138254488988*^9, 3.671382551863996*^9}, 3.671403718455484*^9, 
   3.671459954660759*^9, 3.671580729347638*^9, 3.682444237837577*^9, 
   3.682709012365603*^9, 3.682784950186153*^9, 3.683393341282791*^9, 
   3.683568305307735*^9, 3.684091333123172*^9, 3.684091936385137*^9, 
   3.684093225440566*^9, 3.684168946284726*^9, 3.6841694801010647`*^9, 
   3.68425480541017*^9, 3.684287654345264*^9, 3.6848588546205997`*^9, 
   3.685226079929143*^9, 3.685313828480406*^9, 3.6853989789033117`*^9, 
   3.685462367727797*^9, 3.685656106247527*^9, 3.687042883466654*^9, 
   3.687107544906282*^9, 3.687707769748836*^9, 3.688258798650029*^9, 
   3.7069659895226717`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"sh", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6713146954206667`*^9, 3.671314707364852*^9}, {
   3.671381957540551*^9, 3.671382023075316*^9}, {3.67138206790687*^9, 
   3.6713820751465263`*^9}, {3.6713821082744083`*^9, 3.671382127402787*^9}, 
   3.671396178334519*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwUV3c8lu8XllVIqRAqGVEpI0XE+xyjQRRJSCqVJISvQokShcoqEUI2ZZRN
xrFneO352mTvPX9+fz2f67nPue5zzn0+97lu3vvmGg+pqaioXtBRUf3/u1L9
rX9zcxPdxQrYL8iHyf5dPDmSvryJl54eFN+bEi4bxJM7aT67idZzxTf3E5Gy
cpbdK12Dm3jB05VHMzJG1plNYE9e1SZWBMYN/vL8LatDpLE/L91EGrnbJbqN
ibLHH106KJa/iZ766RsnziTL/s14fDQkZRMrt/8Ioz+fJrtHL4Hk8G0TT54y
PKTRkyOrtTlzXd9xEwfHy6J9aYtkA8POGss93sSr2iqKtSUVsjB30+q33iZW
52xUisxVy/ZesHPgUd9EUsbB7+E9tbLvvgZ/9FLcxGy9ulWJ6AbZY8N5vlRn
N7F/3/yO8ZZm2cpzfaEWQpvoYC0vp/OuXdbMjS6++9AmJgZkp37HLtk9nUcz
1PdsYnxTh0b91V7ZFNHLhXm0m5g3VsZWwDUgq/3GtFpsaQODBOZJyteGZFfq
PFpDRjfQ0yb9lhjNmOzf1cNdOgMb+MbJ0i1l94Rs0JHEfpauDRzIvWqazjMl
K2ddP+lQt4EcFudH0z1nZPd+N5iX+ruBHpeeunAMz8r2lc6vTBVvoMJntxWZ
W/OyKVPOVD9wAwsEDc8W/VuQdebkoL+XubVfe6PYda8lWR2FH0ycyRtoqlAh
HaK1Invc5Nye2rgNdPLxC5qWXZP9m613UD5kA+lDviTVSVORggfGeZf9N1B9
/3vqdwbbSOa7Xh9N9N5ArTmIlImgJsmdZRF+7L4Vf8aDbVIrNKS9+qHivC4b
aKRW6Lr4iI7U5you1eqwgRas0j91J+lJKYmFpE+2G/hYoXafyucdJG2aQaVt
ZhvIWOxvYyu+k2QZpcks/mgDP/0x2aGsv4vkplxYe19/A+m0R/0Gb7GQosdO
+Xrf3ECaC9rmUsF7SAWeIbpFGht47ETtp7mlvSSK+O7D8yobeORTns/8E1bS
UqN9n8CFDfy+4cbCvslGEjl4y9Tl7AbWiN97eM6ek6SM5WIZYhto/KIjttTs
AMngvtT80PENPJ7IoxH97hDpFV10Jif/Bga7n9aOKTpM8o9he3X54AbG6jNT
VPfzklJU3iq8ZNvAmc1xWYEHfKTqiRn6uF0bWHhaLlW7lJ9EK0H2ZN62gdPP
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
Y/3d9J9nK+jivstf4u80SSdS9vhrsxXkTZkR8iybISWpzuorGq3gwo5+imXd
LMnwmz658tYKqvcFGTrvWSDlKezf4XVjBW+5dkRqKy2SuEaqQFNtBWem2E3r
PJdI1VIyvzoUVnDH3vf/iWuuko51Tw+GyK7gA7O3P6vr1kiOLjHcDyVX0Din
htH34QZJsonNY/z4Cpp9GNrPO0hFeNn/LU7kX8Fnp/zOydduI0aOOK1bHVrB
WgGriaoyaiL46ZTpBssKdse3CH3ooiWWuKIjChhXsIC/99l2KnpCo+B2hzPt
CmrR/a4PF91O0O+pVNm9tIxJxaHOz5CB0M9441Q/vYwO2y5LXuRlIv7clcr6
OrqM+x5g4n8+OwmzhEghnq5l3P7oq+fTjN1E2Q29+/0ty9jw8KRHRgoLwbe+
NyCmbhlFTrMrWvrtIZpUHBhOlSxjc4pKVIXTPkJsVlJ+HrfWr2xjeOvGSnwI
GH+embmMc4btBoVhbAQxrDskH7+MxqzSUL2yn/Dz2sNDH72Mj6kKb3ESnMTM
2TLtipCt/T5IbRv6xEVEOkuUanxZxuJ1fjp2s0OEUkx5jqf7Mr7eU/nanusw
MVZ+O+Wv8zJSNn32nzfnIcSZnUMvvlhGKnb1fbdu8hFNIlx+TpbLaNu/YpVx
n594oZ7gkWeyjD7aAn6OtkeIPO+ml+fuLGPIwYGdYS2CxINUY0sb7WXM+nl5
dzrPMYK+ecMoRX0rfsq+tgjb48QVrqNaIorLuNYaedvj0UliSiZL1UR2GWvF
kobs14SJL7fVFGMklpGjw7X8YrQo0RZiI8Z3bBlFLZRr3EJPEa8KmI7e5V1G
cddeZvgmTvD2fz8UyLWMRxIrTM6FnSaMjpYxsjMvY/TFD7yzbRIEk7Letuv0
y2jVrFypuOsskWA8tei5uYQxN8WlJq9JEfPxHAMMM0u4ZHd++DWzDOFXE9d+
cXQJVZastQ+7yBKy03J1Tv1LqCh6TvknK0E4nnmM601LKPPiv7yOdDlCUGs9
9Rx5CR9cyvOJ+y5PlNt8irMpX0J3VzsrD28FgiUr0386awlj+5f99oSdJ1I6
rniJpC7hPXHGZo7cC4T2Ro+zScISXq/lej00dJEIlmd8NhCyhA5VKXm/nigT
8g+CjfkCllDHOvrj8fLLRP9b8Xt3vbf8k+R/uUuqEifKdK+2vltC/h/b9ldd
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
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"sh", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             TagBox[#, HoldForm], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.671314707824417*^9, {3.6713819486313877`*^9, 3.671382075998687*^9}, {
   3.6713821113063183`*^9, 3.671382127769058*^9}, 3.671382553823352*^9, 
   3.6713961809110327`*^9, 3.671403719106378*^9, 3.671459955080673*^9, 
   3.671580729851413*^9, 3.682444238025262*^9, 3.6827090125757627`*^9, 
   3.682784950594969*^9, 3.6833933414267397`*^9, 3.683568305888854*^9, 
   3.684091333351253*^9, 3.6840919366234713`*^9, 3.684093225747561*^9, 
   3.684168946664246*^9, 3.6841694805954227`*^9, 3.684254805692814*^9, 
   3.684287654521781*^9, 3.684858854854373*^9, 3.6852260800736837`*^9, 
   3.6853138286382523`*^9, 3.685398979050617*^9, 3.685462367969904*^9, 
   3.685656106400486*^9, 3.687042883658608*^9, 3.687107545097227*^9, 
   3.687707769914524*^9, 3.688258798818006*^9, 3.7069659910696573`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"\[Alpha]H4", "[", 
       RowBox[{
        RowBox[{"R0", "[", "2.61", "]"}], ",", "i", ",", "j"}], "]"}], ",", 
      "9"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "3"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6712048582264357`*^9, 3.671204867458164*^9}, {
  3.671204913602336*^9, 3.671204913825458*^9}, {3.671307558028553*^9, 
  3.671307583754882*^9}, {3.6713076159803753`*^9, 3.671307778104459*^9}, {
  3.6713825817156343`*^9, 3.671382624794696*^9}, {3.671384007454316*^9, 
  3.671384012117981*^9}, {3.671384401680644*^9, 3.671384448727759*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"9.1474983493193953166`9.", "7.8096091727686989259`9.", 
     "6.3959380645833538992`9.", "4.8528197968429962472`9."},
    {"7.7825213315027195193`9.", "6.1468505218922828703`9.", 
     "4.2978439012309719303`9.", "1.9405823940527875404`9."},
    {"6.3100426445727535452`9.", "4.1936499185021629543`9.", 
     "1.5326372153999290315`9.", 
     RowBox[{"-", "3.1411789117614259403`9."}]},
    {"4.6746622313667378634`9.", "1.5884365736604375563`9.", 
     RowBox[{"-", "3.5581505775319501872`9."}], 
     RowBox[{"-", "130.2703134769816415428`9."}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.671307590148778*^9, 3.671307779282363*^9}, {
   3.671382574983006*^9, 3.671382625954376*^9}, {3.671384008599881*^9, 
   3.671384013586852*^9}, 3.671384404308523*^9, {3.67138443595532*^9, 
   3.6713844498541403`*^9}, 3.671403719424569*^9, 3.671459955572918*^9, 
   3.6715807301896563`*^9, 3.682444238401223*^9, 3.682709012915217*^9, 
   3.682784951008113*^9, 3.6833933419205637`*^9, 3.683568306362885*^9, 
   3.684091333754792*^9, 3.6840919369877043`*^9, 3.6840932261711807`*^9, 
   3.684168948018015*^9, 3.684169482056102*^9, 3.684254806394554*^9, 
   3.6842876548723383`*^9, 3.684858855186742*^9, 3.685226080351883*^9, 
   3.685313828999271*^9, 3.685398979357379*^9, 3.685462368360836*^9, 
   3.685656106748076*^9, 3.6870428839424887`*^9, 3.687107545415224*^9, 
   3.687707770185259*^9, 3.688258799108079*^9, 3.706965999572626*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"\[Alpha]D4", "[", 
       RowBox[{
        RowBox[{"R0", "[", "2.61", "]"}], ",", "i", ",", "j"}], "]"}], ",", 
      "9"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "3"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.671307789400017*^9, 3.67130781619948*^9}, {
  3.671382647370105*^9, 3.671382647466069*^9}, {3.671384460455574*^9, 
  3.671384460511286*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"13.2977048253841889647`9.", "11.9856287806206385227`9.", 
     "10.6247662974218179954`9.", "9.191947819719979762`9."},
    {"11.9567598667721100014`9.", "10.4643267875769367947`9.", 
     "8.8764191799871206001`9.", "7.1259264944681657283`9."},
    {"10.5464151358978401873`9.", "8.8100196321294266255`9.", 
     "6.9013153694631004242`9.", "4.6549975808649506348`9."},
    {"9.0446218911606273139`9.", "6.9488440773338613354`9.", 
     "4.5217225339824782537`9.", "1.2902287128308631559`9."}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.671307791971229*^9, 3.671307798196042*^9}, 
   3.671382649216159*^9, 3.671384461700173*^9, 3.671403719609993*^9, 
   3.671459955811261*^9, 3.671580730376498*^9, 3.682444238605584*^9, 
   3.682709013119871*^9, 3.6827849512305717`*^9, 3.6833933421908607`*^9, 
   3.683568306801824*^9, 3.684091333981409*^9, 3.6840919372063503`*^9, 
   3.684093226390031*^9, 3.6841689485168543`*^9, 3.684169482490135*^9, 
   3.684254806749041*^9, 3.684287655040204*^9, 3.6848588553951073`*^9, 
   3.685226080552629*^9, 3.685313829176014*^9, 3.685398979528529*^9, 
   3.68546236858563*^9, 3.685656106916401*^9, 3.687042884111042*^9, 
   3.68710754558123*^9, 3.6877077703515453`*^9, 3.68825879927414*^9, 
   3.706966000565401*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"\[Gamma]H4", "[", 
       RowBox[{
        RowBox[{"R0", "[", "2.61", "]"}], ",", "i", ",", "j"}], "]"}], ",", 
      "9"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "3"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6713081660663643`*^9, 3.67130816675441*^9}, {
  3.6713082047141523`*^9, 3.6713082794486713`*^9}, {3.671311901143364*^9, 
  3.671311901220991*^9}, {3.671382675153713*^9, 3.671382685801922*^9}, {
  3.6713844683436832`*^9, 3.671384469039384*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"6.8172069738156437779`9.", "7.803148949700862147`9.", 
     "8.8536435360384615478`9.", "10.1531462744710161417`9."},
    {"7.8115533755368105062`9.", "9.7974439210150734425`9.", 
     "12.5812143832591019077`9.", "18.2107289187734977531`9."},
    {"9.0019516255686902184`9.", "12.9710094337503001327`9.", 
     "20.3144151092724563057`9.", "48.7263585458115073834`9."},
    {"10.6003142103448606548`9.", "20.1066390125565739311`9.", 
     "52.8929997733106986857`9.", "17044.0708947578168590553`9."}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.671308171209247*^9, {3.671308206648365*^9, 3.671308280702745*^9}, 
   3.671311902672388*^9, {3.6713826768607283`*^9, 3.671382687187685*^9}, 
   3.671384472193774*^9, 3.6714037204246492`*^9, 3.671459956244822*^9, 
   3.6715807308066807`*^9, 3.68244423890407*^9, 3.682709013416482*^9, 
   3.682784951610284*^9, 3.683393342690723*^9, 3.683568307169207*^9, 
   3.684091334441382*^9, 3.6840919374980173`*^9, 3.6840932268145533`*^9, 
   3.684168949683442*^9, 3.6841694832686243`*^9, 3.684254807472253*^9, 
   3.684287655348055*^9, 3.684858855690468*^9, 3.6852260808131742`*^9, 
   3.685313829475045*^9, 3.685398979791338*^9, 3.685462368929017*^9, 
   3.6856561072080517`*^9, 3.687042884358568*^9, 3.6871075458835278`*^9, 
   3.687707770591402*^9, 3.688258799521542*^9, 3.70696600153126*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"\[Gamma]D4", "[", 
       RowBox[{
        RowBox[{"R0", "[", "2.61", "]"}], ",", "i", ",", "j"}], "]"}], ",", 
      "9"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "3"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{3.671384485190968*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"9.6366453724293705818`9.", "10.5865011465008649338`9.", 
     "11.566879783875762655`9.", "12.6540585640980083326`9."},
    {"10.5859799260664999565`9.", "12.1160700585391509776`9.", 
     "13.9000210824775081164`9.", "16.2895038295797931482`9."},
    {"11.6509656798159966229`9.", "14.0644562127134591378`9.", 
     "17.1970455010223091108`9.", "22.2195136641556167945`9."},
    {"12.911242497255770445`9.", "16.8608725510861461316`9.", 
     "22.7895628116409234565`9.", "35.4758353077826882327`9."}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.671384486836285*^9, 3.6714037206030083`*^9, 
  3.671459956500622*^9, 3.671580731041459*^9, 3.682444239171682*^9, 
  3.6827090136676483`*^9, 3.682784951831958*^9, 3.6833933428959303`*^9, 
  3.683568307479978*^9, 3.684091334659664*^9, 3.684091937772847*^9, 
  3.684093227032906*^9, 3.684168950216812*^9, 3.6841694837041492`*^9, 
  3.684254807901119*^9, 3.684287655518066*^9, 3.684858855942045*^9, 
  3.685226081011456*^9, 3.6853138296515427`*^9, 3.6853989799707537`*^9, 
  3.685462369253313*^9, 3.6856561073785458`*^9, 3.687042884528573*^9, 
  3.687107546050211*^9, 3.687707770759506*^9, 3.688258799688043*^9, 
  3.70696600240422*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quality of expansions for harmonic overlaps:", "Subsection",
 CellChangeTimes->{{3.636468787141094*^9, 3.63646880137293*^9}, 
   3.671152059970976*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SHexp1", "[", 
    RowBox[{"R_", ",", "Req_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"SH", "[", 
     RowBox[{
      RowBox[{"R0", "[", "Req", "]"}], ",", "i", ",", "j"}], "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"\[Alpha]H4", "[", 
        RowBox[{
         RowBox[{"R0", "[", "Req", "]"}], ",", "i", ",", "j"}], "]"}]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"R0", "[", "R", "]"}], "-", 
        RowBox[{"R0", "[", "Req", "]"}]}], ")"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SHexp2", "[", 
    RowBox[{"R_", ",", "Req_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"SH", "[", 
     RowBox[{
      RowBox[{"R0", "[", "Req", "]"}], ",", "i", ",", "j"}], "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\[Alpha]H4", "[", 
         RowBox[{
          RowBox[{"R0", "[", "Req", "]"}], ",", "i", ",", "j"}], "]"}]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"R0", "[", "R", "]"}], "-", 
         RowBox[{"R0", "[", "Req", "]"}]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"\[Gamma]H4", "[", 
        RowBox[{
         RowBox[{"R0", "[", "Req", "]"}], ",", "i", ",", "j"}], "]"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R0", "[", "R", "]"}], "-", 
          RowBox[{"R0", "[", "Req", "]"}]}], ")"}], "2"]}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.636468904575644*^9, 3.636469105889884*^9}, {
  3.636469140105936*^9, 3.636469208151793*^9}, {3.636469705362031*^9, 
  3.636469724759645*^9}, {3.636470046484045*^9, 3.63647007250211*^9}, {
  3.671382724441372*^9, 3.671382740920842*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SDexp1", "[", 
    RowBox[{"R_", ",", "Req_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"SD", "[", 
     RowBox[{
      RowBox[{"R0", "[", "Req", "]"}], ",", "i", ",", "j"}], "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"\[Alpha]D4", "[", 
        RowBox[{
         RowBox[{"R0", "[", "Req", "]"}], ",", "i", ",", "j"}], "]"}]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"R0", "[", "R", "]"}], "-", 
        RowBox[{"R0", "[", "Req", "]"}]}], ")"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SDexp2", "[", 
    RowBox[{"R_", ",", "Req_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"SD", "[", 
     RowBox[{
      RowBox[{"R0", "[", "Req", "]"}], ",", "i", ",", "j"}], "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\[Alpha]D4", "[", 
         RowBox[{
          RowBox[{"R0", "[", "Req", "]"}], ",", "i", ",", "j"}], "]"}]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"R0", "[", "R", "]"}], "-", 
         RowBox[{"R0", "[", "Req", "]"}]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"\[Gamma]D4", "[", 
        RowBox[{
         RowBox[{"R0", "[", "Req", "]"}], ",", "i", ",", "j"}], "]"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"R0", "[", "R", "]"}], "-", 
          RowBox[{"R0", "[", "Req", "]"}]}], ")"}], "2"]}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.636469790295001*^9, 3.636469819030362*^9}, {
  3.63647008210679*^9, 3.6364701011333523`*^9}, {3.671382729441328*^9, 
  3.6713827449927673`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RR", "=", "2.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SH", "[", 
          RowBox[{
           RowBox[{"R0", "[", "R", "]"}], ",", "1", ",", "3"}], "]"}], ",", 
         RowBox[{"SHexp1", "[", 
          RowBox[{"R", ",", "RR", ",", "1", ",", "3"}], "]"}], ",", 
         RowBox[{"SHexp2", "[", 
          RowBox[{"R", ",", "RR", ",", "1", ",", "3"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "2.25", ",", "2.9"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Red", ",", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(R\), \(0\)]\)(\[Angstrom])\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(S\), \(00\)]\)(H)\>\""}], "}"}]}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SD", "[", 
          RowBox[{
           RowBox[{"R0", "[", "R", "]"}], ",", "1", ",", "3"}], "]"}], ",", 
         RowBox[{"SDexp1", "[", 
          RowBox[{"R", ",", "RR", ",", "1", ",", "3"}], "]"}], ",", 
         RowBox[{"SDexp2", "[", 
          RowBox[{"R", ",", "RR", ",", "1", ",", "3"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "2.25", ",", "2.9"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Red", ",", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Red", ",", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(R\), \(0\)]\)(\[Angstrom])\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(S\), \(13\)]\)(D)\>\""}], "}"}]}]}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6364688093783503`*^9, 3.6364688915804234`*^9}, {
  3.636469279254157*^9, 3.6364693616072598`*^9}, {3.636469392184462*^9, 
  3.636469440795722*^9}, {3.636469474211975*^9, 3.636469474283354*^9}, {
  3.636469511203309*^9, 3.636469543251528*^9}, {3.6364696712543507`*^9, 
  3.636469674924823*^9}, {3.636469749912928*^9, 3.636469767078908*^9}, {
  3.636469856150156*^9, 3.636469932749346*^9}, {3.636470112729844*^9, 
  3.636470124401341*^9}, {3.636822437680938*^9, 3.636822438940214*^9}, {
  3.636825087127686*^9, 3.6368251952400427`*^9}, {3.67138277013687*^9, 
  3.671382805111783*^9}, {3.671382855256173*^9, 3.671382856591576*^9}, {
  3.67138294472647*^9, 3.671382962318047*^9}, {3.671383033862626*^9, 
  3.671383034324994*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvs",
   "\"NIntegrate failed to converge near the apparently non-integrable \
singularity at \\!\\(\\*RowBox[{\\\"x$151194\\\"}]\\) = \\!\\(\\*RowBox[{\\\"\
\[Infinity]\\\"}]\\).\"",2,124,1,15307504407466671651,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.684287655771708*^9, 3.684858856157598*^9, 
  3.685226081203491*^9, 3.6853138298914557`*^9, 3.685398980206905*^9, 
  3.685462369505213*^9, 3.685656107637059*^9, 3.6870428847645683`*^9, 
  3.6871075462786703`*^9, 3.68770777097999*^9, 3.688258799928563*^9, 
  3.7069660349018497`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvs",
   "\"NIntegrate failed to converge near the apparently non-integrable \
singularity at \\!\\(\\*RowBox[{\\\"x$151194\\\"}]\\) = \\!\\(\\*RowBox[{\\\"\
\[Infinity]\\\"}]\\).\"",2,124,2,15307504407466671651,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.684287655771708*^9, 3.684858856157598*^9, 
  3.685226081203491*^9, 3.6853138298914557`*^9, 3.685398980206905*^9, 
  3.685462369505213*^9, 3.685656107637059*^9, 3.6870428847645683`*^9, 
  3.6871075462786703`*^9, 3.68770777097999*^9, 3.688258799928563*^9, 
  3.706966034929316*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvs",
   "\"NIntegrate failed to converge near the apparently non-integrable \
singularity at \\!\\(\\*RowBox[{\\\"x$151194\\\"}]\\) = \\!\\(\\*RowBox[{\\\"\
\[Infinity]\\\"}]\\).\"",2,124,3,15307504407466671651,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.684287655771708*^9, 3.684858856157598*^9, 
  3.685226081203491*^9, 3.6853138298914557`*^9, 3.685398980206905*^9, 
  3.685462369505213*^9, 3.685656107637059*^9, 3.6870428847645683`*^9, 
  3.6871075462786703`*^9, 3.68770777097999*^9, 3.688258799928563*^9, 
  3.706966034987914*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvs\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,124,4,15307504407466671651,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.684287655771708*^9, 3.684858856157598*^9, 
  3.685226081203491*^9, 3.6853138298914557`*^9, 3.685398980206905*^9, 
  3.685462369505213*^9, 3.685656107637059*^9, 3.6870428847645683`*^9, 
  3.6871075462786703`*^9, 3.68770777097999*^9, 3.688258799928563*^9, 
  3.706966035003212*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{}, {}, 
        {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1: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
Ff0PCh3Hmw==
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAA3srHAQAAAkBEIarer5WiP4ngiYZo
AAJAtfnntmmeoj809ksL0QACQONh/acnp6I/iSHQFKIBAkA/m2Hcr7iiPzR4
2CdEAwJAvnMlxPHboj+JJelNiAYCQMlTRUM9I6M/NIAKmhANAkAfjo/NALWj
P4s1TTIhGgJABm7FlqvlpD8bPWILdTYCQEtBTHDxuqc/Y7gjU+hQAkCh5WuM
qriqP3EKiMfWagJAzvGLNP0Erj9j+Xvk94YCQDOPwxiOB7E/DVwccDihAkBX
eDcSsiizP5pbTKSrvQJAvKjsTrTEtT/tMR8FmtkCQHm3qJX3rLg/+Hue1Kfz
AkCI6oW9jby7P+dirUzoDwNAE8Gq8HV8vz+OvWgzSCoDQP9pkQevuME/++7G
RiNEA0BO+wHU5ubDP0u9tAIxYANAIg7k+IaSxj9T/04tXnoDQDuQCw/lYsk/
Pt54AL6WA0A+/6+JhdXMP/CTRQCZsgNAYA0UaEJW0D9avb5uk8wDQAFl1iRz
W9I/p4PHhcDoA0CLwPfx8dTUP6y9fAsNAwRATa18KBBx1z+UlME5jB8EQJ3q
qJjTo9o/Q0KplIY7BEALHDGxRTTeP6pjPV6gVQRAKibuX5/64D/0IWHQ7HEE
QP1YG7JER+M/9lMxsViMBEAPHWBinrTlP75cpL4/pgRAbBmTOKVh6D9qAqd0
WcIEQHkFkjGgqOs/zRtWmZLcBECo/q0k/RzvPxTSlGb++ARA07LfcFCs8T8h
X3Zg5RQFQEZ0T8vkB/Q/TJF8WdYoBUBIVpfCtu71PwxJDN0=
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         Dashing[{Small, Small}], LineBox[CompressedData["
1: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
          "]]}}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{2.25, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(S\\), \\(00\\)]\\)(H)\"", 
          TraditionalForm], None}, {
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)(\[Angstrom])\"", 
          TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{2.25, 2.9}, {-0.5700225661825346, 1.3707797623841476`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
     GraphicsBox[{{{}, {}, 
        {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1: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
oHq7Hr/AjQx4dab4Tb8frudVv6ebDjOAPmJ669B5AmWNDEas0mHAG/RXrwD7
VL/wgLYhA36sM63z9yfQ8VnmndtWDFjXsHRNKBDny7/fp8KLAWb/DGXtLhJo
p3tftXkSA3ruZpb1YnsWBWrsucUAXcMPMhrBBOLboBm1kMkAzexwaYkQAv1z
QMfsCxkgf6h256dLBLK+sGIc0MCAsjdsRTahBIrRSt07/IgBUrEGki+xQxx1
lyWfMGDr2LREVRg+f0kHrTM7GMAXuGlbQDiBtrZc+Nk7yoDYLa533mPnuJGN
DUwGUNtrxKwj8P5p/b2VyGLA8nr9rapXCLTrv+AmwQ8M+FwTKkKJxPWv/9b6
zC8GdHx9uyEhmkDO+0cH7PiZoJUqn/oPm7vxiqWNABOeqF0SPBdDoKY1Tx11
NjChIW7DevNYAtUmOkkubmbCXWmdtcJxBPq5nqlUKcmEbf03E69jR7PdaFTa
xYTsC2/W/MW2HQ9YvC/DhJSOYD5WPIHULbTpYfJMuOJasfruDQLFnjk26a3M
hBXepdiNiQSae9eiGHWICRfrjnHHYBfx/w5LVGOCL8ckl9d/+Hms1zLBGkz4
Wiob/Rrbw+h5us1hJribXeQ0SiIQ/wxdfM8RJjjkCZCKyQQ6cF31dok2E5g6
DpH52FYJf/JNdZlg9b2MQzCFQGfuNE9+0WOCETpKLGA/HI/euWTIBPXxILbm
VPw+xcKGc+ZMEFwb5CV7i0BsPucaiyyYMHM4cDQL+1Lenaq+40xIL/GvCk4j
0MBqj+wlKyb4MM+LfMaWrNiT99eaCUfXnI8+kU6gPRxVD3+cYMLceV8H5Qyc
j7qwI/W2TOgqOtddjH3eeefzqyeZkEf3URLKxOsxUg8+aseEIF6fgmvYU+2h
7kt2/5/vWf7f2CIBxen59kyQ9DsT4pqFf3/isgA4MGG50PvDEHZXQ9/4S+yB
US/zI9kEesDtThg7MuHeaq8ntdhfl0Vj2rDD1T13S+QQ6Jd1Z+AeJ7w/5zzS
krHf/dMZicXeU+DOQdwmUPbQlUo6NnXEzccXO6PZnmuLM97fVW7MSeziuK6P
5tg1qqe1TXIJxDPfaBOGHXPWtfYJttfVba7Zzv/Pj4uY/B08/yT2tZXYB4dO
xd3GPrPX6lQtNh/XqQW+PALJKux2K8d+p+J8KhQ74881iQzsJm+nvi/Y7Dcv
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
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1:eJwVyXs0lAkcxvE577zzvislZezSqs6gUmqRbMj4/WS6qoRTBiWUSy7VnDPT
ssi2otNSe44sazpdbHZe12qsqGSaoqwy1j1mNQilLZmwLrnt7B/P+Z7PeXgh
J71DCRaL5a7b/z0unvXa+iOBbsW3pQ8XfIKjU/H9E6kEeo78qeC2aGHRIbNT
jrkEtlp8d7302DBIA/bkFVUR6LhuGS95xRAM2a3kSDsJjBoMjprVfw+T8dda
mVECEwviK7+Fd/A2pGTP4GI2xnn5idaceAuXqiLsd65jo/P286tAPQDTH59t
txCwkdU58KA0oh88qsoIuyA2Bo/92ukx+hp85vdtCPyejR41m17M3OoFV00s
S5HFxgqTgnN94T2gvbyNlVOq+6XJjmnxGvCvUpy4XM9Gsb5PuFzSBUxybYpy
kI0PnjosaohUQ3FVgv4iNokmjprdRXkdkJn52Cl9JYkFetQNrbod3LcWZKZu
IbEp0zdA49QGhUf5gTcOkCht5lnl/tUCY7zgxg8iEnvFevErQpph3MdOLkwn
cW2gzLnYsgkUh/IUICNRwr+d7kY0QiTBiP2ekDg2qlpWe18Fqq8P5mR0kThj
e6/a5uEL4DZnhs1Nkjj06ZFU+KAOeEdOBw1wORhku7PM6E0tvDlC1r3/hoNd
poq4QM9ncGmWp7b04GBPmMqhsawGPhp88EsM5SCW4Wv+/mownhBSXkkcXN2k
Xjyj9wRWJhwI8L3CQXZoe8I2pRJ6xXMrEu9ykMsP39jo/ghSF2xOa2vioPCs
u6UhUQV9RmZhez9wMFJharZ7YSXQYzdjkKKw9qrqnx1u98FAVLk8zJxCc+2r
g5WiClAFJ7kUuVA4EC4u4HXfhZPDzWwLPwovTp0u37GrDF761E0YSyj02Ju3
UPKyFCaso/2tfqZQ4LaW65Ylh+kb10JjiijcQkySpt53oOJCYnfTUwo3PRdN
8kS3wGnXfIq8m8KUjw6WMzHFcO13w7bqaQqtvdV3zoUWQqWkIeNfYxrnouWm
8bn5kPpu54XIL2nsEQsHNTn5sP9wdVK3zlmiIcNtGfnQL7gXXfcVjUHSqWiT
5Hww4P62/aopjeUxXi5/H8uHkFLJZ8FyGnM7TmU1WuXDF8NmIZmWNBZXXt8s
KWWgOSRbqLeKRkEQq8e8iIGr7Us8z+gMdxNfNN9kYKOCcolYTaNkhDju9AsD
ARe1xi5WNLb6/1HIi2XglnVNXZ81jd2h/JLDrgzEXndVCtfTOOBObLLZzIC7
0f1ylc6Cxw0jhC0DHZ9LblZsoDFKpTSW8xggnmcnptnQuPZ4/6s1HAbq+UvF
LFsa95HKJfpzMsiWp0dKdF5qsSFWOy6D9TlnfY/Y0WiuIdWPB2UwvnBmb6vO
HXHc1pJeGSh/OC3YtZHGvuz52StqGfw0pnVW6PyWb+qb3iKDAxFRdvb2NKpl
ZZoz9TL4DwfM4Ac=
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         Dashing[{Small, Small}], LineBox[CompressedData["
1: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
          "]]}}, {}, {}},
      
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{2.25, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(S\\), \\(13\\)]\\)(D)\"", 
          TraditionalForm], None}, {
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)(\[Angstrom])\"", 
          TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{2.25, 2.9}, {-0.548080091075914, 1.065121273272567}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {576., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->CompressedData["
1:eJwV0FsowwEUBvA/ScaDS0iuuTSbjBSRJo5CwtTCMkNolNswt00pLZ4k15oI
y+Yyy0x4cSlPbhkyTBR5IQdFkYcl5/9w+vU9fH11wqsVYrkTwzCJdOv8fqFL
AEIw2OrNZOZmXdoaebgXMmshrcUX4/pgBK5cNF8fiXCpq/QNjEK42TdkF5CP
GdfNEtJt+cDIiUYI85q2yEj7SLn5gZwosX0I+QhVk4qxIlLrduYxnIgQ2Pj5
rCWruFbeNjn4qotrLUWoVS5928n8q5ovnhRhCxpfYsihG4tJQKbmdsmnyJK+
0AZWWV5ID6veXdnPurOdpTOQNdFq3302v4s9HGQEo+ndUCAMmOcOkloQxpt9
7qWkKHb5TdNKLsTIbklVmXXX3ka9Zz7nlly99jeytpzqDX+k2c/0wvq7qRrl
KRE+ZMfaFLLJZOwrbEd4umPOnTvon0OaJQHJWUwVSkiHJDmhkxwNDzqykRVB
OW+qbtpVY+8k+ZPuPbanQvC0rehO1AjxGQJX9QzCPw0w0dM=
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RR", "=", "2.7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SH", "[", 
          RowBox[{
           RowBox[{"R0", "[", "R", "]"}], ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"SHexp1", "[", 
          RowBox[{"R", ",", "RR", ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"SHexp2", "[", 
          RowBox[{"R", ",", "RR", ",", "0", ",", "1"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "2.5", ",", "2.8"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Red", ",", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(R\), \(0\)]\)(\[Angstrom])\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(S\), \(01\)]\)(H)\>\""}], "}"}]}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SD", "[", 
          RowBox[{
           RowBox[{"R0", "[", "R", "]"}], ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"SDexp1", "[", 
          RowBox[{"R", ",", "RR", ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"SDexp2", "[", 
          RowBox[{"R", ",", "RR", ",", "0", ",", "1"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "2.5", ",", "2.8"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Red", ",", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(R\), \(0\)]\)(\[Angstrom])\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(S\), \(01\)]\)(D)\>\""}], "}"}]}]}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.636822259540052*^9, 3.636822266862986*^9}, {
  3.636822444552499*^9, 3.636822445732162*^9}, {3.636825219411996*^9, 
  3.636825245215143*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvs",
   "\"NIntegrate failed to converge near the apparently non-integrable \
singularity at \\!\\(\\*RowBox[{\\\"x$256867\\\"}]\\) = \\!\\(\\*RowBox[{\\\"\
\[Infinity]\\\"}]\\).\"",2,126,5,15307504407466671651,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.68428768648639*^9, 3.684858893587264*^9, 
  3.685226112169738*^9, 3.685313860274066*^9, 3.685399010007112*^9, 
  3.685462409953176*^9, 3.685656137018045*^9, 3.687042914380019*^9, 
  3.687107575536685*^9, 3.687707800692758*^9, 3.6882588295156*^9, 
  3.706966065586568*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvs",
   "\"NIntegrate failed to converge near the apparently non-integrable \
singularity at \\!\\(\\*RowBox[{\\\"x$256867\\\"}]\\) = \\!\\(\\*RowBox[{\\\"\
\[Infinity]\\\"}]\\).\"",2,126,6,15307504407466671651,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.68428768648639*^9, 3.684858893587264*^9, 
  3.685226112169738*^9, 3.685313860274066*^9, 3.685399010007112*^9, 
  3.685462409953176*^9, 3.685656137018045*^9, 3.687042914380019*^9, 
  3.687107575536685*^9, 3.687707800692758*^9, 3.6882588295156*^9, 
  3.706966065648102*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvs",
   "\"NIntegrate failed to converge near the apparently non-integrable \
singularity at \\!\\(\\*RowBox[{\\\"x$256867\\\"}]\\) = \\!\\(\\*RowBox[{\\\"\
\[Infinity]\\\"}]\\).\"",2,126,7,15307504407466671651,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.68428768648639*^9, 3.684858893587264*^9, 
  3.685226112169738*^9, 3.685313860274066*^9, 3.685399010007112*^9, 
  3.685462409953176*^9, 3.685656137018045*^9, 3.687042914380019*^9, 
  3.687107575536685*^9, 3.687707800692758*^9, 3.6882588295156*^9, 
  3.7069660656617823`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvs\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,126,8,15307504407466671651,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.68428768648639*^9, 3.684858893587264*^9, 
  3.685226112169738*^9, 3.685313860274066*^9, 3.685399010007112*^9, 
  3.685462409953176*^9, 3.685656137018045*^9, 3.687042914380019*^9, 
  3.687107575536685*^9, 3.687707800692758*^9, 3.6882588295156*^9, 
  3.7069660656754723`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{}, {}, 
        {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1:eJwVz3881HccB3BXn++3qAelTZd+ycjlR07Fdlvd+63dVKLZ3XXkVygXLpFa
6TY/auioaSOqi3WunH4gl+ZXLBdWWaJGPJak/AgXmZh+7JF998f7/X48/3g/
3u/XspAoYeg0AwMDT6b+n3kBD5lOsJ9j4vjKVAd8ZPO5jEcqO2Q+xjrotAz8
LohxzvBY5i1DHbAHBidqGacpH+WfMdBBegxLf5hFsMg05b5wpBbkR7lt06cT
5FpVWP19txaE2vRLM2iCYSaFsieHa4FQm4UmswnWy/e87h64CS3jlNhyAcEx
anRYkFMDjWFtCm9rgqMqD7MTJ2+Ar/pO1NdOBNfc64+QXKsEkdUHejOf4FrX
yLyh+nKQ2258EOZO8F84CtJ5ZWB0qHVzmjfB5UN5QePbrgP3x6TYPTuZf9c4
pTnUX4Mk600d+6MJmu23TPQJ1oIr7TUQH0dQvSvc8ezYVbCTyeyupBI89T15
qIsvgsKsyxbKLIKhl9JbX/OvQPZM+9+Pqwn6LznQn/zmIhRN6X7JKya4OnL6
45YPGnAApU3VDeb+/KX6XFY+CATZIVl3CErH1XEfVp0HRZOmJaOV4LQmfs2I
Og+cz70dyXxGUJVg5SmYq4I5E0FYPkwworcr8FpkLogzjdZ3vSP4PCdIa1+p
hJWT7RO3Z1DYkeXtIN14GlyeVnb+OY/CBLdbaRmO2VBg0rWvx4JCZ+p1dTD7
JHxVb8b/2IHCAevGq1WeGSDn76sy5FGY43cpf+jqT8Bmmb5guVGoXn5QlcdJ
h54NDW6LhBRqiKv8aPgxmN9eJfl8O4WxBlvWOmkV8Nyulb1wN4WtmoVu5MsU
+ItMM14SS6Evx0bt55QEXyyPKbVKpjBw2Q8v9dZHoPGPf455/kzhoYCk3bvD
E+GVyzkzXi6FGxWf9KeVx0HcUOo3nMsUhr430JoWyIFnmXqTV8bkSxdyeoxj
IVDd+GRLHYXs5Fn3Eo58CyUaC8eUZgq7OxvvxfvtgzPRylWJj5n9+45nV+3d
C/ojkv64AQoT5ZT1M4soiFhg05Q7zuSPyrY1npSB8A1vp45FY1J1qI17dxg8
yIkuKjCmsVfhztPZSCGu4caKEnMaTXq0i8u7dkCGyyZJtQ2NypKEyYALwdBm
p/91aDWNz2aJSnuPb4fi/pLbj4FGrW2BPBP9YXSwIrXFg0ZNxqfLzhltg6C9
bfEvfGgMaa5ZkeUngd9k0fLF22jMsPYh67wksFA664CIcZ1zqvuQQAKPfF0j
bzJ+1Mmes3WlBDwERX6nfGlctIRaJ2NJgDc/+bMN/jSyVX2Gpy9uBdOaNWOa
7TR65rdPPX8nhujy5uFOxm3r7atWj4qhSRsxaBpEo2ruyqzUPjEoNKrueMZ3
NplfELSIYerE7GZJMI0Rya/6JvPF8DKk9wq9g0aPCP8pL6EY3AMSCtYyfl/c
cH1sgxgKvM3PxzCOLrsrPbNODCEeXsouxuKZNeUTHDF0OFcrynbSuKsQmgen
RODC9U56ybiuZJdd6YQIMm3HEixDmfv5B2MO60WwZSnnYDrjkqcpFfbtIihc
UBdTzzjG3KrUsEkERh8F7nnHuIfbd0J/SwRhxm/DuVIaA0VnPR5WiKBh5slQ
KeMnmewXNcUi+A+aCBI4
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1:eJwV0Hk8lHkcB3Cj3/NUFLtdrg7NSyVSumQ6fL90KHTJ65lJGbOakdtgK9FI
vdBIKVdJh6I12zU70ppcSUZE1rBEy7a2Q460u220E9U+/fH5fF7vfz+z/cI9
Jfp6enqb2XzdKz4tbBM8macuG+vVCE5o6mTP+os2Z5zjxkbo4gpjRaxbp/BM
Qlc3gmlv39B91jW6TxGvrBohNZIzcIRDMIjr0Gs0/Bhijtm3jRlDcDfHfeHa
c4/BszD12lia4EiIo57ViwYglLun8QSCiS7/zhEl1IP2PeXFNSNoUTo9qaem
FuoD2uT8OQRHNWqXBwdqwDuvLnzrYoKHhsSL60KqYYfVZ9rdieCU8zvuZ4dW
QYzNxuYAN4L3VuWFTY2vBIODre7H+QSHqRUpC1eWg/3JhOgwMcFwWYByq6AE
EuZs6vheStBpzCPv6W+KwZne1hsnI7ihc5PB3tQ7YBscbHsjmeAJdV1kfNpt
uJl13TIni2D/hP6hwF9UcGbcgocn8giq1Hvq5TZKuPWl6tIVJcFltYq1xutv
gB3kzCstIxgc3ctNiPgR1q0745dVR5A8Fe9b8v4HkDcWaNNbCX5okZvv78qH
5bm6txl/ElxtWmio016Bb4ZEqB4kuHT3ya0WZpfBK8PA5dlH9m8hRxrdcQEW
fmgfqh1LYffpvYo1r86Bwx8lXb9OpvCOurzjUNBZUBg/i3phSaG777sn1Z8z
Yb1mmtNUOwoPNouZWcPpEOMUVTqeR2HMI+fjhdZpYMqZ9JqzgcLQMnNv64ZU
eOFas2G6J4U9doUKXWsKmLSXMit9Kfyc9Nzc5x85PLdtNbUIobCl+7LdJ0kS
/Eb0jWZGU3h34NvQaJcEWDU3ssgqkcLXPg+b822PQn3DcMrmNAp9TLKPrA+K
h78ccqfxLlLYMPL4aptaBrL+5O3W1yms1lSIjt2MAR43uZJXTKG9ThiROSMa
hHn1v2+pprCo6/go/9I+UBVYLkpqolBiZSjhJ0bBOWnOkvhOCpWxdodjr0XA
wFGmR9ZLoW9YRlmzKhyCzOY1XnxP4cQHc5t4+SHg+R9PXMWhsVqtekmuBULz
BekthRGNS7fHSDvG7wVZTdl8lTmN+m7xg+o2MaQ7bGLK59HoVeK6ql3pB222
Az/3L6VxRHhbRbpFoOxR1XYCjZqgopGzKUL4u+9ustaDxtr5r9K9AneBKKIt
7rWAxpJMy3bLWgHcC5bGzNhJY7bZPslwmQAs/A3372Cdpt87olUJ4Im3c2gl
68mzTR2zcgTgse7WrrPeNG7MFit3hgmAZ5Lo6Lqbxtyr5he00wQwqWLZuwJf
GjvJ+FH/YD5I1U2DXax/ijVc81TEh8bCoL5JIhrfLjsF2xg+yAsud8ex3vxI
Hu/hzIcvpyY0Md/R6KqLK5aZ8OGN38sb9B4aHdVSkyoNA24+hxWrWRt0REbE
lTKg4JvnR7LOqpwZjCoG/Dy25Txj7bdi1vKW8wx0LC+XF4tpHMop6FsQxYCD
PT/hDetL1q20cSADGTbvDnMlNC46aF40JGRgyyzrA6msO06XqrRuDNw0q47U
sLaBkU8aZMBgijDsI+t+GbelwoGBACNdoL0/jRON59qWLWCgZlymxJ/1YO4o
XcFl4H/gMxM1
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVzH9YywkcB/DS9/uVdOPhSnIXRtIv1w7VxD6fEqGktrWR1JS6EvqJWkrX
EyqE9UNS1jibJE8t/bh0tBNpu65yrbglukip5Jocnse57/3xfr+f1z/vxaEx
3PBpBgYGW+n8v7Jdj+gmsOSDhX6HXgUctOA40WZcz+lkvVFBHzM4RUT796K2
1yYjKrAYHplqpt2rfNTd3K+C3HjD0R8NCdRZzkx2U6tAfMJJa2RE/yUMd0XL
VMCtzi2fThE4t+isZ72fCgjSmzvLlMBB/SXWuLIZOt+RfOZ8Ar2VHsqBJ3dA
HanNEloTaGVyJjdR2gSBlx/GbGMR2LPSIjlJ0gi8pf9S3hwC1/j/WnQktQHE
dpu6IrcQWFFm3P7TjTowSe72zhESeOcD2ZzdcwucTmcmHdhD4GqpWTnHtgYy
rTc/Towl0E7j6z79VjW4U37DaakEXtUcFoW4VYF9dLR9RTaBs8adY11HKuFG
wfVFxQUErk+03pCZXwGFxg4PTl0mcN3o6QfJbuVQ+UV1SXaTwHS5bKZspQIc
odim8TaBLWrOXlO7q+DpWRha8JDAdyVxuc3+VyCrXd4p6SZwaiJKk94og9XS
j2/yBgh8HtzkVsUsg9lTIqwfJ/DiEa3phROlwM8z8ej/RKDRbv46qaYYVvzT
O9U6nURpm9+IMKAInJ/93PfHXBJlGeukFa6FoJjVnzC4iMSLXtv6oqzyYUOL
OcfMkUSeeMnoLX8JiDkJjTPYJGrNW9MOKc+CheGcV4YbSTw4wbS7aJ8Lg173
N37DJXGt7KqBS/RJmNfbKFgTQmID94AZocyCv+y7LRbsI7Hv2oz3u9Yfhz+J
aQyrJBKdC9e8T2Flgtuy+Jqlx0h8OTn3xKR1Bqg1709uPUdiVN6qR/ui0mHC
WWrOLiXx7kJdT059KqS+zvZffp1EWDxR9JVCDGxm9l12HYnB9qZJGkYSBF9W
P/W9R2JgbUo6J+MgVMkXfXe8g0QXdQfLYGcCXIgt/j5dR2LM2G+GYbFxMJoh
GEodJrFdNiT5wSoG9s63aS99R+IKy6Ptcn00cD+w96gMKdRtWR7aoouErpLY
SgWDwtvKxK0MZgSk3r9tW2VJYfipisKB3jCQOG8WNNlQOG3Zi7XeJbtBaz9a
+3olhduWevCSxSFwc6iqVQcUfn7KXmHkEARvRxqyO30ojDfsqO7XbwdRnDbt
1XYKHRQfP+k9BHAnOlb87Q4Ki/1an+S5CGBBxMxDPNpxIp0N20EAPYHu++/S
bmvwMs43E4CPZ+XO84EUHvdJPZ8zHADsecdcvYIovPZ3Z1/SmQCY88uqSXkI
hSx9uXTzAB9i6zvG+2h/FtzslfTwob1678gcEYWDZptWDWj4kCUve55Gu3b2
Eu7pOj58OWPaIdhN4bK8z8+Zp/gwFvqiggqj/87t57q78mHLrqOKtbR9X9xr
0TnyQSG0vBJPu6aw1iVlCR9CffyK+2kPPTlp3sbgw+PVTVl1eyi8UGkpLnvJ
A2cnYeYYbceCoJpQHQ/y7CaPMsMp1AZIdLZdPPBduPxwLm210PztgyYe3Jh/
L76Fdqkn+bhEyQOTr4MPfKL9TGQrP3yNB5GMj1FOERRWsQK2Cy/x4L5xfngE
7bAFQWNu+Tz4D1IoEwM=
          "]]}}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{2.5, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(S\\), \\(01\\)]\\)(H)\"", 
          TraditionalForm], None}, {
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)(\[Angstrom])\"", 
          TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{2.5, 2.8}, {0., 0.22912689844021764`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
     GraphicsBox[{{{}, {}, 
        {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1:eJwVzX881HccB3DO9/utqcdp13K6kiKTHzVK6so+77dNzBHn8nDtskiYzo9u
ak3X/MiUox+MSd2GQzuPLqRfiLbWUhoJw/qlbv14ENHKQ5k7se/+eD1ej+cf
r8drSeROSTTHxMTEj83//WyA59LKodCQc7qmKkQDyizXXjMzCve07dd6B2hA
cvboqRkMhenGa3vDm0qBov0lFrMpLH08q9x7Tgl0jtEhtvMpjIyXOXVfUENr
bK9Kak9hTz5p+1JfBLLymzuD3Chc95p6c09WCJuWTjH+hML4eUVHg57lg9Lp
s65YEYWK/uJ0s+48MN/b458jpTCuUXCwRHMEXI9kJidGUdg6KL+tEeRApr3f
3d0KCle4aYJSHLPAixE/T01h9xF1LfbiTHCOi3M+nc3+pXXcqHy9H6oKdYvV
hRT+mHBPlXg5DY7NdLlxuJzC6gZfGG/cB9XTV0vKaigUZ+2eHSBPhuWgdmhs
ovBCHercPb8Gb+9jkYU3KXxVPFIy/G0SqNq1nfk9FCp5y3aohQpYXTrxsuAx
hZ6/rX6htYmHOW8isH6EQle+f4M+PxZCCsw/eWSgMEfal261KhpWjN950zKD
xjzx+/qsoEjw0F/q655L49rjQ4fO9IdDpcWjXU8X0/jctHJJb8IW2NBsSeYt
p/HJOBE6tEpBSXY1viekUeUSM2eTLgSsTHkDpj40Un5/Ol2qC4anvtd9Fkpo
LLZ7W7HvZCDw7zSGrgunUeS/hq62F8ET5x6rBfE03khIbdu42QfuUxzuomQa
hzbY8mU+n8L6D5POLz1AI/fl7ch30QitbW8PbfyeRjNxrXqDsyf841FqKSym
8WfOwImlH6+FlKHs4GU6Gptytutv5rmD0Db7irCORr3Ltw7GEjfYWt76MPAa
jcOBF8RFzcuhVrv4o4MdNOq4LvXyaEc4oVCvTH9AY+oOdYPuoj28yAjtT3lO
40NatXCbyBbk8x3ai8doTB7h1wTb2YDkX2HUVVMG0+ufVE1YC6DrJ0V1JZfB
3Ipkh/bReZByvcmxVsDgaEKXt+AkD/I9/EIvOzDoln14fK+bBfQ6v7g4tIrB
c2VlfN9t5lDTX9vyABjEBp4XN4yBV4MN2Z0BDFpmnNudpONAxFe9qQObGbyf
UlDhlTFNfo1TKK0/Z/D3W92mYfJpsiBm1p5NrC0lyntZkmnyl8wr4QprDmGa
59pNkwDv6i1FMgaBt8bN2DxFhPwDa33DGJQdi9G/mzVFeL+4j2rDGQwTdbWk
aSeJor5jpI917thC93N5k6T9rHyQF8H+R4WVjSkniUqr+TuVdcb5M8GngibJ
dO7sjtBtDEqWWHd2ThjJcOSz08x2BoePC/O4wUYi+iKt0pO1RpHYs97TSCql
gook1lacvthkByOJDBCrH7GOMa6S2kwZyN3Vl1V1UQx2DK6wtqsyEA9XaeYw
a1PXwLo/igykwGk0zTaawQjODFHadwYSaLPsm6OsfTreefC3GEjV/GtJzaxP
3XLcN+FjIOYfbE00sC6WtOUOrTSQWO7EDtcYBgUWcfKhRQZyfeYP0TGsuy4d
N5kwN5D/AH3s9Kw=
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1:eJwV0Hs0lAkcxvEZ531fkjNr3S9tTdiIlNwyS+/vJ1a5Te3IpRIl1LIyLqEp
bBpFkZVbLGnZWBmOahElTWW15NBZZJdG4qDIoqVytpl994/nfM/n32d9SLQg
TInFYrkw+78PJ6KWfJwIXLlQWy/Zew18TOSUJ03g9iH+6eGechCZ73p2zINA
Pf2YU588fgTVk/2eF/wJ5CtJtlWsKwKrbHHS8VACT+S3aIir8kD8pftQvJDA
s/H88qWxH8CZ2jOdkkzg9ZMLrOnKLLCIjLSozSTQeMy3JjonAyQFN7glBQTq
SE3Y2tx0KFTZ9FtWBYF2CykK8fwZqFNIr/5UT6Dy9SvB9T0pYAklpq13CUys
Ht36r6EIXF0LQwqeEOhZXHon1zoBMnqq+i73EzhbJpwTaMWBXfnHubwxAg+U
7cv83UoI6kuHsPktgeaTzk/7OiNhb57qDtkKgSbdNafbzx+Fze+fL3Uqk2jM
8n155dMRsB9tGflDk8Sc/OLreRaHofozWdw4l8SfnRxqHq49CF8/1qG1LUkc
jBmfWf0+AER0XOsqHok2puPkr4m+oMfWmGK7kajX4lFbzRPA+M4OtzUCEgMC
/0zTdN8Nus9b/b4KJrG5O6CzJc0DXln06xl+R+KLE6sMAjLc4C9CibM2iUS1
9be7bwW6gOOG2Nsm6STqu80VcqIQurqXL3rnkhi/kGDrYukEf9uX6/DKSGyj
j8oTtztA8pvMb8xukAjLD2IuFtoCzyiznddEouVVR8umuq0QVNH1gv+IRCs1
VVHwR0toqOJuOddL4nhUEFfSsBGKhSXW3w+TKNAJ8X+ivQFm0vwmk6dJpHdV
TGTdN4IIfdOesn9IPBft0i/S5oLgAy9Uyqaw7VJCpiMawrNSYV01h0LxDlnI
U1NdSO64u7HBgMJNOYp3PhOacNne3e+eKYXcRnXugkwdBixmGt/YUJhbbOBZ
PKcG9ZMNncNA4cygII7zSgXmX9/J7POicGfYvP8Il4RDMQMpUwEUelYOsLcZ
K8H9SKHoi30ULuUmtsh0lMAwfHWCD2OOvfrQJVUlGNzvHNXOeErsbqOyyAYv
17oDRfspHFpqeBgkZQNPN91hZyCFy2tKAgoPs0GjzXaxKpjC3ul+qcovLBA2
974dYext2JV9q5QFPTcjXmscolDHj/N5aC4LMqquvUxhLLmZbiYTsUCRo9br
d5hCwp1YtZnPgtmQiVrqCIWu3R+0hLMK2uNgarUTYzOt4ZbGQQVd7W9QGct4
rKjUTFWqoEO89pTIGNcYn3EcLVDQQ3b3MppCKeQ/qFnLQwVtb+UvnmXcb7Bl
5Z25gs4zX0w1CqOwPf7p7jZtBc1fZ5Z4iXGX8qzzqRk5LdF/FPuYcVJMT1f0
oJxW1Qo6vsLY2zq9KlYqp49xPn5rFc78ke3TfVYipztU8sPCGcdEpG6pLJLT
/wHZ6skg
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVzntUjHkcBnDa9/eWUE6rMrHpiowomxjy+35pGppMlEz3i+mySZsp7UoU
S1Yl18hqpXaytSdJLl0oWbrKxlgltox7kbAuld5a7euP5zzn88dzzmOu2OAZ
rjVq1KhlfL70ZUVFaPwYBrn0UyXFXnnAEDdP/XEMGjWpVbEduaD+SLwsBAxm
TamolVseh+bItlRvawbn7ZS4sdrHwE/VtGGlPYOBefKyxa5ZsNrqM+tGGXz0
vnavIC8TEmcuvx0pZfDN6pqyjMiDoLu51S3dm8EcDTfwPHUf2O1NSYgJY9Dz
Q8qiizfTIcXa9V68kkFfHcuvzpTvhiXsqhfJSQyKkgJv361KAeH69cJTaQzm
3xlaeV68A4qPFJllH2HQfMB3rrnpdsjSmdWQoWJQ6DBBHGCyFU6PXD3xWwmD
G3oMDcTnEsAWsqdfqmLQoWtvX4nyBxCLsxRHmhhsGl/dNKCKg9SWAvWhVgb/
iDg8f9MaJczLHXyT+Zj/o8mpvi+Jhgl9IVjxmsGtLmEdZ0oiwStTd6mGY7Bq
R6Os1yUcZg+09zVqE1xe1fzBOEABjg8vdt75mqBHe37l7oFgKNTXbHxqRpDY
H5ipTPAHlzojamhLcI/+jRq12hsS6cZLY0QEHWfbqENLvGDSaIPu0RKC7bJH
Aq7SA54uq5dM8SRY5l9n3FPgDsbtl+QLgwl2Wv6+tGWaFJ4IWydNjiZ4Qeky
4ZqPBP5htPRMEwjG7Yrp/0niDIumxZ232kWwaThWQCIQmm/075EdJBjyS/hW
idAJ3jrmGolyCIp9G9KsFi+ApJ40jxlFBBUP2Ou1BxxAZJF2RVROMK8/tvTZ
CXsIUjU/cK8lOBz0t7NFnS2UFpjN+fkWwWppfmJmmA0cU2bP3d5BsE9nqN7/
gjW82iHvSnpBcH//Tr/k5RYQJZjekvORYFeRz8TvTKeC5ydR2NXRLD7cUyNT
G5vA7ePK04V6LEp1jbiEV4aQVF9lU2rCovU+7ZGGXw3gkKOrvHo6i2f7Gze+
NdWHNuGrsp5vWSw6Wn5QLNOFkq7Sxg5g0U4cU98tYeHfl5Vp6hUsLuxt0EQc
1oKQ2Lbkbh8WDcf3OpmtGaE165WJ3/jye5s5svmLR+jkiLE/ruYtv+77JNh6
hN71W/L9Fd652aFRz/s+0xXi0/5H/Vj08dU6/ufRz1RkvGvBsgAWB1tz+4o1
/1GDyw7vC4JZPDM+7qTu5mGqrLj1upP3zbMFwkWhw7TlbNRLgxAW7+u31WyR
DdPUgrxHybyl0dqdsyyG6cj+cbfka1kMnHWtQvbXEO1VPDvFhrL4ePeQ03bL
ISoN3FboxDuwa4u0WG+IFnqb5MfxDlrbf657kKOKFauyNbxdVdnrMtQcvTev
OrU8jMX42VswI5mjjnbeKb28d66L/2QfxdHMme+3WYSzeL3xZFnXGo66T52x
aR/vx84ehkm2HC0W1MbV8Q4Xn1MFCTiqOzEohuMdbTVx7ErC0Ui9wXV2ESxW
fuKc3d8N0nqdw+ERvOWd75YGPBik/wMiYPH1
          "]]}}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{2.5, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(S\\), \\(01\\)]\\)(D)\"", 
          TraditionalForm], None}, {
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)(\[Angstrom])\"", 
          TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{2.5, 2.8}, {0., 0.03189601547435035}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {576., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAWKH88FmGyReO17aU+QEoh+Jfpm5ROa1o8+5rSuylF87
NpX3iEupvHa8wTzPyxdI/5HWLAoH0m4fbTdwqr925Jh9dEsMkDYMnLLlPpD2
1ov8ZKP52rF9s/LMECB9Zu5r/gkmrx35mn6/mgGkHy3h190NpE8KMRkXRr52
rIor+XEDSJss6n6tFfXa0eXO14VLgfTV73WiB4H0vp/fuf8A6RPGXvVb8l87
fqubeMK04LVj0tXHd6KA9IP/+W+bC187Hj6mHXsTSHusnLfvRtFrx0mLfnDe
BNJvup6sAtFsC68t+wekbbLuvQTRQhm7J2sUv3ZkWV4w0wJIF4f1NvmXvHac
EbH+AlPpa8dz+RordYH0nuI7NuFA2klByqgMSN/7uufkFSDNY/nqTWXFa0fn
ub31M4F0WtueyfsqXztyFXkvOl312pGp9SJb1bzXjgByQrmB
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RR", "=", "2.7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SH", "[", 
          RowBox[{
           RowBox[{"R0", "[", "R", "]"}], ",", "0", ",", "2"}], "]"}], ",", 
         RowBox[{"SHexp1", "[", 
          RowBox[{"R", ",", "RR", ",", "0", ",", "2"}], "]"}], ",", 
         RowBox[{"SHexp2", "[", 
          RowBox[{"R", ",", "RR", ",", "0", ",", "2"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "2.5", ",", "2.8"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Red", ",", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(R\), \(0\)]\)(\[Angstrom])\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(S\), \(02\)]\)(H)\>\""}], "}"}]}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SD", "[", 
          RowBox[{
           RowBox[{"R0", "[", "R", "]"}], ",", "0", ",", "2"}], "]"}], ",", 
         RowBox[{"SDexp1", "[", 
          RowBox[{"R", ",", "RR", ",", "0", ",", "2"}], "]"}], ",", 
         RowBox[{"SDexp2", "[", 
          RowBox[{"R", ",", "RR", ",", "0", ",", "2"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "2.5", ",", "2.8"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Red", ",", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(R\), \(0\)]\)(\[Angstrom])\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(S\), \(02\)]\)(D)\>\""}], "}"}]}]}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6368250239034643`*^9, 3.636825033138213*^9}, {
  3.6368252544110613`*^9, 3.636825275374469*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvs",
   "\"NIntegrate failed to converge near the apparently non-integrable \
singularity at \\!\\(\\*RowBox[{\\\"x$277657\\\"}]\\) = \\!\\(\\*RowBox[{\\\"\
\[Infinity]\\\"}]\\).\"",2,128,9,15307504407466671651,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.684287691679448*^9, 3.68485890062166*^9, 
  3.68522611762572*^9, 3.685313865437199*^9, 3.685399015065914*^9, 
  3.685462417090704*^9, 3.685656142062687*^9, 3.687042919478257*^9, 
  3.687107580577425*^9, 3.687707806043076*^9, 3.688258834503151*^9, 
  3.706966071235917*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvs",
   "\"NIntegrate failed to converge near the apparently non-integrable \
singularity at \\!\\(\\*RowBox[{\\\"x$277657\\\"}]\\) = \\!\\(\\*RowBox[{\\\"\
\[Infinity]\\\"}]\\).\"",2,128,10,15307504407466671651,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.684287691679448*^9, 3.68485890062166*^9, 
  3.68522611762572*^9, 3.685313865437199*^9, 3.685399015065914*^9, 
  3.685462417090704*^9, 3.685656142062687*^9, 3.687042919478257*^9, 
  3.687107580577425*^9, 3.687707806043076*^9, 3.688258834503151*^9, 
  3.7069660713117723`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvs",
   "\"NIntegrate failed to converge near the apparently non-integrable \
singularity at \\!\\(\\*RowBox[{\\\"x$277657\\\"}]\\) = \\!\\(\\*RowBox[{\\\"\
\[Infinity]\\\"}]\\).\"",2,128,11,15307504407466671651,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.684287691679448*^9, 3.68485890062166*^9, 
  3.68522611762572*^9, 3.685313865437199*^9, 3.685399015065914*^9, 
  3.685462417090704*^9, 3.685656142062687*^9, 3.687042919478257*^9, 
  3.687107580577425*^9, 3.687707806043076*^9, 3.688258834503151*^9, 
  3.706966071327099*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvs\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,128,12,15307504407466671651,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.684287691679448*^9, 3.68485890062166*^9, 
  3.68522611762572*^9, 3.685313865437199*^9, 3.685399015065914*^9, 
  3.685462417090704*^9, 3.685656142062687*^9, 3.687042919478257*^9, 
  3.687107580577425*^9, 3.687707806043076*^9, 3.688258834503151*^9, 
  3.706966071342112*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{}, {}, 
        {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1:eJwVz3081AccB3D0+/08ZGoSSkVXjWXKCuus7vvlZT2cXJLYeuCmMnnIxV67
310hQkcjO0MsO9RcpS7NusvpyVOZEu4oSbeKnMfNqxHZ0n774/v9vt5/fL6v
12dpWGzAASMDAwM/Zv6/pXs1zCYw8xeFMW2vBQ7aclwZW+30xEY7LfSwQo7w
GY9LxhosbbVgOzA4cYdxrHNIlWKuFrLjDIeTDQkcuXXXcchQC+ITrp2zZhHY
Pf0sM7ZPAwFXsy8YUwT28TJsrl3QAEH6BswxJ9Ctx4JY466BtnEykLWAwPMp
N9exNrRDc0SnJHgFgbow7dn03W2wq6wpdtunBE40WX7wm0kr7Fg+Q/lyCMwx
1ksonxYQr9zcHsElUMPxU4ZW3AczUYdvZjCB/3hY95obNINrVip9aD+Bi4xm
9p2JboLUFVu6vhUQKO3fmfzS6B54Uf4DiQlMX5L7QpnZCM5RUc4VGQSmLnnj
p/BsgEt5Fx2K8pg8tzg85n0d5Jt8cvf7MgINcpQPllfXwuX3tT+XKggUFCpH
gwrugAsUOaprCDSNP9ire3ILfHzyw/KaCCx5Pi1nX7kBkpbyNmkHgQN2j7Sc
RjW4y97+mfuCwHl1UmnHw+swd4KPqlEC2YdrhHwrFQTmmnnrpgkU2Ren6P2v
warJxxP3jEks+31y+1RlFXj8Ud2jnUdi3dSwXZzPryCfo4vvdSAxOom7/kl7
JXzRYM2Z70Iiqc5hUYuugJgTrzZlk+h2vLC6u+kS2Bpa6g03kiiYF3FHFXMR
ejc1blwUQCJviXBqmH8ebB6rgzxDSXSRSG3St5XDS+cOW7toEh8Z+0uyYs5B
N2FksYQmUWpu39V/vww+/yiuankaiXnss6Max1Jovv/mpN8PJKKX7MQpkQz+
8pBZs4tJ3Bzgplv66gwkDGVsd7pI4kw8sgp4RcBmZdxmK0mcNDcV2lidhpCy
5me8ehKf+9d3enXnQWW5w+r0VhLzg+eLesZyoVBQtObYUxKtF5d7CjykMJwS
1J8wwPxzTVSfSsiByAWOLcXjTN9zpbXhJtkQMMXeX2tIoRvH/eEJu5PQfkZw
WW5B4em1Cv27oxJIaKz5uHIhhfM3Lit5jekg9dgSdMORQt7JfS45ZqnQ6Tx8
bWgthdE1FWnZTimg6K+89xQofLj3Zn0ifQzGBq9ntG2lMJQrWz37pwTgH+5M
1H9JYX5W0ULRXTHcihKIF39F4eZXWbFRajHYhc/+bgdjj6hvasMUYni0yyvm
NuM9wcJAfr4Ytvpc3l2wi0I5R0MUhIuBbZO2btMeCo/6Hn8zZiwGy5tur8tD
KQzk+R/h8kQgULWO9jBW9RkNdXmLoOVq5KAln8KO1f/aRX8mAkl5yfNExoLK
qroSBxG8P2XeGvQ1hQ/4Q4Pef9MwEtZXQe2jUFn8zPpgIQ3cvUny9Yxn6gP0
3tk0yIMXno1jLJPNDV16nIawrf5FOsb2HaINI9E0dLnfkCj3U+jQJE+rRho8
XINTRxjTkQT/ujsNuStfJ7EOUBgRqdPWrKSBZ+8kzGasercquc2KhksL6uMa
GFctY6temNJgZhVyaJqx0wN90uSMECIs3h50Dadw2ir9yYfjQmg0+fFAOGOn
c6F1roNC+A//GBV8
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1:eJwVzns01AkUB3Cj3++nFLX0oMeu9WiKaGprarbWvTY7tgZlMDatx07DEVs0
JZmfGbVSHqHxqp2SYg9FirUSI6kokYOY2DzW6IGhssru6mH3t3/ce8/n3Hvu
+X4uDhcG6evp6bkx9f+86PeI6QTqS3V+T3O04IhmjhzGZPYWj8bTWui19KcD
GcvSReJrSi2YDY9M1jFGT/WTuHgtpEpZo0dZBCr6qXn8vVqQneBoZsxg7qvK
Rhy+0oKwLPWyAcXs9XrdU/oHgCAFwrlzCHwTdWOXN3sA2t6SXpbmBObP8/6k
KKQPmkI0CT42BA45DSUZjT8B37zG8O1rCOxeEKmgK7vB03qaEjgSWDEzjKWK
ewwy22/bQ7YRyDc2KLmX1wmG0Z2CJB8CW0ZFdwfuPQJOyrHD+yQEfny51233
snY4ZrO1+2AEgaen/GMNglrBidoxrJATeL7CzqMj6yHYhYXZFScS2Jo/m5vD
aYIrWUUWqiwCOeH60QGzGiF75qp7J/MI7LBSJoW+aICSf2+fv3iVwPY6z4Jp
03qwBxW7Wk2gCSvU3ZJ/B5yds8VZjQQ6D74/uPRyHSS0FLSldzL5uQ/zy5W1
sD536lWGlkCbxtKhtV1qmDcZiJUvCVxamz5fFVcFXhmGX/e/I3BnqFrnwq0E
h7+7Ju8bkHhev+yslF0B3D+qejtMSdxfQ25YGVwOhXP7Dzy1IHHJiGCb8eUy
+KZ+oeMCexL3JDuOpdmXgszxQPUsHomnrNR1o6UlYMYyGWLxSaz/88L+jXOK
4alLA3+pkMS47XFGDs2XYFFXtejLABL51RLiTVoBDNp1mi35kcTVgknJauUv
8ITQN/70MInZIUa6jL482LRcWm4dT6K5Q9PZdvuL0NT8V7KbksTfyR6WH50L
r7m5C3k5JBYeSpVIn58DuS7RY0URiWJ+x1iKlwp4lom3eNeZ/zXlzgHWZ8A/
r6nP/S6JZydS5iunsqC0wGL18VYSXZy8qtIsMuHnCNXaIz0kZjZPJEdGpcPo
T6IX8mESq9iKNSPtpyDUnN2S85bE3sbBm7rOVBD+w5PcZlFoYBofFWl0EtrP
RZQUGlO4/fmH7t3KRJA3qFeWLqbQ1nuDx2vpCUjnbhXVsCm0tn24Zt/OeNDY
jVbovqDwzibDazZpcXD1Ren9HqBQPWXKW/vmKIyP3Ehsc6UwWma9VeF7BAL3
axRD31FoNd1zdOK9HGrDImTLdlL40dOmwGNcDkuCZx/yZDzDYti14pkcHvs6
7b3FuFbbszipRQ6uziW7TvtSqJFePbEnVw68RfEbXb6nkGX+wGJ6ixxMbq6b
KAig8IBwlVB6KgYiKltf9jL+rX5VuH98DLSUhY6YBFIo077rcpfFQELBhQEF
43OXRMc3S2Lg37Q5raIfKHx1OJUt2BgDY+JnxdRuJv8DW8N1Whq2+cUWbmbc
JYxdJnlMQ6HP4nwpYwc7vvhMMw1i1x2qfsbu3KJoo+s0dK+vSbguobD4Q+iv
K5Np4HJ8jo0xJjRjVvQRGjJsJ2ItgyhUcMar2iJpcP9sRVQqY/FrY7eEQBqu
mN+V1jPWXJjk67xpMJzvv+8d4+cRb/13CGgIMZ7awwmmcHmmNKMaaWiYmRkU
zPhOX9fgCi4N/wFYNhab
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVz3k41AkYB3D0+/2SdXQ30sVqWUpTGjUd3rd9bKpBqDUtG5rFOraMI2ZG
I51LYuWqRCJrQjQlRygVUq6hmSlbGjso925ryY5nn9pff7zf9/n89/2a8kLd
/XW0tLSc6fv88w4+p5PAu3fcLDFCAfbIsGfS7vTuL2g+ooAeM+8YX9rTRm1t
e4MVwBgannpIe1tB5greIQUkh2uPntAm8ICm9lnyXgWIfmEqZ80iUA6JW3XX
KMD9dnLRbIpAYvPI0Zi3ciBIjruRPoHXJ/ZE8jzl0DlJ7jczJrA3p/HKKOs5
tAQq47mrCZT8remdw+wCz/ynoXvXE2gb4xVaxu6EfeYfKY49gZZqhuBFRAeI
rHZ1Be4hcF5NVEJRSRvoCRWcc1y6r2Gg4yd5CzCTTguO+BE46XFMHmryDE6v
3t0dySfwwmpFqWl6M+ygXIdixXT/nEyzaq0nYB0SYl2SQKCZ/N7AliuNcDOj
eFVWBoFb6l6Wr3dpgEzdNU/O5xOoH8fPbZ5+BKWfHl3NKyPwsKG0X/zsIayF
LIuaWgKvNHllD1rUg4NDJi/jKYGtkpD3Z0frIL69sDNVQe+XVDSYTtYAK1fz
Z5qawA6VeqXuRDXMnfLFqnF6X+lv5uM2VbA/Te8b1Qy9T8UNWuZXATbTL6ea
Z5NYdfGDq+RBOdj13uuRLyCxoHjYytblDkiMVBH9q0iMlFXqB3dL4dvGxfaL
1pKYZjng0mF+C0T2ETVz2CS6BoYqkjpuAkN7/qD2ThKXD3AbGGHF0O/YtHOZ
O4nntK4N9PBuwJKXNR5bfEjUc9Y6ccy1EPqsFQyTn0k0Otr1ZvpwAbwidAxX
CEiM4BhIDdryYetX4eXmZ0gc8nWaeWWRBy2tHxKdL5BYPdh9MkWYC3/Z5S5m
55A4wFrYavo2G8QjCW6WxSTmKTglKS5ZwDZLqGdXkjjOFetoFlwC7/yWNy4N
JHK7a++O/Z4B0sJV687KSJSds9nBep8Gl/lZG+Jek9ieOJToyUqF0ZMe78RD
JMawHNf1xaRAsLFFe84kiYMedhtrZiWD+79sv0faFKLbJettixKhK5tfKjGk
8Hlh8cg/kfEgbqr9WrqUws1JGlPmprOQarfbo86Cwn3LeneqP54CpfVoxYgt
heZrHjvPNTkJZe+kza+Bwgn59UEIioP3w9UJnU4UrrBVxqoEYvANU8YOHqDw
cS+SunkieBDCFy3/nkIbr3q7sXQRmAR8EbWP9q10/yBlvAheeO44XE/7P0lf
SyVfBE4OpV4XPSksuSzjVKAI2EvObHb8gcKkxw+kuWohzL+/caLQh0K5W7Z4
uYUQ+FWy8R7aP80YH7hqIoT228HD830pnLRMnflyrhDiC6/9EUvbx5Wfsl0j
gE+/6ss8DlEYZTDVUdQqgDHeQAn1I4U6OQHz/MMEsOfgcck22oeUoVnrAwQg
4S69Hk7bp6VIpuMlAJ6Ta5aK9o0+2aZyBwF0s+riK/0oXDmq7uAwBGDH5J4e
o20sDE7YbiCANKuJ42b+FKqcw/psdQTgstIyOpl2mdAqyGYsGm4aN4Q30m6N
jErboI4GvYXeR2Zon/8Y8d3WF9EQaKgJYgZQeIoVVrqrNRqadNP9A2jr36+7
7PkwGv4HyYsesw==
          "]]}}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{2.5, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(S\\), \\(02\\)]\\)(H)\"", 
          TraditionalForm], None}, {
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)(\[Angstrom])\"", 
          TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{2.5, 2.8}, {0., 0.5505234560292254}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
     GraphicsBox[{{{}, {}, 
        {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1:eJwV0G00lAkUB/DB8zyVLSxtDVZixoxMrclGjcq9yUZRabxVG03DKClNyIao
NDRatDGj2I1wmBLtyDaDRIVVyVs7ql2UrY6I1HZS6ij79OHee35f7rn/ayPe
J5ToMxiM9XR9mUXB9+hOYFRuo+6mUgtuyHTj034dYBwlztRCn21Iooh2cO+r
LUSqFphDw+PXadfcNbbfGKuFrGi9kaN6BKqckhQMPy0kHOf3GBgQGGPjHnrP
RAvCqqwL0ygCaxenHHLM0gBBeguNZxI4aEVE1J+8Al1vSX9bcwI3S/YOytOq
4c6uHnmQHYFt0rMyl+Yq2Fp8a9/GxQSq+zfucOWpwY/9mfJ2I/BdRr9zALsS
Ehy8unetI/BrH65IGF4OhvE67xNBBLqOtC+tqVABP1N2MCqM3u/cPzSwvBRk
dmsfxkoJvPVyeoArtwRWUb5DyUkETt6LvX+NWQS8yEjexXQCVzLkiU+rC6BC
WT4/X0ngmesHuhuUv0Lu9IV/ZhTT++PVbQrZGaiculFQdInO++TzJeaYEhZB
PrfuKoFj8cdW+IfngIdHrlh5i8CbKeSolncK5O1lXdk6Ate9GUseyMsC58IP
Yzn/Elg4q26yYvwEmIyLUPuSQIdjrQn1L46Df46h+6OPBP4+Sxf8fEIG371/
MN46jcS0cpeW5J0p4PK4tu8vMxI/MYvDJz2OgMr4UczT+SQaL+UpQvYcgh+a
57h9s4jEQZ2fvSERDwluMXUzBCTOqpYt7jOMA6ae6XO9NSRG9RYxrzrGwFPP
ljXfCklkmIdaLeyRwtwHdYGu20kcuzjbM4y3F57wdEzLPSRaMaokIesj4B9C
32jeQRI3Je4UMm3CYTknupqdSqL/7ezsQctQuNP27uf1p0jMWKr89L5EBK9c
CucIzpLoMRyXGUQFQ9KL9E325SROebUauE1uBoFteqNA8yWfyjvhcgCEFN/p
39BEYqH7QJX+GSGoy+Y7pnWSOBBtMK3FzBfypPlOR3rpfImiu05/e8NISuBg
0hCJ2avHygraPGG3Obf97Fv6Hw382ohUDxBOCMJu6FFo0liS2Bq7Crp/k1aq
jChURdb09TeshKSWqwvUFhQ6pdg4eOUKINtlbWA9lzbxQOP1hzP08EauvPie
wuWcpian005waVDd2gsU2s+RlKiGHOH1cE16lw+FS7Y5EqunHEC0vyf5+WYK
d2fu3+JnyoWGSGmC1RYKJ0rdV1voc8Ey/Ks4P9rW816Zjf7HgftbV+1tpG1E
WW9Qd3PAx6Pyx9NbKcydURJWd4oDgrmpyzy3UTiUOGjVacYB02tL3pRtp/Dj
efHlNms7kGo7X/bRTtMUBTwxsYP2qt3DpiIKz/XnzDDQtwN52bmBZNodlbp0
8TM2TJ2c2Rm4g8J5enHL8i6wYVT87CIVSuFnX4frj53ZsC74sGoF7Q5XSbSC
ywZVkEVJNO3RRRZdQnM2iH188x/RrrzNPTA6yYKHzvVyTRh93wdmbXYzC1z4
QbJR2qWcTRYKDQtyHN4ctpVQyO/rGC84z4IN1vY/ZdHuyV1j0J3Bggrzpuhm
2vI86wUTySwwnB0S9ZH2qOWk2n4/C3YZfYjgh1P4i0anEIeyoGW6QhJOm19c
2lEawIL/AVNTA8s=
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1:eJwVyX881Accx3H0/X4rXdr0Q+nH9EPfczdiuJxrPh+/VVjRhLjs4kqX39VM
+bUxLj8aTmGklGP5OUZzqMfdUaakxNIvGStXkVYrP/ZY7bs/3o/X4/l4rxVF
eIXoaGlpOTL7v8ne5pWFtgRmdHS11gwowHvDe2q7HYE3pFHSvsoWiOO43T6w
jUBX11fvj3g1g+43/dtP7CZQLT+m+cGiEcyzUmLDgwk0E4b/kpNZDynGWwcP
RxJomj8rut9XDfbUDk1CPIHtKaEzgb2VwJVIuFVSAjfVZZU25JRDdf5Fo6J8
Au1XNWiV95TBqXmfXs0sIzCClaS4ZHkWaj4oz5yrJbBG6HZ5v2UxmEIRrWgl
8IiLoWipQwE4OZ0S5XcRGJ/b51Y0LoP0Hvmt3H4C2yYPCetsc8G6dOZl3h8E
9s8fOf4m+CR89DYIL00QaP0w47sxjwzYlafrMDRLIG1Q162KTQOzqbtvr80l
8fOhkUKZIAV4j1se3llMYpL+kCqtJBkqFg3FjBqR6GTr9hPuTADnjmV2S01J
NHHZVdrmFwdxdjGK+XwSz9ivTXacOgrLtfXHtF1I9NXwRyq7YmDUtdNllReJ
E5X8bcW8KDC4q/Cx3Uti04uBe+Y/hsEIt3/5ykMkLuC2nRhPC4X7hI7emlgS
RVZrxxq2iEGwMbpxQyqJ/8h+0yg37IPu6+8yPHJIjHjqf05QHgSTvNJl/BIS
W45rD6uoQIh/Lt3JvkhiozHrkWqOH/DXSa/wm0lM/yDxeNf5JQjLuh95qknM
su4plrR6Qb3caNP3vSRmDm8ueumyAwojiz5LekCi8MRZRUGgO7z41udpvIbE
xUdXP9GEucHBFXRPyd8k6ul4XvgXnMFrmh+s1KZwaeOqhjXODnC7OLKmQo/C
JqMu7fNJAPGdrSb1hhQGlM2xjwoXQC5vq08bTeHVhTLunOLNMMB90fTcksLT
Pu2H36daQe3T+msPgMK3rj2ygVELePXsV+ktdwoP21lMKe+YQVDUQMKYL4W6
2ZytkXc4cFkSGbfaj0K5wYMtN1UcWClecNSbcWNybRKvgQO/+9uHXWFsTJk9
Ns7hgLtTzZ7T/syvjHdO/IIDfINUG9cACpVW9ZYGN01Av93qtXwvhZK5jxzr
+9gQeal34iFjtwjVenc1G3p+PvhMP4jCRYKq7L8a2ZAuPzucwPh6+eMJ33w2
fDjJ6vX5ikL1noWmhb5sGBf9WUXto7DukKXs/jAN2wITK7Yw3mMlELP6aKjY
bXg+mrFc7iF2VdMgct9RNMQ488Lte4PlNAxat6U3B1P48ZP+yQMSGnjmu1PG
GduyCvJGA2jI47xOXBdCoY0/2Oz3pMHzE/bX2YyPhT0Lk1rQUL1CHd3B+LTf
jTf0ehp0lwjDZxmrm7yDe5fQcEBvJtRcTCHLYrolkaKhc54sRMzYUGM9aTO9
Ef4DSRvK5A==
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVz21UjAkUB/CG53mk0pBFL1KaaWora1jFkO7NjpLeNDFTbMlUs4mSmU6r
UkIx1RoqkfQiVoPUCqUJ0WJ7cTqJppRkSTSN2lghkn32w73/8/tw/+fc+eId
gvBJOjo63vT8nyVBD+lNoPeaZ6MZaSpwQWMXLm0lY/BlbaIKeqyCE0No+5SG
zxneqQLjAc3obdrjzs4/BQerQCFlaPcyCLxj4FYUvlQFCQe56smTCaxaubyE
OVgDgkrF+SkUgaH5/KfNfjVAkJ4CpgGB757JqivsrsGD9+R6KxMCmyRFL1za
r0JzhFousibQw327/xX1Zdh4unGH7yICMxo/hC7TrwR/9gTl6ULfb4jtc8is
gAS7NW0Rawk0cbh95IC8DPTi2z0zRAQ2cFMy+rPOAfdQ6q7oMAJ1HaNexY+c
hVRrj8exMQQ6l2T+OVp9BlypdQPJSQSK3ut728pLwH7bNvuydAI5UdJOP3Ex
XMy9YJmfS2DnV4Oaj+YFcEzX4a/fThPoe9MgqlubB+Xf6otKKgh8K3a0sFl5
DBZAvk3tdQK/Xl06o+9UDvD5x8S5jQSW1itmPxJmgbyl9EF2O4GaiBnO2i4F
OBaPDec8J9ByyvBYJCsTpo+G4LUhAveTgVVKfTmsz9Fb1fuZQMnqL9kHmWnw
w8fO0YYpJGo+BB9pi9sHTs9UPY9mkii0MKuT+KaAktkr67MksehcnqAifjes
vjvbZdYCElcE5CekGsRDgousdiqPRPVzc6np9DgwZhi9ZriROHV300T5Yhn0
ud9zmysgcSRrWkdjRwzM6awVLt9M4lDxLKMBhyh4Yd9ubLadRFkmU++r91bo
JiYZzttFol5AYozvfAms4EivsNPovsOd4rdmodB8/0OmdxaJOVW9hZ/OhMA/
TsWzeYUkRjH4cSIqCJIG0/1sL5DY0XMoz2k8AHhW6bd41SQ+DGgyD7y8AYJP
Nz/1uUNinsZiRtlxAVwqtVx4oJVEa4sB9fyZ6+BETP7ilCcknm+1O8Lt9ATt
PuGrpAH6/0kj6X80ukOkiU1L4XsSzRVG2zP28kHwiRdWz6AwdDBJ1rPDFdoK
YsqVhhTOXbWnePKVlZB07/r3l0wpjBvTP6GU8yDbyUN4w4bCLf4DazW/O4La
Xls1+COF/VqVecSBxVDx6lLDE6DQZ389efPuQhjR1KQ/8KLQ9N9KCOyyg5Cd
6uTXARRagq0fU8uBum0xCeaBFLaGe3i3dXPATKIf5087UjPMK2rmQMdG16hb
tE3ryKaACxzw4pdvOr6RwoKnE+O+kRzgzUlb5v4zhcmjojp8Yw1GN5e8K91M
oUBsnDn+kQ0x11qHemj3B0VLmRo2tFRGaoxCKNzU0C9z6GaDvPTU38m0yf2y
stQbbPh22KBVuIXCoUWJvPK9bHgjfllGhVKYr7PUtWsaG9YG7VE6057wCm3J
+MYCpcj0jJQ2p9Df0O0tC8Re6/J7aX9ecjG3q50Fjx1vyKvDKDxaB9NiC1jg
xBWlvqEdnRebLVWwIMfu3R6rcAqXLbQ+mZDCAh8L218VtMH45DxlGAsumtyR
3qVdsXr5oftCFuh9Fxz9mXbwC91fxtawIMJwbCtXQmGtdvwsdwUL7ukeDZfQ
zvrC5O9cwIL/AHU5B0U=
          "]]}}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{2.5, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(S\\), \\(02\\)]\\)(D)\"", 
          TraditionalForm], None}, {
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)(\[Angstrom])\"", 
          TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{2.5, 2.8}, {0., 0.10482297739578621`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {576., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAuJP6k/nL5F57TjhoOT6LOXXjj+KrKSlVF47VpnE+/kC
6U3PX5eGA2kGBZ9tnOqvHcUO1e6IAdI2NTG77gPpVo7Abzaarx3fKN2aHwKk
X4jXikwwee14Ll7/3QwgfVrBxGg3kI44KWdRGPna8dvFQ79vAOnkWt33WlGv
Hb/brlq0FEgnKM4ROwikVVI38/wB0guSFRq25L92fDfl7ynTgteOG3xO3o0C
0gZrfN81F752XPbLJO4mkP7SWr3/RtFrx6W+17luAul57w+sBtFCUdIr/gHp
GyfMX4PoSQqyUzWKXzsGfFadZQGkj85pafYvee34ZHfcRabS145BNjdX6gJp
U84u23AgfeuxpnEZkA67kXnqCpDelDH9bWXFa8dF0pYNM4F034HsKfsqXzt2
iPxYdLrqteO/YxPYq+a9dgQAHZGvdg==
  "]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Spline all the distance dependencies", "Subsection",
 CellChangeTimes->{{3.671128194067483*^9, 3.671128208611191*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"SHs", ",", "SHtable", ",", "SDs", ",", "SDtable"}], "]"}]], "Input",\

 CellChangeTimes->{{3.6713867791773987`*^9, 3.6713868151724033`*^9}, 
   3.706966219203391*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Nbound", "=", "5"}], ";"}]], "Input",
 CellChangeTimes->{{3.671145160478903*^9, 3.6711451814335957`*^9}, {
   3.671148533606442*^9, 3.6711485336525927`*^9}, 3.67114941464087*^9, {
   3.6713867327832527`*^9, 3.67138673285365*^9}, {3.671387039570477*^9, 
   3.671387060256954*^9}, {3.706966132335084*^9, 3.706966132445918*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"SHs", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Nbound", "+", "1"}], ",", 
      RowBox[{"Nbound", "+", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"SHtable", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Nbound", "+", "1"}], ",", 
      RowBox[{"Nbound", "+", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.671128215419629*^9, 3.671128216090884*^9}, {
   3.671128257362249*^9, 3.671128258778145*^9}, {3.67112830436063*^9, 
   3.671128315431053*^9}, {3.6711283708698263`*^9, 3.671128373181261*^9}, {
   3.6711284678024893`*^9, 3.671128478073495*^9}, 3.671129277046173*^9, {
   3.6711294515362663`*^9, 3.6711294545511637`*^9}, {3.671131269504711*^9, 
   3.671131269775673*^9}}],

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SHtable", "[", 
       RowBox[{"i", ",", "j"}], "]"}], "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Ri", ",", 
          RowBox[{"SH", "[", 
           RowBox[{"Ri", ",", "i", ",", "j"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Ri", ",", 
          RowBox[{"-", "3.0"}], ",", "4.0", ",", "0.01"}], "}"}]}], "]"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "Nbound"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "Nbound"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "j"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.671129414376032*^9, 3.671129435033003*^9}, {
   3.6711294804298353`*^9, 3.671129603329755*^9}, {3.67112964256878*^9, 
   3.671129655591675*^9}, {3.67112973274962*^9, 3.671129766988667*^9}, {
   3.671145275895033*^9, 3.671145305838257*^9}, {3.671145459687949*^9, 
   3.671145459744282*^9}, {3.671145645521453*^9, 3.671145646889757*^9}, 
   3.671158145590487*^9, {3.671220804702791*^9, 3.671220809036878*^9}, {
   3.67122085668419*^9, 3.671220858004157*^9}, {3.671239931790701*^9, 
   3.67123995666984*^9}, 3.671313641781157*^9, {3.6713137030991373`*^9, 
   3.671313713754958*^9}, {3.6713137550984087`*^9, 3.6713137614823647`*^9}, 
   3.6713831787783127`*^9, {3.6713845674462*^9, 3.671384586445498*^9}, {
   3.671403821257653*^9, 3.671403823328621*^9}}],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"SHs", "[", 
     RowBox[{"i", ",", "j"}], "]"}], "=", 
    RowBox[{"Interpolation", "[", 
     RowBox[{
      RowBox[{"SHtable", "[", 
       RowBox[{"i", ",", "j"}], "]"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<Spline\>\""}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "Nbound"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "0", ",", "Nbound"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.671130241203245*^9, 3.6711303017291327`*^9}, {
   3.671130334712594*^9, 3.671130335296083*^9}, {3.671130555529585*^9, 
   3.6711305592161913`*^9}, {3.671130912668866*^9, 3.671130916603581*^9}, {
   3.671130980826742*^9, 3.6711310056005163`*^9}, 3.671221172400529*^9, {
   3.671239884993154*^9, 3.671239892264085*^9}, {3.671239988012521*^9, 
   3.671239988148553*^9}, 3.671383661003269*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"SDs", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Nbound", "+", "1"}], ",", 
      RowBox[{"Nbound", "+", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"SDtable", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Nbound", "+", "1"}], ",", 
      RowBox[{"Nbound", "+", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.671128215419629*^9, 3.671128216090884*^9}, {
   3.671128257362249*^9, 3.671128258778145*^9}, {3.67112830436063*^9, 
   3.671128315431053*^9}, {3.6711283708698263`*^9, 3.671128373181261*^9}, {
   3.6711284678024893`*^9, 3.671128478073495*^9}, 3.671129277046173*^9, {
   3.6711294515362663`*^9, 3.6711294545511637`*^9}, {3.671131269504711*^9, 
   3.671131291454307*^9}}],

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SDtable", "[", 
       RowBox[{"i", ",", "j"}], "]"}], "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Ri", ",", 
          RowBox[{"SD", "[", 
           RowBox[{"Ri", ",", "i", ",", "j"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Ri", ",", 
          RowBox[{"-", "3.0"}], ",", "4.0", ",", "0.01"}], "}"}]}], "]"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "Nbound"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "Nbound"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "j"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.671129414376032*^9, 3.671129435033003*^9}, {
   3.6711294804298353`*^9, 3.671129603329755*^9}, {3.67112964256878*^9, 
   3.671129655591675*^9}, {3.67112973274962*^9, 3.671129766988667*^9}, {
   3.671131294894547*^9, 3.671131298262178*^9}, {3.671145366475863*^9, 
   3.6711453670442877`*^9}, {3.671145589859359*^9, 3.671145589899584*^9}, 
   3.671145663481584*^9, 3.671145757423414*^9, 3.671158179045147*^9, {
   3.671220839012683*^9, 3.67122084933368*^9}, {3.671240000037031*^9, 
   3.671240013035633*^9}, {3.671314030919661*^9, 3.671314036430263*^9}, 
   3.6713831879462852`*^9, {3.6714038508476753`*^9, 3.671403853367483*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"SDs", "[", 
      RowBox[{"i", ",", "j"}], "]"}], "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{"SDtable", "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"Method", "\[Rule]", "\"\<Spline\>\""}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "Nbound"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "Nbound"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.671130241203245*^9, 3.6711303017291327`*^9}, {
   3.671130334712594*^9, 3.671130335296083*^9}, {3.671130555529585*^9, 
   3.6711305592161913`*^9}, {3.671130912668866*^9, 3.671130916603581*^9}, {
   3.671130980826742*^9, 3.6711310056005163`*^9}, {3.671131302942021*^9, 
   3.6711313059658623`*^9}, {3.671141734817892*^9, 3.6711417405214167`*^9}, 
   3.67122117900747*^9, {3.6712400178601837`*^9, 3.671240017947028*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparison against Pengfei\[CloseCurlyQuote]s calculations", "Section",
 CellChangeTimes->{{3.706967666681163*^9, 3.706967686990799*^9}}],

Cell["\<\

Read Pengfei\[CloseCurlyQuote]s overlap integrals data\
\>", "Text",
 CellChangeTimes->{{3.7069676913346777`*^9, 3.7069677118860197`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PdataH", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{"\"\<Hydrogen_R_Suv.txt\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"Real", ",", "Number", ",", "Number", ",", "Real"}], " ", 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PdataD", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{"\"\<Deuterium_R_Suv.txt\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"Real", ",", "Number", ",", "Number", ",", "Real"}], " ", 
      "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.706967734642167*^9, 3.706967799083658*^9}, {
  3.70696786891442*^9, 3.7069678936335297`*^9}, {3.706967930161069*^9, 
  3.706967934671508*^9}, {3.706967979335095*^9, 3.7069680119569798`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"PSHlist", ",", "PSDlist"}], "]"}]], "Input",
 CellChangeTimes->{{3.706977596254944*^9, 3.706977610346002*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"PSHlist", ",", 
    RowBox[{"{", 
     RowBox[{"6", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"PSDlist", ",", 
    RowBox[{"{", 
     RowBox[{"6", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.706977361449965*^9, 3.706977418903934*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"PSHlist", "[", 
       RowBox[{"i", ",", "j"}], "]"}], "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PSDlist", "[", 
       RowBox[{"i", ",", "j"}], "]"}], "=", 
      RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.706977572854*^9, 3.706977584474765*^9}, {
  3.7069776290974092`*^9, 3.706977681647732*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AppendTo", "[", 
      RowBox[{
       RowBox[{"PSHlist", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "PdataH", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
         RowBox[{
          RowBox[{
          "PdataH", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
          "PdataH", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
         RowBox[{
          RowBox[{
          "PdataH", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       RowBox[{"PSDlist", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "PdataD", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
         RowBox[{
          RowBox[{
          "PdataD", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
          "PdataD", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
         RowBox[{
          RowBox[{
          "PdataD", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], "}"}]}], 
      "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "PdataH", "]"}]}], "}"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.70697742734411*^9, 3.706977529228442*^9}, {
  3.706977699767123*^9, 3.706977801460101*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SHs", "[", 
  RowBox[{"0", ",", "0"}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> 
               False, Background -> GrayLevel[0.93], Frame -> True, 
               FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.`"}], ",", "4.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> 
               False, Background -> GrayLevel[0.93], Frame -> True, 
               FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.`"}], ",", "4.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"BSpline\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{-3., 4.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7069779449838*^9}]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.7069779834696693`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Mu]", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Nu]", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"R", ",", 
         RowBox[{"FCH", "[", 
          RowBox[{
           RowBox[{"R0", "[", "R", "]"}], ",", "\[Mu]", ",", "\[Nu]"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "2.6", ",", "3.4", ",", "0.05"}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*SubscriptBox[
StyleBox[\"R\",
FontSlant->\"Italic\"], \"DA\"]\), \[Angstrom]\>\"", ",", 
        "\"\<Overlap Integral\>\""}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "16"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Analytical (Mathematica)\>\"", "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"R", ",", 
         RowBox[{"SH", "[", 
          RowBox[{
           RowBox[{"R0", "[", "R", "]"}], ",", "\[Mu]", ",", "\[Nu]"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R", ",", "2.6", ",", "3.4", ",", "0.05"}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*SubscriptBox[
StyleBox[\"R\",
FontSlant->\"Italic\"], \"DA\"]\), \[Angstrom]\>\"", ",", 
        "\"\<Overlap Integral\>\""}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "16"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Numerical (Mathematica)\>\"", "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"PSHlist", "[", 
      RowBox[{"\[Mu]", ",", "\[Nu]"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Numerical (Pengfei)\>\"", "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.70697781250177*^9, 3.706977913216114*^9}, {
  3.706978002989571*^9, 3.706978134265476*^9}, {3.706978183303734*^9, 
  3.706978449655648*^9}, {3.7069785205758963`*^9, 3.706978565219996*^9}, {
  3.706979123942127*^9, 3.70697914842622*^9}, {3.706979208169582*^9, 
  3.706979208728273*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, 
      GraphicsComplexBox[{{2.6, 0.04750487462125678}, {2.65, 
       0.24272125373097747`}, {2.7, 0.18007718122732033`}, {
       2.75, -0.058285083861272874`}, {
       2.8000000000000003`, -0.2554216696200022}, {
       2.85, -0.26755181899909597`}, {
       2.9000000000000004`, -0.10578412989078322`}, {2.95, 
       0.12089623965935536`}, {3., 0.3030985152691971}, {3.0500000000000003`, 
       0.38796024744677043`}, {3.1, 0.3805354706497936}, {3.1500000000000004`,
        0.31608844167212446`}, {3.2, 0.2323416625828866}, {3.25, 
       0.1549188638370246}, {3.3000000000000003`, 0.0952149560795844}, {3.35, 
       0.054558731923847054`}, {3.4000000000000004`, 
       0.029396799944829986`}}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.019444444444444445`], 
           AbsoluteThickness[1.6], FontSize -> 16, 
           RGBColor[0, 0, 1]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
           17}]}}, {{
          Directive[
           PointSize[0.019444444444444445`], 
           AbsoluteThickness[1.6], FontSize -> 16, 
           RGBColor[0, 0, 1], 
           AbsolutePointSize[6]], 
          
          PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
           17}]}, {}, {}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[{{2.6, 0.04750487481840225}, {2.65, 
       0.24272125369374897`}, {2.7, 0.18007718171795228`}, {
       2.75, -0.058285084358514115`}, {
       2.8000000000000003`, -0.25542166972351965`}, {
       2.85, -0.2675518188917211}, {
       2.9000000000000004`, -0.10578412988265284`}, {2.95, 
       0.12089623967497426`}, {3., 0.3030985152751742}, {3.0500000000000003`, 
       0.38796024744942026`}, {3.1, 0.38053547064939397`}, {
       3.1500000000000004`, 0.31608844167368777`}, {3.2, 
       0.23234166258270433`}, {3.25, 0.15491886383709574`}, {
       3.3000000000000003`, 0.09521495607959643}, {3.35, 
       0.054558731923856865`}, {3.4000000000000004`, 
       0.02939679994482757}}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.019444444444444445`], 
           AbsoluteThickness[1.6], FontSize -> 16, 
           RGBColor[1, 0, 0]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
           17}]}}, {{
          Directive[
           PointSize[0.019444444444444445`], 
           AbsoluteThickness[1.6], FontSize -> 16, 
           RGBColor[1, 0, 0], 
           AbsolutePointSize[6]], 
          
          PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
           17}]}, {}, {}}}], {}, {}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{{2.6, -0.042213}, {2.7, 0.20743}, {2.8, -0.16799}, {
          2.9, -0.17866}, {3., 0.19215}, {3.1, 0.35396}, {3.2, 0.25936}, {3.3,
           0.12306}, {3.4, 0.043462}}]}, {}}}, {}, {}, {{}, {}}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {2.5875000000000004`, 0}, 
     PlotRange -> {{2.6, 3.4000000000000004`}, {-0.26755181899909597`, 
      0.38796024744677043`}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2.5875000000000004`, 0}, 
     BaseStyle -> {FontSize -> 16}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Overlap Integral\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\n \
StyleBox[\\\"R\\\",\\nFontSlant->\\\"Italic\\\"], \\\"DA\\\"]\\), \[Angstrom]\
\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{2.6, 3.4000000000000004`}, {-0.26755181899909597`, 
      0.38796024744677043`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Analytical (Mathematica)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], FontSize -> 16, 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], FontSize -> 16, 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, ImageSize -> 
                    {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                    Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Numerical (Mathematica)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], FontSize -> 16, 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], FontSize -> 16, 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Numerical (Pengfei)\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.706977827059387*^9, 3.706977859000744*^9}, 
   3.7069779168846188`*^9, {3.7069780871573467`*^9, 3.7069781350700607`*^9}, {
   3.706978211086631*^9, 3.706978344031253*^9}, {3.70697839732421*^9, 
   3.706978434440188*^9}, {3.706978522207486*^9, 3.706978565899476*^9}, 
   3.706979162394095*^9, 3.706979212483452*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Averaging of overlap integral (a la Ulstrup-Kuznetsov)", "Section",
 CellChangeTimes->{{3.429623172484395*^9, 3.429623174021437*^9}, 
   3.429968494164434*^9, {3.431045286933178*^9, 3.4310453117096148`*^9}, {
   3.431052104747285*^9, 3.4310521140981283`*^9}, 3.431052149930791*^9, {
   3.432432754500885*^9, 3.43243276245896*^9}}],

Cell[TextData[{
 "Quantum and classical distribution functions for harmonic ",
 StyleBox["R",
  FontSlant->"Italic"],
 "-oscillator:"
}], "Text",
 CellChangeTimes->{{3.430762126349109*^9, 3.430762147222393*^9}, {
  3.584815943572592*^9, 3.584815951012162*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PQ", "[", 
    RowBox[{"T_", ",", "R_", ",", "\[Mu]_", ",", "\[Omega]_", ",", "x_"}], 
    "]"}], ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{"\[Mu]", " ", "Dalton", " ", "\[Omega]", " ", "cm2au"}], 
         RowBox[{"\[Pi]", " ", 
          SuperscriptBox["\[HBar]", "2"]}]], 
        RowBox[{"Tanh", "[", 
         FractionBox[
          RowBox[{"\[Omega]", " ", "cm2au"}], 
          RowBox[{"2", "kb", " ", "T"}]], "]"}]}]], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[Mu]", " ", "Dalton", " ", "\[Omega]", " ", "cm2au"}], 
          SuperscriptBox["\[HBar]", "2"]]}], 
        RowBox[{"Tanh", "[", 
         FractionBox[
          RowBox[{"\[Omega]", " ", "cm2au"}], 
          RowBox[{"2", "kb", " ", "T"}]], "]"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "R"}], ")"}], "2"]}], "]"}]}], ",", "AccN"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.431045704156252*^9, 3.431045766725622*^9}, {
   3.431048048703807*^9, 3.431048066071583*^9}, {3.431049687570382*^9, 
   3.431049702297818*^9}, {3.431049744091281*^9, 3.4310497724826717`*^9}, 
   3.431052455075635*^9, {3.432240777686397*^9, 3.432240789269202*^9}, {
   3.432432786742166*^9, 3.432432827901636*^9}, 3.4327464261192636`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PC", "[", 
    RowBox[{"T_", ",", "R_", ",", "\[Mu]_", ",", "\[Omega]_", ",", "x_"}], 
    "]"}], ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{"\[Mu]", " ", "Dalton", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Omega]", " ", "cm2au"}], ")"}], "2"]}], 
        RowBox[{"2", "\[Pi]", " ", "kb", " ", "T"}]]], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"2", "kb", " ", "T"}]]}], "\[Mu]", " ", "Dalton", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Omega]", " ", "cm2au"}], ")"}], "2"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "R"}], ")"}], "2"]}], "]"}]}], ",", "AccN"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4310521635995007`*^9, 3.431052164141637*^9}, {
   3.4310522407709303`*^9, 3.4310522608863583`*^9}, {3.431052558567707*^9, 
   3.431052591385727*^9}, 3.431053768770076*^9, {3.432240794661354*^9, 
   3.432240809285471*^9}, {3.4324328360456257`*^9, 3.43243285353409*^9}, 
   3.432746442118801*^9}],

Cell[TextData[{
 "Classical pair distribution function for the donor-acceptor distance (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "R", ")"}], "=", 
    SuperscriptBox["e", 
     RowBox[{
      RowBox[{"-", "\[Beta]"}], " ", 
      RowBox[{"w", "(", "R", ")"}]}]]}], TraditionalForm]]],
 "):"
}], "Text",
 CellChangeTimes->{{3.683568497845497*^9, 3.683568549051825*^9}, {
  3.6835685992672997`*^9, 3.683568638010841*^9}, {3.7069788923043756`*^9, 
  3.706978896347299*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PG", "[", 
    RowBox[{"T_", ",", "A_", ",", "B_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"SetAccuracy", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"kcal2au", " ", "A", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "B"}], " ", "x"}], "]"}]}], 
        RowBox[{"kb", " ", "T"}]]}], "]"}], ",", "AccN"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6835686569071293`*^9, 3.683568742346059*^9}, {
  3.683568781833701*^9, 3.683568825225004*^9}, {3.684090989372328*^9, 
  3.684091025171612*^9}}],

Cell["\<\

Averaged (actual) Franck-Condon factors:\
\>", "Text",
 CellChangeTimes->{{3.431045488159986*^9, 3.4310455135674*^9}, {
  3.432445700614562*^9, 3.4324457025099993`*^9}, {3.651596080909246*^9, 
  3.651596088156139*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "10"}], ";", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"absc", ",", "weights", ",", "errweights"}], "}"}], "=", 
   RowBox[{"NIntegrate`GaussKronrodRuleData", "[", 
    RowBox[{"n", ",", "AccN"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.4324449698491507`*^9, {3.432449803005525*^9, 3.432449803094603*^9}, {
   3.43245038512864*^9, 3.432450431746122*^9}, {3.4324516990636168`*^9, 
   3.432451699168133*^9}, {3.432472064853293*^9, 3.432472077189713*^9}, 
   3.432472157894013*^9, 3.4324722022957897`*^9},
 CellID->242297082],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FWH", "[", 
    RowBox[{
    "T_", ",", "R_", ",", "\[Mu]_", ",", "\[Omega]_", ",", "i_", ",", "j_", 
     ",", "fun_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a", ",", "b", ",", "integrand", ",", "integral", ",", "error", ",", 
       "regions", ",", "tol", ",", "r1", ",", "r2", ",", "c", ",", "x"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"integrand", "[", "x_", "]"}], ":=", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"SHs", "[", 
            RowBox[{"i", ",", "j"}], "]"}], "[", "x", "]"}], "]"}], "2"], 
        RowBox[{"fun", "[", 
         RowBox[{"T", ",", "R", ",", "\[Mu]", ",", "\[Omega]", ",", "x"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a", "=", "0"}], ";", 
      RowBox[{"b", "=", "3"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tol", "=", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"integral", ",", "error"}], "}"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "a"}], ")"}], 
        RowBox[{"Total", "@", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
              RowBox[{
               RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], "&"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Rescale", "[", 
              RowBox[{"absc", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", "weights", ",", 
             "errweights"}], "}"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"regions", "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], ",", "integral", ",", 
          RowBox[{"Abs", "[", "error", "]"}]}], "}"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", "error", "]"}], ">=", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"tol", "*", "integral"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "splitting", " ", "of", " ", "the", " ", "region", " ", "with", " ", 
          "the", " ", "largest", " ", "error"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], "=", 
          RowBox[{"regions", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
         RowBox[{"c", "=", 
          FractionBox[
           RowBox[{"a", "+", "b"}], "2"]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "integration", " ", "of", " ", "the", " ", "left", " ", "region"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"c", "-", "a"}], ")"}], 
           RowBox[{"Total", "@", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Rescale", "[", 
                 RowBox[{"absc", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", "c"}], "}"}]}], "]"}], ",", "weights", 
                ",", "errweights"}], "}"}]}], "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r1", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "c"}], "}"}], ",", "integral", ",", 
            RowBox[{"Abs", "[", "error", "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "integration", " ", "of", " ", "the", " ", "right", " ", "region"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b", "-", "c"}], ")"}], 
           RowBox[{"Total", "@", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Rescale", "[", 
                 RowBox[{"absc", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"c", ",", "b"}], "}"}]}], "]"}], ",", "weights", 
                ",", "errweights"}], "}"}]}], "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r2", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"c", ",", "b"}], "}"}], ",", "integral", ",", 
            RowBox[{"Abs", "[", "error", "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"sort", " ", "the", " ", 
           RowBox[{"regions", ":", " ", 
            RowBox[{
            "the", " ", "largest", " ", "error", " ", "one", " ", "is", " ", 
             "the", " ", "first"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"regions", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r1", ",", "r2"}], "}"}], ",", 
            RowBox[{"Rest", "[", "regions", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"regions", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{"regions", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
              "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              ">", 
              RowBox[{
              "#2", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
             "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"global", " ", "integral", " ", "and", " ", "error"}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{"Total", "[", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Rest", "[", "#1", "]"}], "&"}], ",", "regions"}], 
            "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "integral"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.432449612901813*^9, 3.4324496779599447`*^9}, {
   3.432450566145237*^9, 3.432450611776497*^9}, {3.4324507500504217`*^9, 
   3.4324507667862*^9}, {3.432450849581108*^9, 3.4324508514350433`*^9}, {
   3.432450935614691*^9, 3.4324509378389807`*^9}, {3.4324510648573*^9, 
   3.4324510754626217`*^9}, {3.43245112175957*^9, 3.432451122878995*^9}, {
   3.432451159816271*^9, 3.4324511644076014`*^9}, 3.432451197592121*^9, {
   3.432451228994237*^9, 3.432451258527865*^9}, {3.432451293952443*^9, 
   3.432451317160368*^9}, {3.432451348177647*^9, 3.4324513533928213`*^9}, {
   3.432451429772397*^9, 3.432451479754422*^9}, {3.432451553060601*^9, 
   3.432451553148321*^9}, {3.4324524915829487`*^9, 3.4324526939218197`*^9}, {
   3.432452812806396*^9, 3.4324528381955214`*^9}, {3.432453084935265*^9, 
   3.432453176825849*^9}, {3.432453212720702*^9, 3.432453255696351*^9}, {
   3.432453299600707*^9, 3.432453443019278*^9}, {3.432453475029698*^9, 
   3.432453590733697*^9}, {3.432453761073345*^9, 3.43245376467057*^9}, {
   3.4324538028765583`*^9, 3.43245383360742*^9}, {3.4324539191539793`*^9, 
   3.432453920754547*^9}, {3.4324545112571993`*^9, 3.4324545139299173`*^9}, {
   3.432454712565052*^9, 3.432454732764661*^9}, {3.432454795254012*^9, 
   3.432454821302104*^9}, {3.432472050941188*^9, 3.432472051021059*^9}, {
   3.432472342332283*^9, 3.432472342411914*^9}, {3.4324725904874487`*^9, 
   3.4324725905864697`*^9}, {3.432472869996031*^9, 3.43247287897577*^9}, 
   3.4324730008863487`*^9, {3.4325633097335367`*^9, 3.432563309834461*^9}, {
   3.4325633844782753`*^9, 3.432563391470221*^9}, {3.432563429264192*^9, 
   3.432563433375947*^9}, {3.432574538503571*^9, 3.4325745393017073`*^9}, {
   3.432746454586256*^9, 3.4327464656608973`*^9}, {3.6517198162434893`*^9, 
   3.651719819882564*^9}, {3.671387992333045*^9, 3.6713880093005037`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FWD", "[", 
    RowBox[{
    "T_", ",", "R_", ",", "\[Mu]_", ",", "\[Omega]_", ",", "i_", ",", "j_", 
     ",", "fun_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a", ",", "b", ",", "integrand", ",", "integral", ",", "error", ",", 
       "regions", ",", "tol", ",", "r1", ",", "r2", ",", "c", ",", "x"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"integrand", "[", "x_", "]"}], ":=", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"SDs", "[", 
            RowBox[{"i", ",", "j"}], "]"}], "[", "x", "]"}], "]"}], "2"], 
        RowBox[{"fun", "[", 
         RowBox[{"T", ",", "R", ",", "\[Mu]", ",", "\[Omega]", ",", "x"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a", "=", "0"}], ";", 
      RowBox[{"b", "=", "3"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tol", "=", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"integral", ",", "error"}], "}"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "a"}], ")"}], 
        RowBox[{"Total", "@", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
              RowBox[{
               RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], "&"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Rescale", "[", 
              RowBox[{"absc", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", "weights", ",", 
             "errweights"}], "}"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"regions", "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], ",", "integral", ",", 
          RowBox[{"Abs", "[", "error", "]"}]}], "}"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", "error", "]"}], ">=", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"tol", "*", "integral"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "splitting", " ", "of", " ", "the", " ", "region", " ", "with", " ", 
          "the", " ", "largest", " ", "error"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], "=", 
          RowBox[{"regions", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
         RowBox[{"c", "=", 
          FractionBox[
           RowBox[{"a", "+", "b"}], "2"]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "integration", " ", "of", " ", "the", " ", "left", " ", "region"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"c", "-", "a"}], ")"}], 
           RowBox[{"Total", "@", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Rescale", "[", 
                 RowBox[{"absc", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", "c"}], "}"}]}], "]"}], ",", "weights", 
                ",", "errweights"}], "}"}]}], "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r1", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "c"}], "}"}], ",", "integral", ",", 
            RowBox[{"Abs", "[", "error", "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "integration", " ", "of", " ", "the", " ", "right", " ", "region"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b", "-", "c"}], ")"}], 
           RowBox[{"Total", "@", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Rescale", "[", 
                 RowBox[{"absc", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"c", ",", "b"}], "}"}]}], "]"}], ",", "weights", 
                ",", "errweights"}], "}"}]}], "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r2", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"c", ",", "b"}], "}"}], ",", "integral", ",", 
            RowBox[{"Abs", "[", "error", "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"sort", " ", "the", " ", 
           RowBox[{"regions", ":", " ", 
            RowBox[{
            "the", " ", "largest", " ", "error", " ", "one", " ", "is", " ", 
             "the", " ", "first"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"regions", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r1", ",", "r2"}], "}"}], ",", 
            RowBox[{"Rest", "[", "regions", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"regions", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{"regions", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
              "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              ">", 
              RowBox[{
              "#2", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
             "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"global", " ", "integral", " ", "and", " ", "error"}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{"Total", "[", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Rest", "[", "#1", "]"}], "&"}], ",", "regions"}], 
            "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "integral"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.432454867702675*^9, 3.43245487467586*^9}, {
   3.432472411908141*^9, 3.432472466843815*^9}, 3.4324725081445713`*^9, {
   3.43247261560859*^9, 3.4324726157042627`*^9}, {3.432473022620144*^9, 
   3.432473033054822*^9}, {3.432563443040979*^9, 3.432563443184437*^9}, {
   3.432574619684926*^9, 3.432574620357353*^9}, {3.432746474909423*^9, 
   3.432746489139141*^9}, {3.651719826891062*^9, 3.651719830274294*^9}, {
   3.6713880231757402`*^9, 3.671388029692367*^9}}],

Cell["\<\

Franck-Condon factors averaged with the pair distribution function for \
repulsive potential of mean force:\
\>", "Text",
 CellChangeTimes->{{3.6835689177681227`*^9, 3.683568947222879*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FWGH", "[", 
    RowBox[{"T_", ",", "A_", ",", "B_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a", ",", "b", ",", "integrand", ",", "integral", ",", "error", ",", 
       "regions", ",", "tol", ",", "r1", ",", "r2", ",", "c", ",", "x"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"integrand", "[", "x_", "]"}], ":=", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"SHs", "[", 
            RowBox[{"i", ",", "j"}], "]"}], "[", "x", "]"}], "]"}], "2"], 
        RowBox[{"PG", "[", 
         RowBox[{"T", ",", "A", ",", "B", ",", 
          RowBox[{"RDA", "[", "x", "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"a", "=", "0"}], ";", 
      RowBox[{"b", "=", "3"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tol", "=", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"integral", ",", "error"}], "}"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "a"}], ")"}], 
        RowBox[{"Total", "@", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
              RowBox[{
               RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], "&"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Rescale", "[", 
              RowBox[{"absc", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", "weights", ",", 
             "errweights"}], "}"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"regions", "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], ",", "integral", ",", 
          RowBox[{"Abs", "[", "error", "]"}]}], "}"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", "error", "]"}], ">=", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"tol", "*", "integral"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "splitting", " ", "of", " ", "the", " ", "region", " ", "with", " ", 
          "the", " ", "largest", " ", "error"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], "=", 
          RowBox[{"regions", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
         RowBox[{"c", "=", 
          FractionBox[
           RowBox[{"a", "+", "b"}], "2"]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "integration", " ", "of", " ", "the", " ", "left", " ", "region"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"c", "-", "a"}], ")"}], 
           RowBox[{"Total", "@", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Rescale", "[", 
                 RowBox[{"absc", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", "c"}], "}"}]}], "]"}], ",", "weights", 
                ",", "errweights"}], "}"}]}], "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r1", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "c"}], "}"}], ",", "integral", ",", 
            RowBox[{"Abs", "[", "error", "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "integration", " ", "of", " ", "the", " ", "right", " ", "region"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b", "-", "c"}], ")"}], 
           RowBox[{"Total", "@", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Rescale", "[", 
                 RowBox[{"absc", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"c", ",", "b"}], "}"}]}], "]"}], ",", "weights", 
                ",", "errweights"}], "}"}]}], "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r2", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"c", ",", "b"}], "}"}], ",", "integral", ",", 
            RowBox[{"Abs", "[", "error", "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"sort", " ", "the", " ", 
           RowBox[{"regions", ":", " ", 
            RowBox[{
            "the", " ", "largest", " ", "error", " ", "one", " ", "is", " ", 
             "the", " ", "first"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"regions", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r1", ",", "r2"}], "}"}], ",", 
            RowBox[{"Rest", "[", "regions", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"regions", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{"regions", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
              "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              ">", 
              RowBox[{
              "#2", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
             "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"global", " ", "integral", " ", "and", " ", "error"}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{"Total", "[", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Rest", "[", "#1", "]"}], "&"}], ",", "regions"}], 
            "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "integral"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FWGD", "[", 
    RowBox[{"T_", ",", "A_", ",", "B_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a", ",", "b", ",", "integrand", ",", "integral", ",", "error", ",", 
       "regions", ",", "tol", ",", "r1", ",", "r2", ",", "c", ",", "x"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"integrand", "[", "x_", "]"}], ":=", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"SDs", "[", 
            RowBox[{"i", ",", "j"}], "]"}], "[", "x", "]"}], "]"}], "2"], 
        RowBox[{"PG", "[", 
         RowBox[{"T", ",", "A", ",", "B", ",", 
          RowBox[{"RDA", "[", "x", "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"a", "=", "0"}], ";", 
      RowBox[{"b", "=", "3"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tol", "=", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"integral", ",", "error"}], "}"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "a"}], ")"}], 
        RowBox[{"Total", "@", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
              RowBox[{
               RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], "&"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Rescale", "[", 
              RowBox[{"absc", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", "weights", ",", 
             "errweights"}], "}"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"regions", "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], ",", "integral", ",", 
          RowBox[{"Abs", "[", "error", "]"}]}], "}"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", "error", "]"}], ">=", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"tol", "*", "integral"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "splitting", " ", "of", " ", "the", " ", "region", " ", "with", " ", 
          "the", " ", "largest", " ", "error"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], "=", 
          RowBox[{"regions", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
         RowBox[{"c", "=", 
          FractionBox[
           RowBox[{"a", "+", "b"}], "2"]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "integration", " ", "of", " ", "the", " ", "left", " ", "region"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"c", "-", "a"}], ")"}], 
           RowBox[{"Total", "@", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Rescale", "[", 
                 RowBox[{"absc", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", "c"}], "}"}]}], "]"}], ",", "weights", 
                ",", "errweights"}], "}"}]}], "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r1", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "c"}], "}"}], ",", "integral", ",", 
            RowBox[{"Abs", "[", "error", "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "integration", " ", "of", " ", "the", " ", "right", " ", "region"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b", "-", "c"}], ")"}], 
           RowBox[{"Total", "@", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Rescale", "[", 
                 RowBox[{"absc", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"c", ",", "b"}], "}"}]}], "]"}], ",", "weights", 
                ",", "errweights"}], "}"}]}], "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r2", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"c", ",", "b"}], "}"}], ",", "integral", ",", 
            RowBox[{"Abs", "[", "error", "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"sort", " ", "the", " ", 
           RowBox[{"regions", ":", " ", 
            RowBox[{
            "the", " ", "largest", " ", "error", " ", "one", " ", "is", " ", 
             "the", " ", "first"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"regions", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r1", ",", "r2"}], "}"}], ",", 
            RowBox[{"Rest", "[", "regions", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"regions", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{"regions", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
              "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              ">", 
              RowBox[{
              "#2", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
             "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"global", " ", "integral", " ", "and", " ", "error"}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{"Total", "[", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Rest", "[", "#1", "]"}], "&"}], ",", "regions"}], 
            "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "integral"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.432449612901813*^9, 3.4324496779599447`*^9}, {
   3.432450566145237*^9, 3.432450611776497*^9}, {3.4324507500504217`*^9, 
   3.4324507667862*^9}, {3.432450849581108*^9, 3.4324508514350433`*^9}, {
   3.432450935614691*^9, 3.4324509378389807`*^9}, {3.4324510648573*^9, 
   3.4324510754626217`*^9}, {3.43245112175957*^9, 3.432451122878995*^9}, {
   3.432451159816271*^9, 3.4324511644076014`*^9}, 3.432451197592121*^9, {
   3.432451228994237*^9, 3.432451258527865*^9}, {3.432451293952443*^9, 
   3.432451317160368*^9}, {3.432451348177647*^9, 3.4324513533928213`*^9}, {
   3.432451429772397*^9, 3.432451479754422*^9}, {3.432451553060601*^9, 
   3.432451553148321*^9}, {3.4324524915829487`*^9, 3.4324526939218197`*^9}, {
   3.432452812806396*^9, 3.4324528381955214`*^9}, {3.432453084935265*^9, 
   3.432453176825849*^9}, {3.432453212720702*^9, 3.432453255696351*^9}, {
   3.432453299600707*^9, 3.432453443019278*^9}, {3.432453475029698*^9, 
   3.432453590733697*^9}, {3.432453761073345*^9, 3.43245376467057*^9}, {
   3.4324538028765583`*^9, 3.43245383360742*^9}, {3.4324539191539793`*^9, 
   3.432453920754547*^9}, {3.4324545112571993`*^9, 3.4324545139299173`*^9}, {
   3.432454712565052*^9, 3.432454732764661*^9}, {3.432454795254012*^9, 
   3.432454821302104*^9}, {3.432472050941188*^9, 3.432472051021059*^9}, {
   3.432472342332283*^9, 3.432472342411914*^9}, {3.4324725904874487`*^9, 
   3.4324725905864697`*^9}, {3.432472869996031*^9, 3.43247287897577*^9}, 
   3.4324730008863487`*^9, {3.4325633097335367`*^9, 3.432563309834461*^9}, {
   3.4325633844782753`*^9, 3.432563391470221*^9}, {3.432563429264192*^9, 
   3.432563433375947*^9}, {3.432574538503571*^9, 3.4325745393017073`*^9}, {
   3.432746454586256*^9, 3.4327464656608973`*^9}, {3.6517198162434893`*^9, 
   3.651719819882564*^9}, {3.671387992333045*^9, 3.6713880093005037`*^9}, {
   3.683568968034038*^9, 3.6835690585046463`*^9}, {3.6840911552132883`*^9, 
   3.6840911797648897`*^9}}],

Cell["\<\

Averaged (quadratic expansion) Franck-Condon factors:\
\>", "Text",
 CellChangeTimes->{{3.431045488159986*^9, 3.4310455135674*^9}, {
  3.432445700614562*^9, 3.4324457025099993`*^9}, {3.651596080909246*^9, 
  3.6515961069475803`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"LFWH", "[", 
    RowBox[{
    "T_", ",", "R_", ",", "\[Mu]_", ",", "\[Omega]_", ",", "i_", ",", "j_", 
     ",", "fun_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x0", ",", "a", ",", "b", ",", "integrand", ",", "integral", ",", 
       "error", ",", "regions", ",", "tol", ",", "r1", ",", "r2", ",", "c", 
       ",", "x"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x0", "=", "R"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"integrand", "[", "x_", "]"}], ":=", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"SHs", "[", 
            RowBox[{"i", ",", "j"}], "]"}], "[", "x0", "]"}], "]"}], "2"], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], 
          RowBox[{"\[Alpha]H", "[", 
           RowBox[{"x0", ",", "i", ",", "j"}], "]"}], 
          RowBox[{"(", 
           RowBox[{"x", "-", "x0"}], ")"}]}], "]"}], 
        RowBox[{"fun", "[", 
         RowBox[{"T", ",", "R", ",", "\[Mu]", ",", "\[Omega]", ",", "x"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a", "=", "0"}], ";", 
      RowBox[{"b", "=", "3"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tol", "=", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"integral", ",", "error"}], "}"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "a"}], ")"}], 
        RowBox[{"Total", "@", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
              RowBox[{
               RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], "&"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Rescale", "[", 
              RowBox[{"absc", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", "weights", ",", 
             "errweights"}], "}"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"regions", "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], ",", "integral", ",", 
          RowBox[{"Abs", "[", "error", "]"}]}], "}"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", "error", "]"}], ">=", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"tol", "*", "integral"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "splitting", " ", "of", " ", "the", " ", "region", " ", "with", " ", 
          "the", " ", "largest", " ", "error"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], "=", 
          RowBox[{"regions", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
         RowBox[{"c", "=", 
          FractionBox[
           RowBox[{"a", "+", "b"}], "2"]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "integration", " ", "of", " ", "the", " ", "left", " ", "region"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"c", "-", "a"}], ")"}], 
           RowBox[{"Total", "@", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Rescale", "[", 
                 RowBox[{"absc", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", "c"}], "}"}]}], "]"}], ",", "weights", 
                ",", "errweights"}], "}"}]}], "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r1", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "c"}], "}"}], ",", "integral", ",", 
            RowBox[{"Abs", "[", "error", "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "integration", " ", "of", " ", "the", " ", "right", " ", "region"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b", "-", "c"}], ")"}], 
           RowBox[{"Total", "@", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Rescale", "[", 
                 RowBox[{"absc", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"c", ",", "b"}], "}"}]}], "]"}], ",", "weights", 
                ",", "errweights"}], "}"}]}], "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r2", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"c", ",", "b"}], "}"}], ",", "integral", ",", 
            RowBox[{"Abs", "[", "error", "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"sort", " ", "the", " ", 
           RowBox[{"regions", ":", " ", 
            RowBox[{
            "the", " ", "largest", " ", "error", " ", "one", " ", "is", " ", 
             "the", " ", "first"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"regions", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r1", ",", "r2"}], "}"}], ",", 
            RowBox[{"Rest", "[", "regions", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"regions", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{"regions", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
              "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              ">", 
              RowBox[{
              "#2", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
             "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"global", " ", "integral", " ", "and", " ", "error"}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{"Total", "[", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Rest", "[", "#1", "]"}], "&"}], ",", "regions"}], 
            "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "integral"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"QFWH", "[", 
    RowBox[{
    "T_", ",", "R_", ",", "\[Mu]_", ",", "\[Omega]_", ",", "i_", ",", "j_", 
     ",", "fun_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x0", ",", "a", ",", "b", ",", "integrand", ",", "integral", ",", 
       "error", ",", "regions", ",", "tol", ",", "r1", ",", "r2", ",", "c", 
       ",", "x"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x0", "=", "R"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"integrand", "[", "x_", "]"}], ":=", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"SHs", "[", 
            RowBox[{"i", ",", "j"}], "]"}], "[", "x0", "]"}], "]"}], "2"], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], 
           RowBox[{"\[Alpha]H", "[", 
            RowBox[{"x0", ",", "i", ",", "j"}], "]"}], 
           RowBox[{"(", 
            RowBox[{"x", "-", "x0"}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"\[Gamma]H", "[", 
            RowBox[{"x0", ",", "i", ",", "j"}], "]"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "-", "x0"}], ")"}], "2"]}]}], "]"}], 
        RowBox[{"fun", "[", 
         RowBox[{"T", ",", "R", ",", "\[Mu]", ",", "\[Omega]", ",", "x"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a", "=", "0"}], ";", 
      RowBox[{"b", "=", "3"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tol", "=", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"integral", ",", "error"}], "}"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "a"}], ")"}], 
        RowBox[{"Total", "@", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
              RowBox[{
               RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], "&"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Rescale", "[", 
              RowBox[{"absc", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", "weights", ",", 
             "errweights"}], "}"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"regions", "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], ",", "integral", ",", 
          RowBox[{"Abs", "[", "error", "]"}]}], "}"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", "error", "]"}], ">=", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"tol", "*", "integral"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "splitting", " ", "of", " ", "the", " ", "region", " ", "with", " ", 
          "the", " ", "largest", " ", "error"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], "=", 
          RowBox[{"regions", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
         RowBox[{"c", "=", 
          FractionBox[
           RowBox[{"a", "+", "b"}], "2"]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "integration", " ", "of", " ", "the", " ", "left", " ", "region"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"c", "-", "a"}], ")"}], 
           RowBox[{"Total", "@", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Rescale", "[", 
                 RowBox[{"absc", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", "c"}], "}"}]}], "]"}], ",", "weights", 
                ",", "errweights"}], "}"}]}], "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r1", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "c"}], "}"}], ",", "integral", ",", 
            RowBox[{"Abs", "[", "error", "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "integration", " ", "of", " ", "the", " ", "right", " ", "region"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b", "-", "c"}], ")"}], 
           RowBox[{"Total", "@", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Rescale", "[", 
                 RowBox[{"absc", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"c", ",", "b"}], "}"}]}], "]"}], ",", "weights", 
                ",", "errweights"}], "}"}]}], "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r2", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"c", ",", "b"}], "}"}], ",", "integral", ",", 
            RowBox[{"Abs", "[", "error", "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"sort", " ", "the", " ", 
           RowBox[{"regions", ":", " ", 
            RowBox[{
            "the", " ", "largest", " ", "error", " ", "one", " ", "is", " ", 
             "the", " ", "first"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"regions", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r1", ",", "r2"}], "}"}], ",", 
            RowBox[{"Rest", "[", "regions", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"regions", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{"regions", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
              "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              ">", 
              RowBox[{
              "#2", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
             "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"global", " ", "integral", " ", "and", " ", "error"}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{"Total", "[", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Rest", "[", "#1", "]"}], "&"}], ",", "regions"}], 
            "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "integral"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.651594911102045*^9, 3.651594912758712*^9}, {
  3.651596143655205*^9, 3.651596160900257*^9}, {3.6515962589308023`*^9, 
  3.651596288315178*^9}, {3.651596341818247*^9, 3.6515964264803877`*^9}, {
  3.6516137669918833`*^9, 3.651613797888768*^9}, {3.65171983626814*^9, 
  3.651719849017927*^9}, {3.6713881860868587`*^9, 3.671388201913788*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"LFWD", "[", 
    RowBox[{
    "T_", ",", "R_", ",", "\[Mu]_", ",", "\[Omega]_", ",", "i_", ",", "j_", 
     ",", "fun_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x0", ",", "a", ",", "b", ",", "integrand", ",", "integral", ",", 
       "error", ",", "regions", ",", "tol", ",", "r1", ",", "r2", ",", "c", 
       ",", "x"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x0", "=", "R"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"integrand", "[", "x_", "]"}], ":=", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"SDs", "[", 
            RowBox[{"i", ",", "j"}], "]"}], "[", "x0", "]"}], "]"}], "2"], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], 
          RowBox[{"\[Alpha]D", "[", 
           RowBox[{"x0", ",", "i", ",", "j"}], "]"}], 
          RowBox[{"(", 
           RowBox[{"x", "-", "x0"}], ")"}]}], "]"}], 
        RowBox[{"fun", "[", 
         RowBox[{"T", ",", "R", ",", "\[Mu]", ",", "\[Omega]", ",", "x"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a", "=", "0"}], ";", 
      RowBox[{"b", "=", "3"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tol", "=", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"integral", ",", "error"}], "}"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "a"}], ")"}], 
        RowBox[{"Total", "@", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
              RowBox[{
               RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], "&"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Rescale", "[", 
              RowBox[{"absc", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", "weights", ",", 
             "errweights"}], "}"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"regions", "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], ",", "integral", ",", 
          RowBox[{"Abs", "[", "error", "]"}]}], "}"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", "error", "]"}], ">=", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"tol", "*", "integral"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "splitting", " ", "of", " ", "the", " ", "region", " ", "with", " ", 
          "the", " ", "largest", " ", "error"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], "=", 
          RowBox[{"regions", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
         RowBox[{"c", "=", 
          FractionBox[
           RowBox[{"a", "+", "b"}], "2"]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "integration", " ", "of", " ", "the", " ", "left", " ", "region"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"c", "-", "a"}], ")"}], 
           RowBox[{"Total", "@", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Rescale", "[", 
                 RowBox[{"absc", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", "c"}], "}"}]}], "]"}], ",", "weights", 
                ",", "errweights"}], "}"}]}], "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r1", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "c"}], "}"}], ",", "integral", ",", 
            RowBox[{"Abs", "[", "error", "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "integration", " ", "of", " ", "the", " ", "right", " ", "region"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b", "-", "c"}], ")"}], 
           RowBox[{"Total", "@", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Rescale", "[", 
                 RowBox[{"absc", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"c", ",", "b"}], "}"}]}], "]"}], ",", "weights", 
                ",", "errweights"}], "}"}]}], "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r2", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"c", ",", "b"}], "}"}], ",", "integral", ",", 
            RowBox[{"Abs", "[", "error", "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"sort", " ", "the", " ", 
           RowBox[{"regions", ":", " ", 
            RowBox[{
            "the", " ", "largest", " ", "error", " ", "one", " ", "is", " ", 
             "the", " ", "first"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"regions", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r1", ",", "r2"}], "}"}], ",", 
            RowBox[{"Rest", "[", "regions", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"regions", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{"regions", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
              "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              ">", 
              RowBox[{
              "#2", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
             "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"global", " ", "integral", " ", "and", " ", "error"}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{"Total", "[", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Rest", "[", "#1", "]"}], "&"}], ",", "regions"}], 
            "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "integral"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"QFWD", "[", 
    RowBox[{
    "T_", ",", "R_", ",", "\[Mu]_", ",", "\[Omega]_", ",", "i_", ",", "j_", 
     ",", "fun_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x0", ",", "a", ",", "b", ",", "integrand", ",", "integral", ",", 
       "error", ",", "regions", ",", "tol", ",", "r1", ",", "r2", ",", "c", 
       ",", "x"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x0", "=", "R"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"integrand", "[", "x_", "]"}], ":=", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"SDs", "[", 
            RowBox[{"i", ",", "j"}], "]"}], "[", "x0", "]"}], "]"}], "2"], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], 
           RowBox[{"\[Alpha]D", "[", 
            RowBox[{"x0", ",", "i", ",", "j"}], "]"}], 
           RowBox[{"(", 
            RowBox[{"x", "-", "x0"}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"\[Gamma]D", "[", 
            RowBox[{"x0", ",", "i", ",", "j"}], "]"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "-", "x0"}], ")"}], "2"]}]}], "]"}], 
        RowBox[{"fun", "[", 
         RowBox[{"T", ",", "R", ",", "\[Mu]", ",", "\[Omega]", ",", "x"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a", "=", "0"}], ";", 
      RowBox[{"b", "=", "3"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tol", "=", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"integral", ",", "error"}], "}"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "a"}], ")"}], 
        RowBox[{"Total", "@", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
              RowBox[{
               RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], "&"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Rescale", "[", 
              RowBox[{"absc", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", "weights", ",", 
             "errweights"}], "}"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"regions", "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], ",", "integral", ",", 
          RowBox[{"Abs", "[", "error", "]"}]}], "}"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", "error", "]"}], ">=", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"tol", "*", "integral"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "splitting", " ", "of", " ", "the", " ", "region", " ", "with", " ", 
          "the", " ", "largest", " ", "error"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], "=", 
          RowBox[{"regions", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
         RowBox[{"c", "=", 
          FractionBox[
           RowBox[{"a", "+", "b"}], "2"]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "integration", " ", "of", " ", "the", " ", "left", " ", "region"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"c", "-", "a"}], ")"}], 
           RowBox[{"Total", "@", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Rescale", "[", 
                 RowBox[{"absc", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", "c"}], "}"}]}], "]"}], ",", "weights", 
                ",", "errweights"}], "}"}]}], "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r1", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "c"}], "}"}], ",", "integral", ",", 
            RowBox[{"Abs", "[", "error", "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "integration", " ", "of", " ", "the", " ", "right", " ", "region"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b", "-", "c"}], ")"}], 
           RowBox[{"Total", "@", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#2"}], ",", 
                 RowBox[{
                  RowBox[{"integrand", "[", "#1", "]"}], "#3"}]}], "}"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Rescale", "[", 
                 RowBox[{"absc", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"c", ",", "b"}], "}"}]}], "]"}], ",", "weights", 
                ",", "errweights"}], "}"}]}], "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r2", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"c", ",", "b"}], "}"}], ",", "integral", ",", 
            RowBox[{"Abs", "[", "error", "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"sort", " ", "the", " ", 
           RowBox[{"regions", ":", " ", 
            RowBox[{
            "the", " ", "largest", " ", "error", " ", "one", " ", "is", " ", 
             "the", " ", "first"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"regions", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r1", ",", "r2"}], "}"}], ",", 
            RowBox[{"Rest", "[", "regions", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"regions", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{"regions", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
              "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              ">", 
              RowBox[{
              "#2", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
             "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"global", " ", "integral", " ", "and", " ", "error"}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"integral", ",", "error"}], "}"}], "=", 
          RowBox[{"Total", "[", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Rest", "[", "#1", "]"}], "&"}], ",", "regions"}], 
            "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "integral"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6515964399042053`*^9, 3.651596452096036*^9}, {
  3.6516138158061733`*^9, 3.651613832879878*^9}, {3.651719857714498*^9, 
  3.6517198702492857`*^9}, {3.67138821156572*^9, 3.671388233148863*^9}}],

Cell[CellGroupData[{

Cell["Rates:", "Subsection",
 CellChangeTimes->{{3.4310456200585327`*^9, 3.431045624440443*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RateUKqH", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "A0", ",", "A1", ",", "A2", ",", "dG", ",", "\[CapitalLambda]", ",", 
       "Ea"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dG", "=", 
       RowBox[{"\[CapitalDelta]", "*", "kcal2au"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"\[Lambda]", "*", "kcal2au"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "=", 
       RowBox[{"prefactor", "*", 
        SuperscriptBox["V", "2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A1", "=", 
       RowBox[{"FWH", "[", 
        RowBox[{
        "T", ",", "R", ",", "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j", ",",
          "PQ"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A2", "=", 
       SqrtBox[
        FractionBox["\[Pi]", 
         RowBox[{"kb", " ", "T", " ", "\[CapitalLambda]"}]]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Ea", "=", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"dG", "+", "\[CapitalLambda]", "+", 
           RowBox[{"E2", "[", "j", "]"}], "-", 
           RowBox[{"E2", "[", "0", "]"}], "-", 
           RowBox[{"E1", "[", "i", "]"}], "+", 
           RowBox[{"E1", "[", "0", "]"}]}], ")"}], "2"], 
        RowBox[{"4", "\[CapitalLambda]"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "*", "A1", "*", "A2", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         FractionBox["Ea", 
          RowBox[{"kb", " ", "T"}]]}], "]"}]}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.432454898752762*^9, 3.432454899112458*^9}, {
  3.4324730829859343`*^9, 3.432473093898389*^9}},
 CellID->1486185260],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RateQUKqH", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "A0", ",", "A1", ",", "A2", ",", "dG", ",", "\[CapitalLambda]", ",", 
       "Ea"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dG", "=", 
       RowBox[{"\[CapitalDelta]", "*", "kcal2au"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"\[Lambda]", "*", "kcal2au"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "=", 
       RowBox[{"prefactor", "*", 
        SuperscriptBox["V", "2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A1", "=", 
       RowBox[{"QFWH", "[", 
        RowBox[{
        "T", ",", "R", ",", "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j", ",",
          "PQ"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A2", "=", 
       SqrtBox[
        FractionBox["\[Pi]", 
         RowBox[{"kb", " ", "T", " ", "\[CapitalLambda]"}]]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Ea", "=", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"dG", "+", "\[CapitalLambda]", "+", 
           RowBox[{"E2", "[", "j", "]"}], "-", 
           RowBox[{"E2", "[", "0", "]"}], "-", 
           RowBox[{"E1", "[", "i", "]"}], "+", 
           RowBox[{"E1", "[", "0", "]"}]}], ")"}], "2"], 
        RowBox[{"4", "\[CapitalLambda]"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "*", "A1", "*", "A2", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         FractionBox["Ea", 
          RowBox[{"kb", " ", "T"}]]}], "]"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RateLUKqH", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "A0", ",", "A1", ",", "A2", ",", "dG", ",", "\[CapitalLambda]", ",", 
       "Ea"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dG", "=", 
       RowBox[{"\[CapitalDelta]", "*", "kcal2au"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"\[Lambda]", "*", "kcal2au"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "=", 
       RowBox[{"prefactor", "*", 
        SuperscriptBox["V", "2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A1", "=", 
       RowBox[{"LFWH", "[", 
        RowBox[{
        "T", ",", "R", ",", "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j", ",",
          "PQ"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A2", "=", 
       SqrtBox[
        FractionBox["\[Pi]", 
         RowBox[{"kb", " ", "T", " ", "\[CapitalLambda]"}]]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Ea", "=", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"dG", "+", "\[CapitalLambda]", "+", 
           RowBox[{"E2", "[", "j", "]"}], "-", 
           RowBox[{"E2", "[", "0", "]"}], "-", 
           RowBox[{"E1", "[", "i", "]"}], "+", 
           RowBox[{"E1", "[", "0", "]"}]}], ")"}], "2"], 
        RowBox[{"4", "\[CapitalLambda]"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "*", "A1", "*", "A2", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         FractionBox["Ea", 
          RowBox[{"kb", " ", "T"}]]}], "]"}]}]}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.6515964771433277`*^9, 3.651596482318405*^9}, {
  3.651613849502522*^9, 3.6516138606125193`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RateUKqD", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "A0", ",", "A1", ",", "A2", ",", "dG", ",", "\[CapitalLambda]", ",", 
       "Ea"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dG", "=", 
       RowBox[{"\[CapitalDelta]", "*", "kcal2au"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"\[Lambda]", "*", "kcal2au"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "=", 
       RowBox[{"prefactor", "*", 
        SuperscriptBox["V", "2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A1", "=", 
       RowBox[{"FWD", "[", 
        RowBox[{
        "T", ",", "R", ",", "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j", ",",
          "PQ"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A2", "=", 
       SqrtBox[
        FractionBox["\[Pi]", 
         RowBox[{"kb", " ", "T", " ", "\[CapitalLambda]"}]]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Ea", "=", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"dG", "+", "\[CapitalLambda]", "+", 
           RowBox[{"E2D", "[", "j", "]"}], "-", 
           RowBox[{"E2D", "[", "0", "]"}], "-", 
           RowBox[{"E1D", "[", "i", "]"}], "+", 
           RowBox[{"E1D", "[", "0", "]"}]}], ")"}], "2"], 
        RowBox[{"4", "\[CapitalLambda]"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "*", "A1", "*", "A2", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         FractionBox["Ea", 
          RowBox[{"kb", " ", "T"}]]}], "]"}]}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.432454903056746*^9, {3.4324731134984217`*^9, 3.432473117576831*^9}},
 CellID->933366563],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RateQUKqD", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "A0", ",", "A1", ",", "A2", ",", "dG", ",", "\[CapitalLambda]", ",", 
       "Ea"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dG", "=", 
       RowBox[{"\[CapitalDelta]", "*", "kcal2au"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"\[Lambda]", "*", "kcal2au"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "=", 
       RowBox[{"prefactor", "*", 
        SuperscriptBox["V", "2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A1", "=", 
       RowBox[{"QFWD", "[", 
        RowBox[{
        "T", ",", "R", ",", "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j", ",",
          "PQ"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A2", "=", 
       SqrtBox[
        FractionBox["\[Pi]", 
         RowBox[{"kb", " ", "T", " ", "\[CapitalLambda]"}]]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Ea", "=", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"dG", "+", "\[CapitalLambda]", "+", 
           RowBox[{"E2D", "[", "j", "]"}], "-", 
           RowBox[{"E2D", "[", "0", "]"}], "-", 
           RowBox[{"E1D", "[", "i", "]"}], "+", 
           RowBox[{"E1D", "[", "0", "]"}]}], ")"}], "2"], 
        RowBox[{"4", "\[CapitalLambda]"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "*", "A1", "*", "A2", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         FractionBox["Ea", 
          RowBox[{"kb", " ", "T"}]]}], "]"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RateLUKqD", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "A0", ",", "A1", ",", "A2", ",", "dG", ",", "\[CapitalLambda]", ",", 
       "Ea"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dG", "=", 
       RowBox[{"\[CapitalDelta]", "*", "kcal2au"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"\[Lambda]", "*", "kcal2au"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "=", 
       RowBox[{"prefactor", "*", 
        SuperscriptBox["V", "2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A1", "=", 
       RowBox[{"QFWD", "[", 
        RowBox[{
        "T", ",", "R", ",", "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j", ",",
          "PQ"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A2", "=", 
       SqrtBox[
        FractionBox["\[Pi]", 
         RowBox[{"kb", " ", "T", " ", "\[CapitalLambda]"}]]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Ea", "=", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"dG", "+", "\[CapitalLambda]", "+", 
           RowBox[{"E2D", "[", "j", "]"}], "-", 
           RowBox[{"E2D", "[", "0", "]"}], "-", 
           RowBox[{"E1D", "[", "i", "]"}], "+", 
           RowBox[{"E1D", "[", "0", "]"}]}], ")"}], "2"], 
        RowBox[{"4", "\[CapitalLambda]"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "*", "A1", "*", "A2", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         FractionBox["Ea", 
          RowBox[{"kb", " ", "T"}]]}], "]"}]}]}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.651596498382061*^9, 3.651596503190069*^9}, {
  3.651613877588173*^9, 3.651613883059973*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TotalrateUKqH", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PCH", "[", 
         RowBox[{"T", ",", "i", ",", "n"}], "]"}], 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"RateUKqH", "[", 
           RowBox[{
           "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", 
            "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "m"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellID->1871266653],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TotalrateQUKqH", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PCH", "[", 
         RowBox[{"T", ",", "i", ",", "n"}], "]"}], 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"RateQUKqH", "[", 
           RowBox[{
           "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", 
            "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "m"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TotalrateLUKqH", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PCH", "[", 
         RowBox[{"T", ",", "i", ",", "n"}], "]"}], 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"RateLUKqH", "[", 
           RowBox[{
           "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", 
            "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "m"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.651596515846662*^9, 3.651596520182777*^9}, {
  3.6516139268912153`*^9, 3.651613937643168*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TotalrateUKqD", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PCD", "[", 
         RowBox[{"T", ",", "i", ",", "n"}], "]"}], 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"RateUKqD", "[", 
           RowBox[{
           "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", 
            "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "m"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellID->480626656],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TotalrateQUKqD", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PCD", "[", 
         RowBox[{"T", ",", "i", ",", "n"}], "]"}], 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"RateQUKqD", "[", 
           RowBox[{
           "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", 
            "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "m"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TotalrateLUKqD", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PCD", "[", 
         RowBox[{"T", ",", "i", ",", "n"}], "]"}], 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"RateLUKqD", "[", 
           RowBox[{
           "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", 
            "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "m"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.651596531886374*^9, 3.651596534901598*^9}, {
  3.651613946084066*^9, 3.651613953234908*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"KIEUKq", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", "\[Mu]", 
       ",", "\[Omega]", ",", "n", ",", "m"}], "}"}], ",", 
     FractionBox[
      RowBox[{"TotalrateUKqH", "[", 
       RowBox[{
       "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", "\[Mu]", 
        ",", "\[Omega]", ",", "n", ",", "m"}], "]"}], 
      RowBox[{"TotalrateUKqD", "[", 
       RowBox[{
       "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", "\[Mu]", 
        ",", "\[Omega]", ",", "n", ",", "m"}], "]"}]]}], "]"}]}], 
  ";"}]], "Input",
 CellID->1206211025],

Cell[BoxData[{
 RowBox[{
  RowBox[{"KIEQUKq", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", "\[Mu]", 
       ",", "\[Omega]", ",", "n", ",", "m"}], "}"}], ",", 
     FractionBox[
      RowBox[{"TotalrateQUKqH", "[", 
       RowBox[{
       "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", "\[Mu]", 
        ",", "\[Omega]", ",", "n", ",", "m"}], "]"}], 
      RowBox[{"TotalrateQUKqD", "[", 
       RowBox[{
       "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", "\[Mu]", 
        ",", "\[Omega]", ",", "n", ",", "m"}], "]"}]]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KIELUKq", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", "\[Mu]", 
       ",", "\[Omega]", ",", "n", ",", "m"}], "}"}], ",", 
     FractionBox[
      RowBox[{"TotalrateQUKqH", "[", 
       RowBox[{
       "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", "\[Mu]", 
        ",", "\[Omega]", ",", "n", ",", "m"}], "]"}], 
      RowBox[{"TotalrateQUKqD", "[", 
       RowBox[{
       "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", "\[Mu]", 
        ",", "\[Omega]", ",", "n", ",", "m"}], "]"}]]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6515965441980867`*^9, 3.6515965495171824`*^9}, {
  3.651613960418583*^9, 3.651613963162549*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RateUKH", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "A0", ",", "A1", ",", "A2", ",", "dG", ",", "\[CapitalLambda]", ",", 
       "Ea"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dG", "=", 
       RowBox[{"\[CapitalDelta]", "*", "kcal2au"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"\[Lambda]", "*", "kcal2au"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "=", 
       RowBox[{"prefactor", "*", 
        SuperscriptBox["V", "2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A1", "=", 
       RowBox[{"FWH", "[", 
        RowBox[{
        "T", ",", "R", ",", "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j", ",",
          "PC"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A2", "=", 
       SqrtBox[
        FractionBox["\[Pi]", 
         RowBox[{"kb", " ", "T", " ", "\[CapitalLambda]"}]]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Ea", "=", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"dG", "+", "\[CapitalLambda]", "+", 
           RowBox[{"E2", "[", "j", "]"}], "-", 
           RowBox[{"E2", "[", "0", "]"}], "-", 
           RowBox[{"E1", "[", "i", "]"}], "+", 
           RowBox[{"E1", "[", "0", "]"}]}], ")"}], "2"], 
        RowBox[{"4", "\[CapitalLambda]"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "*", "A1", "*", "A2", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         FractionBox["Ea", 
          RowBox[{"kb", " ", "T"}]]}], "]"}]}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.432473158522922*^9, 3.4324731615946913`*^9}},
 CellID->543069495],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RateUKGH", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "A_", ",", "B_", 
     ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "A0", ",", "A1", ",", "A2", ",", "dG", ",", "\[CapitalLambda]", ",", 
       "Ea"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dG", "=", 
       RowBox[{"\[CapitalDelta]", "*", "kcal2au"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"\[Lambda]", "*", "kcal2au"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "=", 
       RowBox[{"prefactor", "*", 
        SuperscriptBox["V", "2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A1", "=", 
       RowBox[{"FWGH", "[", 
        RowBox[{"T", ",", "A", ",", "B", ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"A2", "=", 
       SqrtBox[
        FractionBox["\[Pi]", 
         RowBox[{"kb", " ", "T", " ", "\[CapitalLambda]"}]]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Ea", "=", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"dG", "+", "\[CapitalLambda]", "+", 
           RowBox[{"E2", "[", "j", "]"}], "-", 
           RowBox[{"E2", "[", "0", "]"}], "-", 
           RowBox[{"E1", "[", "i", "]"}], "+", 
           RowBox[{"E1", "[", "0", "]"}]}], ")"}], "2"], 
        RowBox[{"4", "\[CapitalLambda]"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "*", "A1", "*", "A2", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         FractionBox["Ea", 
          RowBox[{"kb", " ", "T"}]]}], "]"}]}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.432473158522922*^9, 3.4324731615946913`*^9}, {
  3.683569193261983*^9, 3.683569218036244*^9}},
 CellID->547130243],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RateQUKH", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "A0", ",", "A1", ",", "A2", ",", "dG", ",", "\[CapitalLambda]", ",", 
       "Ea"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dG", "=", 
       RowBox[{"\[CapitalDelta]", "*", "kcal2au"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"\[Lambda]", "*", "kcal2au"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "=", 
       RowBox[{"prefactor", "*", 
        SuperscriptBox["V", "2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A1", "=", 
       RowBox[{"QFWH", "[", 
        RowBox[{
        "T", ",", "R", ",", "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j", ",",
          "PC"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A2", "=", 
       SqrtBox[
        FractionBox["\[Pi]", 
         RowBox[{"kb", " ", "T", " ", "\[CapitalLambda]"}]]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Ea", "=", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"dG", "+", "\[CapitalLambda]", "+", 
           RowBox[{"E2", "[", "j", "]"}], "-", 
           RowBox[{"E2", "[", "0", "]"}], "-", 
           RowBox[{"E1", "[", "i", "]"}], "+", 
           RowBox[{"E1", "[", "0", "]"}]}], ")"}], "2"], 
        RowBox[{"4", "\[CapitalLambda]"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "*", "A1", "*", "A2", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         FractionBox["Ea", 
          RowBox[{"kb", " ", "T"}]]}], "]"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RateLUKH", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "A0", ",", "A1", ",", "A2", ",", "dG", ",", "\[CapitalLambda]", ",", 
       "Ea"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dG", "=", 
       RowBox[{"\[CapitalDelta]", "*", "kcal2au"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"\[Lambda]", "*", "kcal2au"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "=", 
       RowBox[{"prefactor", "*", 
        SuperscriptBox["V", "2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A1", "=", 
       RowBox[{"LFWH", "[", 
        RowBox[{
        "T", ",", "R", ",", "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j", ",",
          "PC"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A2", "=", 
       SqrtBox[
        FractionBox["\[Pi]", 
         RowBox[{"kb", " ", "T", " ", "\[CapitalLambda]"}]]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Ea", "=", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"dG", "+", "\[CapitalLambda]", "+", 
           RowBox[{"E2", "[", "j", "]"}], "-", 
           RowBox[{"E2", "[", "0", "]"}], "-", 
           RowBox[{"E1", "[", "i", "]"}], "+", 
           RowBox[{"E1", "[", "0", "]"}]}], ")"}], "2"], 
        RowBox[{"4", "\[CapitalLambda]"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "*", "A1", "*", "A2", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         FractionBox["Ea", 
          RowBox[{"kb", " ", "T"}]]}], "]"}]}]}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.651596561701901*^9, 3.65159656414914*^9}, {
  3.651613971450716*^9, 3.6516139822268667`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RateUKD", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "A0", ",", "A1", ",", "A2", ",", "dG", ",", "\[CapitalLambda]", ",", 
       "Ea"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dG", "=", 
       RowBox[{"\[CapitalDelta]", "*", "kcal2au"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"\[Lambda]", "*", "kcal2au"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "=", 
       RowBox[{"prefactor", "*", 
        SuperscriptBox["V", "2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A1", "=", 
       RowBox[{"FWD", "[", 
        RowBox[{
        "T", ",", "R", ",", "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j", ",",
          "PC"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A2", "=", 
       SqrtBox[
        FractionBox["\[Pi]", 
         RowBox[{"kb", " ", "T", " ", "\[CapitalLambda]"}]]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Ea", "=", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"dG", "+", "\[CapitalLambda]", "+", 
           RowBox[{"E2D", "[", "j", "]"}], "-", 
           RowBox[{"E2D", "[", "0", "]"}], "-", 
           RowBox[{"E1D", "[", "i", "]"}], "+", 
           RowBox[{"E1D", "[", "0", "]"}]}], ")"}], "2"], 
        RowBox[{"4", "\[CapitalLambda]"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "*", "A1", "*", "A2", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         FractionBox["Ea", 
          RowBox[{"kb", " ", "T"}]]}], "]"}]}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.432473169512331*^9, 3.432473173704356*^9}},
 CellID->563502715],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RateUKGD", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "A_", ",", "B_", 
     ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "A0", ",", "A1", ",", "A2", ",", "dG", ",", "\[CapitalLambda]", ",", 
       "Ea"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dG", "=", 
       RowBox[{"\[CapitalDelta]", "*", "kcal2au"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"\[Lambda]", "*", "kcal2au"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "=", 
       RowBox[{"prefactor", "*", 
        SuperscriptBox["V", "2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A1", "=", 
       RowBox[{"FWGD", "[", 
        RowBox[{"T", ",", "A", ",", "B", ",", "i", ",", "j"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"A2", "=", 
       SqrtBox[
        FractionBox["\[Pi]", 
         RowBox[{"kb", " ", "T", " ", "\[CapitalLambda]"}]]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Ea", "=", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"dG", "+", "\[CapitalLambda]", "+", 
           RowBox[{"E2D", "[", "j", "]"}], "-", 
           RowBox[{"E2D", "[", "0", "]"}], "-", 
           RowBox[{"E1D", "[", "i", "]"}], "+", 
           RowBox[{"E1D", "[", "0", "]"}]}], ")"}], "2"], 
        RowBox[{"4", "\[CapitalLambda]"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "*", "A1", "*", "A2", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         FractionBox["Ea", 
          RowBox[{"kb", " ", "T"}]]}], "]"}]}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.683572871971401*^9, 3.683572886658964*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RateQUKD", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "A0", ",", "A1", ",", "A2", ",", "dG", ",", "\[CapitalLambda]", ",", 
       "Ea"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dG", "=", 
       RowBox[{"\[CapitalDelta]", "*", "kcal2au"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"\[Lambda]", "*", "kcal2au"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "=", 
       RowBox[{"prefactor", "*", 
        SuperscriptBox["V", "2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A1", "=", 
       RowBox[{"QFWD", "[", 
        RowBox[{
        "T", ",", "R", ",", "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j", ",",
          "PC"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A2", "=", 
       SqrtBox[
        FractionBox["\[Pi]", 
         RowBox[{"kb", " ", "T", " ", "\[CapitalLambda]"}]]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Ea", "=", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"dG", "+", "\[CapitalLambda]", "+", 
           RowBox[{"E2D", "[", "j", "]"}], "-", 
           RowBox[{"E2D", "[", "0", "]"}], "-", 
           RowBox[{"E1D", "[", "i", "]"}], "+", 
           RowBox[{"E1D", "[", "0", "]"}]}], ")"}], "2"], 
        RowBox[{"4", "\[CapitalLambda]"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "*", "A1", "*", "A2", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         FractionBox["Ea", 
          RowBox[{"kb", " ", "T"}]]}], "]"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RateLUKD", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "A0", ",", "A1", ",", "A2", ",", "dG", ",", "\[CapitalLambda]", ",", 
       "Ea"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dG", "=", 
       RowBox[{"\[CapitalDelta]", "*", "kcal2au"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"\[Lambda]", "*", "kcal2au"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "=", 
       RowBox[{"prefactor", "*", 
        SuperscriptBox["V", "2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A1", "=", 
       RowBox[{"LFWD", "[", 
        RowBox[{
        "T", ",", "R", ",", "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j", ",",
          "PC"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A2", "=", 
       SqrtBox[
        FractionBox["\[Pi]", 
         RowBox[{"kb", " ", "T", " ", "\[CapitalLambda]"}]]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Ea", "=", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"dG", "+", "\[CapitalLambda]", "+", 
           RowBox[{"E2D", "[", "j", "]"}], "-", 
           RowBox[{"E2D", "[", "0", "]"}], "-", 
           RowBox[{"E1D", "[", "i", "]"}], "+", 
           RowBox[{"E1D", "[", "0", "]"}]}], ")"}], "2"], 
        RowBox[{"4", "\[CapitalLambda]"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A0", "*", "A1", "*", "A2", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         FractionBox["Ea", 
          RowBox[{"kb", " ", "T"}]]}], "]"}]}]}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.651596574741912*^9, 3.651596578500856*^9}, {
  3.65161398989845*^9, 3.6516140009304028`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TotalrateUKH", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PCH", "[", 
         RowBox[{"T", ",", "i", ",", "n"}], "]"}], 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"RateUKH", "[", 
           RowBox[{
           "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", 
            "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "m"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TotalrateUKGH", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "A_", ",", "B_", 
     ",", "n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PCH", "[", 
         RowBox[{"T", ",", "i", ",", "n"}], "]"}], 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"RateUKGH", "[", 
           RowBox[{
           "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "A", ",", "B", 
            ",", "i", ",", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "m"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TotalrateQUKH", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PCH", "[", 
         RowBox[{"T", ",", "i", ",", "n"}], "]"}], 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"RateQUKH", "[", 
           RowBox[{
           "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", 
            "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "m"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TotalrateLUKH", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PCH", "[", 
         RowBox[{"T", ",", "i", ",", "n"}], "]"}], 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"RateLUKH", "[", 
           RowBox[{
           "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", 
            "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "m"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.651614043817553*^9, 3.651614067537167*^9}, {
  3.6835729033151484`*^9, 3.683572931090788*^9}},
 CellID->387247735],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TotalrateUKD", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PCD", "[", 
         RowBox[{"T", ",", "i", ",", "n"}], "]"}], 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"RateUKD", "[", 
           RowBox[{
           "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", 
            "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "m"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TotalrateUKGD", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "A_", ",", "B_", 
     ",", "n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PCD", "[", 
         RowBox[{"T", ",", "i", ",", "n"}], "]"}], 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"RateUKGD", "[", 
           RowBox[{
           "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "A", ",", "B", 
            ",", "i", ",", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "m"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TotalrateQUKD", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PCD", "[", 
         RowBox[{"T", ",", "i", ",", "n"}], "]"}], 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"RateQUKD", "[", 
           RowBox[{
           "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", 
            "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "m"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TotalrateLUKD", "[", 
    RowBox[{
    "T_", ",", "\[CapitalDelta]_", ",", "\[Lambda]_", ",", "R_", ",", 
     "\[Mu]_", ",", "\[Omega]_", ",", "n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PCD", "[", 
         RowBox[{"T", ",", "i", ",", "n"}], "]"}], 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"RateLUKD", "[", 
           RowBox[{
           "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", 
            "\[Mu]", ",", "\[Omega]", ",", "i", ",", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "m"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.651614007913974*^9, 3.651614008211417*^9}, {
  3.651614073969101*^9, 3.65161409175284*^9}, {3.683572941715487*^9, 
  3.6835729521225843`*^9}},
 CellID->1597231735],

Cell[BoxData[{
 RowBox[{
  RowBox[{"KIEUK", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", "\[Mu]", 
       ",", "\[Omega]", ",", "n", ",", "m"}], "}"}], ",", 
     FractionBox[
      RowBox[{"TotalrateUKH", "[", 
       RowBox[{
       "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", "\[Mu]", 
        ",", "\[Omega]", ",", "n", ",", "m"}], "]"}], 
      RowBox[{"TotalrateUKD", "[", 
       RowBox[{
       "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", "\[Mu]", 
        ",", "\[Omega]", ",", "n", ",", "m"}], "]"}]]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KIEUKG", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "A", ",", "B", ",", 
       "n", ",", "m"}], "}"}], ",", 
     FractionBox[
      RowBox[{"TotalrateUKGH", "[", 
       RowBox[{
       "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "A", ",", "B", ",",
         "n", ",", "m"}], "]"}], 
      RowBox[{"TotalrateUKGD", "[", 
       RowBox[{
       "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "A", ",", "B", ",",
         "n", ",", "m"}], "]"}]]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KIEQUK", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", "\[Mu]", 
       ",", "\[Omega]", ",", "n", ",", "m"}], "}"}], ",", 
     FractionBox[
      RowBox[{"TotalrateQUKH", "[", 
       RowBox[{
       "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", "\[Mu]", 
        ",", "\[Omega]", ",", "n", ",", "m"}], "]"}], 
      RowBox[{"TotalrateQUKD", "[", 
       RowBox[{
       "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", "\[Mu]", 
        ",", "\[Omega]", ",", "n", ",", "m"}], "]"}]]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KIELUK", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", "\[Mu]", 
       ",", "\[Omega]", ",", "n", ",", "m"}], "}"}], ",", 
     FractionBox[
      RowBox[{"TotalrateLUKH", "[", 
       RowBox[{
       "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", "\[Mu]", 
        ",", "\[Omega]", ",", "n", ",", "m"}], "]"}], 
      RowBox[{"TotalrateLUKD", "[", 
       RowBox[{
       "T", ",", "\[CapitalDelta]", ",", "\[Lambda]", ",", "R", ",", "\[Mu]", 
        ",", "\[Omega]", ",", "n", ",", "m"}], "]"}]]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.651614096224655*^9, 3.651614124496499*^9}, {
  3.683572962051675*^9, 3.683573001353752*^9}},
 CellID->1128182645]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1629, 1242},
WindowMargins->{{438, Automatic}, {41, Automatic}},
DockedCells->(FrontEndExecute[{
   FrontEnd`NotebookApply[
    FrontEnd`InputNotebook[], #, Placeholder]}]& ),
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{611.25, 789.5625},
"PostScriptOutputFile"->"/HOME/sarah/ACTIVE/Work_anal/KIE.nb.ps"},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 729, 13, 113, "Title"],
Cell[CellGroupData[{
Cell[1321, 39, 104, 2, 39, "Input"],
Cell[1428, 43, 589, 8, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2054, 56, 96, 1, 80, "Section"],
Cell[CellGroupData[{
Cell[2175, 61, 104, 1, 54, "Subsection"],
Cell[2282, 64, 1250, 35, 346, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3569, 104, 107, 1, 54, "Subsection"],
Cell[3679, 107, 756, 20, 193, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4472, 132, 107, 1, 54, "Subsection"],
Cell[4582, 135, 283, 5, 39, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4914, 146, 192, 2, 80, "Section"],
Cell[CellGroupData[{
Cell[5131, 152, 148, 2, 54, "Subsection"],
Cell[5282, 156, 460, 9, 66, "Input"],
Cell[5745, 167, 226, 5, 37, "Text"],
Cell[5974, 174, 531, 16, 66, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6542, 195, 191, 5, 85, "Subsection"],
Cell[6736, 202, 569, 18, 43, "Text"],
Cell[7308, 222, 749, 17, 75, "Input"],
Cell[CellGroupData[{
Cell[8082, 243, 1492, 35, 207, "Input"],
Cell[CellGroupData[{
Cell[9599, 282, 498, 11, 50, "Print"],
Cell[10100, 295, 502, 11, 50, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10651, 312, 1592, 36, 207, "Input"],
Cell[CellGroupData[{
Cell[12268, 352, 512, 11, 50, "Print"],
Cell[12783, 365, 518, 11, 50, "Print"]
}, Open  ]]
}, Open  ]],
Cell[13328, 380, 222, 3, 37, "Text"],
Cell[13553, 385, 738, 25, 67, "Input"],
Cell[CellGroupData[{
Cell[14316, 414, 234, 7, 85, "Input"],
Cell[14553, 423, 136, 2, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14726, 430, 204, 4, 59, "Input"],
Cell[14933, 436, 136, 2, 39, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15130, 445, 254, 5, 80, "Section"],
Cell[15387, 452, 94, 1, 37, "Text"],
Cell[15484, 455, 794, 26, 253, "Input"],
Cell[16281, 483, 229, 3, 37, "Text"],
Cell[16513, 488, 623, 16, 67, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[17173, 509, 265, 5, 62, "Section"],
Cell[17441, 516, 91, 1, 37, "Text"],
Cell[17535, 519, 666, 16, 58, "Input"],
Cell[18204, 537, 98, 1, 37, "Text"],
Cell[18305, 540, 1545, 43, 79, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[19887, 588, 454, 13, 111, "Section"],
Cell[20344, 603, 433, 12, 68, "Input"],
Cell[20780, 617, 406, 12, 68, "Input"],
Cell[21189, 631, 388, 12, 68, "Input"],
Cell[21580, 645, 389, 12, 68, "Input"],
Cell[21972, 659, 522, 14, 39, "Input"],
Cell[22497, 675, 503, 14, 39, "Input"],
Cell[23003, 691, 497, 14, 39, "Input"],
Cell[23503, 707, 500, 14, 39, "Input"],
Cell[24006, 723, 866, 27, 86, "Input"],
Cell[24875, 752, 891, 27, 86, "Input"],
Cell[25769, 781, 865, 27, 86, "Input"],
Cell[26637, 810, 823, 26, 86, "Input"],
Cell[27463, 838, 690, 21, 70, "Input"],
Cell[28156, 861, 686, 21, 70, "Input"],
Cell[28845, 884, 689, 21, 70, "Input"],
Cell[29537, 907, 685, 21, 70, "Input"],
Cell[30225, 930, 1030, 28, 58, "Input"],
Cell[31258, 960, 891, 26, 58, "Input"],
Cell[32152, 988, 883, 26, 58, "Input"],
Cell[33038, 1016, 893, 26, 58, "Input"],
Cell[33934, 1044, 107, 1, 37, "Text"],
Cell[34044, 1047, 855, 23, 202, "Input"],
Cell[CellGroupData[{
Cell[34924, 1074, 376, 7, 39, "Input"],
Cell[35303, 1083, 1015, 18, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[36367, 1107, 430, 9, 92, "Section"],
Cell[36800, 1118, 3880, 108, 631, "Input"],
Cell[40683, 1228, 3730, 106, 631, "Input"],
Cell[44416, 1336, 1369, 39, 186, "Input"],
Cell[45788, 1377, 2883, 83, 369, "Input"],
Cell[CellGroupData[{
Cell[48696, 1464, 196, 4, 39, "Input"],
Cell[48895, 1470, 736, 13, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49668, 1488, 201, 4, 39, "Input"],
Cell[49872, 1494, 732, 13, 70, "Output"]
}, Open  ]],
Cell[50619, 1510, 2805, 72, 233, "Input"],
Cell[53427, 1584, 134, 4, 61, "Text"],
Cell[53564, 1590, 1771, 52, 86, "Input"],
Cell[55338, 1644, 1673, 50, 86, "Input"],
Cell[CellGroupData[{
Cell[57036, 1698, 2220, 51, 196, "Input"],
Cell[59259, 1751, 70665, 1184, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[129973, 2941, 444, 9, 89, "Section"],
Cell[130420, 2952, 95, 1, 37, "Text"],
Cell[130518, 2955, 22262, 514, 1557, "Input"],
Cell[152783, 3471, 18077, 457, 1531, "Input"],
Cell[170863, 3930, 295, 10, 39, "Text"],
Cell[171161, 3942, 12561, 332, 963, "Input"],
Cell[183725, 4276, 12250, 328, 937, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[196012, 4609, 141, 1, 62, "Section"],
Cell[196156, 4612, 4942, 104, 339, "Input"],
Cell[201101, 4718, 3946, 91, 339, "Input"],
Cell[205050, 4811, 1103, 25, 118, "Input"],
Cell[206156, 4838, 906, 22, 118, "Input"],
Cell[207065, 4862, 2905, 63, 297, "Input"],
Cell[209973, 4927, 4116, 87, 349, "Input"],
Cell[214092, 5016, 2409, 56, 245, "Input"],
Cell[216504, 5074, 2313, 62, 349, "Input"],
Cell[218820, 5138, 199, 5, 61, "Text"],
Cell[219022, 5145, 481, 13, 66, "Input"],
Cell[219506, 5160, 2764, 69, 349, "Input"],
Cell[222273, 5231, 2832, 80, 451, "Input"],
Cell[225108, 5313, 2434, 65, 349, "Input"],
Cell[227545, 5380, 2781, 79, 451, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[230363, 5464, 186, 2, 62, "Section"],
Cell[CellGroupData[{
Cell[230574, 5470, 199, 4, 39, "Input"],
Cell[230776, 5476, 157, 2, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230970, 5483, 315, 8, 40, "Input"],
Cell[231288, 5493, 236, 3, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231561, 5501, 1240, 29, 207, "Input"],
Cell[232804, 5532, 4563, 90, 310, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237404, 5627, 1203, 32, 170, "Input"],
Cell[238610, 5661, 15031, 258, 281, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253678, 5924, 14871, 383, 1054, "Input"],
Cell[268552, 6309, 392014, 6499, 500, 348343, 5784, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[660603, 12813, 877, 20, 39, "Input"],
Cell[661483, 12835, 9785, 198, 74, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[671305, 13038, 546, 12, 39, "Input"],
Cell[671854, 13052, 38074, 658, 300, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[709965, 13715, 789, 19, 39, "Input"],
Cell[710757, 13736, 1912, 36, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[712706, 13777, 592, 17, 39, "Input"],
Cell[713301, 13796, 1734, 33, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[715072, 13834, 695, 18, 48, "Input"],
Cell[715770, 13854, 1819, 34, 145, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[717626, 13893, 471, 15, 48, "Input"],
Cell[718100, 13910, 1665, 32, 145, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[719802, 13947, 157, 2, 67, "Subsection"],
Cell[719962, 13951, 1828, 53, 107, "Input"],
Cell[721793, 14006, 1737, 52, 107, "Input"],
Cell[CellGroupData[{
Cell[723555, 14062, 3586, 80, 472, "Input"],
Cell[727144, 14144, 611, 11, 36, "Message"],
Cell[727758, 14157, 609, 11, 36, "Message"],
Cell[728370, 14170, 609, 11, 36, "Message"],
Cell[728982, 14183, 602, 11, 36, "Message"],
Cell[729587, 14196, 48119, 824, 317, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[777743, 15025, 2772, 66, 440, "Input"],
Cell[780518, 15093, 601, 11, 36, "Message"],
Cell[781122, 15106, 601, 11, 36, "Message"],
Cell[781726, 15119, 603, 11, 36, "Message"],
Cell[782332, 15132, 596, 11, 36, "Message"],
Cell[782931, 15145, 14485, 274, 317, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[797453, 15424, 2727, 65, 440, "Input"],
Cell[800183, 15491, 602, 11, 36, "Message"],
Cell[800788, 15504, 605, 11, 36, "Message"],
Cell[801396, 15517, 603, 11, 36, "Message"],
Cell[802002, 15530, 596, 11, 36, "Message"],
Cell[802601, 15543, 14639, 277, 317, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[817289, 15826, 124, 1, 67, "Subsection"],
Cell[817416, 15829, 215, 5, 48, "Input"],
Cell[817634, 15836, 360, 6, 48, "Input"],
Cell[817997, 15844, 954, 24, 82, "Input"],
Cell[818954, 15870, 1530, 34, 48, "Input"],
Cell[820487, 15906, 955, 21, 48, "Input"],
Cell[821445, 15929, 954, 24, 82, "Input"],
Cell[822402, 15955, 1407, 32, 48, "Input"],
Cell[823812, 15989, 1016, 22, 48, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[824877, 16017, 143, 1, 100, "Section"],
Cell[825023, 16020, 149, 4, 76, "Text"],
Cell[825175, 16026, 735, 17, 82, "Input"],
Cell[825913, 16045, 159, 3, 48, "Input"],
Cell[826075, 16050, 505, 15, 82, "Input"],
Cell[826583, 16067, 665, 18, 147, "Input"],
Cell[827251, 16087, 2219, 58, 147, "Input"],
Cell[CellGroupData[{
Cell[829495, 16149, 79, 2, 48, "Input"],
Cell[829577, 16153, 8998, 186, 160, "Output"]
}, Open  ]],
Cell[838590, 16342, 71, 1, 48, "Input"],
Cell[CellGroupData[{
Cell[838686, 16347, 3242, 81, 310, "Input"],
Cell[841931, 16430, 22462, 455, 596, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[864442, 16891, 336, 4, 100, "Section"],
Cell[864781, 16897, 260, 7, 46, "Text"],
Cell[865044, 16906, 1437, 37, 106, "Input"],
Cell[866484, 16945, 1201, 32, 107, "Input"],
Cell[867688, 16979, 492, 14, 50, "Text"],
Cell[868183, 16995, 634, 18, 75, "Input"],
Cell[868820, 17015, 229, 6, 76, "Text"],
Cell[869052, 17023, 575, 13, 48, "Input",
 CellID->242297082],
Cell[869630, 17038, 9592, 226, 967, "Input"],
Cell[879225, 17266, 8079, 205, 805, "Input"],
Cell[887307, 17473, 200, 5, 76, "Text"],
Cell[887510, 17480, 17375, 427, 1918, "Input"],
Cell[904888, 17909, 244, 6, 76, "Text"],
Cell[905135, 17917, 16738, 430, 1987, "Input"],
Cell[921876, 18349, 16592, 428, 1987, "Input"],
Cell[CellGroupData[{
Cell[938493, 18781, 96, 1, 67, "Subsection"],
Cell[938592, 18784, 1938, 49, 391, "Input",
 CellID->1486185260],
Cell[940533, 18835, 3731, 96, 767, "Input"],
Cell[944267, 18933, 1917, 49, 391, "Input",
 CellID->933366563],
Cell[946187, 18984, 3735, 96, 767, "Input"],
Cell[949925, 19082, 940, 27, 48, "Input",
 CellID->1871266653],
Cell[950868, 19111, 1962, 54, 82, "Input"],
Cell[952833, 19167, 939, 27, 48, "Input",
 CellID->480626656],
Cell[953775, 19196, 1960, 54, 82, "Input"],
Cell[955738, 19252, 706, 19, 78, "Input",
 CellID->1206211025],
Cell[956447, 19273, 1498, 38, 146, "Input"],
Cell[957948, 19313, 1887, 48, 391, "Input",
 CellID->543069495],
Cell[959838, 19363, 1872, 48, 391, "Input",
 CellID->547130243],
Cell[961713, 19413, 3726, 96, 767, "Input"],
Cell[965442, 19511, 1889, 48, 391, "Input",
 CellID->563502715],
Cell[967334, 19561, 1805, 46, 391, "Input"],
Cell[969142, 19609, 3734, 96, 767, "Input"],
Cell[972879, 19707, 3773, 107, 147, "Input",
 CellID->387247735],
Cell[976655, 19816, 3822, 108, 147, "Input",
 CellID->1597231735],
Cell[980480, 19926, 2812, 74, 281, "Input",
 CellID->1128182645]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

